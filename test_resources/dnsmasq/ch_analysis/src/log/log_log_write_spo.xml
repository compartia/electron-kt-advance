<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="log_write">
   <secondary-proof-obligations max-spo-id="282" num-ppo="272">
    <indirect-calls/>
    <callsite-obligations>
     <callsite-obligation api-max-id="3" fname="my_syslog" fvid="4917">
      <location byte="190768" file="src/log.c" line="268"/>
      <args>
       <arg etag="const" xstr="2">
        <constant ctag="cint64" ikind="iint" intValue="2"/>
       </arg>
       <arg etag="const" xstr="&quot;log failed: %s&quot;">
        <constant ctag="cstr" strValue="log failed: %s"/>
       </arg>
       <arg etag="lval" xstr="tmp___21">
        <lval>
         <lhost>
          <var vid="5988" vname="tmp___21"/>
         </lhost>
        </lval>
       </arg>
      </args>
      <obligations>
       <obligation api-id="2" id="275">
        <predicate op="pluspi" tag="ptr-upper-bound">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
         <exp1 etag="const" xstr="&quot;log failed: %s&quot;">
          <constant ctag="cstr" strValue="log failed: %s"/>
         </exp1>
         <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;log failed: %s&quot;:(char*))]">
          <arg etag="caste" xstr="caste (&quot;log failed: %s&quot;:(char*))">
           <typ ttag="tptr">
            <attributes>
             <attr attrname="restrict"/>
            </attributes>
            <typ ikind="ichar" ttag="tint">
             <attributes>
              <attr attrname="const"/>
             </attributes>
            </typ>
           </typ>
           <exp etag="const" xstr="&quot;log failed: %s&quot;">
            <constant ctag="cstr" strValue="log failed: %s"/>
           </exp>
          </arg>
          <typ ikind="iint" ttag="tint"/>
         </exp2>
        </predicate>
       </obligation>
       <obligation api-id="3" id="274">
        <predicate tag="initialized-range">
         <base-exp etag="const" xstr="&quot;log failed: %s&quot;">
          <constant ctag="cstr" strValue="log failed: %s"/>
         </base-exp>
         <len-exp etag="const" xstr="&quot;log failed: %s&quot;">
          <constant ctag="cstr" strValue="log failed: %s"/>
         </len-exp>
        </predicate>
       </obligation>
       <obligation api-id="1" id="273">
        <predicate tag="not-null">
         <exp etag="const" xstr="&quot;log failed: %s&quot;">
          <constant ctag="cstr" strValue="log failed: %s"/>
         </exp>
        </predicate>
       </obligation>
      </obligations>
      <context>
       <cfg-context>
        <node name="instr" num="3"/>
        <node name="stmt" num="129"/>
        <node name="loop"/>
        <node name="stmt" num="40"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="2" fname="log_reopen" fvid="4912">
      <location byte="190681" file="src/log.c" line="259"/>
      <args>
       <arg etag="caste" xstr="caste (caste (0:(void*)):(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="caste" xstr="caste (0:(void*))">
         <typ ttag="tptr">
          <typ ttag="tvoid"/>
         </typ>
         <exp etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </exp>
        </exp>
       </arg>
      </args>
      <obligations>
       <obligation api-id="2" id="277">
        <predicate op="pluspi" tag="ptr-upper-bound">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
         <exp1 etag="caste" xstr="caste (caste (0:(void*)):(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="caste" xstr="caste (0:(void*))">
           <typ ttag="tptr">
            <typ ttag="tvoid"/>
           </typ>
           <exp etag="const" xstr="0">
            <constant ctag="cint64" ikind="iint" intValue="0"/>
           </exp>
          </exp>
         </exp1>
         <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (caste (caste (0:(void*)):(char*)):(char*))]">
          <arg etag="caste" xstr="caste (caste (caste (0:(void*)):(char*)):(char*))">
           <typ ttag="tptr">
            <typ ikind="ichar" ttag="tint">
             <attributes>
              <attr attrname="const"/>
             </attributes>
            </typ>
           </typ>
           <exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
            <exp etag="caste" xstr="caste (0:(void*))">
             <typ ttag="tptr">
              <typ ttag="tvoid"/>
             </typ>
             <exp etag="const" xstr="0">
              <constant ctag="cint64" ikind="iint" intValue="0"/>
             </exp>
            </exp>
           </exp>
          </arg>
          <typ ikind="iint" ttag="tint"/>
         </exp2>
        </predicate>
       </obligation>
       <obligation api-id="1" id="276">
        <predicate tag="initialized-range">
         <base-exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="caste" xstr="caste (0:(void*))">
           <typ ttag="tptr">
            <typ ttag="tvoid"/>
           </typ>
           <exp etag="const" xstr="0">
            <constant ctag="cint64" ikind="iint" intValue="0"/>
           </exp>
          </exp>
         </base-exp>
         <len-exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="caste" xstr="caste (0:(void*))">
           <typ ttag="tptr">
            <typ ttag="tvoid"/>
           </typ>
           <exp etag="const" xstr="0">
            <constant ctag="cint64" ikind="iint" intValue="0"/>
           </exp>
          </exp>
         </len-exp>
        </predicate>
       </obligation>
      </obligations>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="126"/>
        <node name="if-then"/>
        <node name="stmt" num="122"/>
        <node name="if-then"/>
        <node name="stmt" num="89"/>
        <node name="if-else"/>
        <node name="stmt" num="86"/>
        <node name="if-else"/>
        <node name="stmt" num="83"/>
        <node name="if-else"/>
        <node name="stmt" num="80"/>
        <node name="if-else"/>
        <node name="stmt" num="75"/>
        <node name="if-then"/>
        <node name="stmt" num="73"/>
        <node name="loop"/>
        <node name="stmt" num="40"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="2" fname="log_reopen" fvid="4912">
      <location byte="189791" file="src/log.c" line="215"/>
      <args>
       <arg etag="caste" xstr="caste (caste (0:(void*)):(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="caste" xstr="caste (0:(void*))">
         <typ ttag="tptr">
          <typ ttag="tvoid"/>
         </typ>
         <exp etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </exp>
        </exp>
       </arg>
      </args>
      <obligations>
       <obligation api-id="2" id="279">
        <predicate op="pluspi" tag="ptr-upper-bound">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
         <exp1 etag="caste" xstr="caste (caste (0:(void*)):(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="caste" xstr="caste (0:(void*))">
           <typ ttag="tptr">
            <typ ttag="tvoid"/>
           </typ>
           <exp etag="const" xstr="0">
            <constant ctag="cint64" ikind="iint" intValue="0"/>
           </exp>
          </exp>
         </exp1>
         <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (caste (caste (0:(void*)):(char*)):(char*))]">
          <arg etag="caste" xstr="caste (caste (caste (0:(void*)):(char*)):(char*))">
           <typ ttag="tptr">
            <typ ikind="ichar" ttag="tint">
             <attributes>
              <attr attrname="const"/>
             </attributes>
            </typ>
           </typ>
           <exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
            <exp etag="caste" xstr="caste (0:(void*))">
             <typ ttag="tptr">
              <typ ttag="tvoid"/>
             </typ>
             <exp etag="const" xstr="0">
              <constant ctag="cint64" ikind="iint" intValue="0"/>
             </exp>
            </exp>
           </exp>
          </arg>
          <typ ikind="iint" ttag="tint"/>
         </exp2>
        </predicate>
       </obligation>
       <obligation api-id="1" id="278">
        <predicate tag="initialized-range">
         <base-exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="caste" xstr="caste (0:(void*))">
           <typ ttag="tptr">
            <typ ttag="tvoid"/>
           </typ>
           <exp etag="const" xstr="0">
            <constant ctag="cint64" ikind="iint" intValue="0"/>
           </exp>
          </exp>
         </base-exp>
         <len-exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="caste" xstr="caste (0:(void*))">
           <typ ttag="tptr">
            <typ ttag="tvoid"/>
           </typ>
           <exp etag="const" xstr="0">
            <constant ctag="cint64" ikind="iint" intValue="0"/>
           </exp>
          </exp>
         </len-exp>
        </predicate>
       </obligation>
      </obligations>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="76"/>
        <node name="if-then"/>
        <node name="stmt" num="75"/>
        <node name="if-then"/>
        <node name="stmt" num="73"/>
        <node name="loop"/>
        <node name="stmt" num="40"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="3" fname="my_syslog" fvid="4917">
      <location byte="189414" file="src/log.c" line="190"/>
      <args>
       <arg etag="const" xstr="4">
        <constant ctag="cint64" ikind="iint" intValue="4"/>
       </arg>
       <arg etag="const" xstr="&quot;overflow: %d log entries lost&quot;">
        <constant ctag="cstr" strValue="overflow: %d log entries lost"/>
       </arg>
       <arg etag="lval" xstr="e">
        <lval>
         <lhost>
          <var vid="5943" vname="e"/>
         </lhost>
        </lval>
       </arg>
      </args>
      <obligations>
       <obligation api-id="2" id="282">
        <predicate op="pluspi" tag="ptr-upper-bound">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
         <exp1 etag="const" xstr="&quot;overflow: %d log entries lost&quot;">
          <constant ctag="cstr" strValue="overflow: %d log entries lost"/>
         </exp1>
         <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;overflow: %d log entries lost&quot;:(char*))]">
          <arg etag="caste" xstr="caste (&quot;overflow: %d log entries lost&quot;:(char*))">
           <typ ttag="tptr">
            <attributes>
             <attr attrname="restrict"/>
            </attributes>
            <typ ikind="ichar" ttag="tint">
             <attributes>
              <attr attrname="const"/>
             </attributes>
            </typ>
           </typ>
           <exp etag="const" xstr="&quot;overflow: %d log entries lost&quot;">
            <constant ctag="cstr" strValue="overflow: %d log entries lost"/>
           </exp>
          </arg>
          <typ ikind="iint" ttag="tint"/>
         </exp2>
        </predicate>
       </obligation>
       <obligation api-id="3" id="281">
        <predicate tag="initialized-range">
         <base-exp etag="const" xstr="&quot;overflow: %d log entries lost&quot;">
          <constant ctag="cstr" strValue="overflow: %d log entries lost"/>
         </base-exp>
         <len-exp etag="const" xstr="&quot;overflow: %d log entries lost&quot;">
          <constant ctag="cstr" strValue="overflow: %d log entries lost"/>
         </len-exp>
        </predicate>
       </obligation>
       <obligation api-id="1" id="280">
        <predicate tag="not-null">
         <exp etag="const" xstr="&quot;overflow: %d log entries lost&quot;">
          <constant ctag="cstr" strValue="overflow: %d log entries lost"/>
         </exp>
        </predicate>
       </obligation>
      </obligations>
      <context>
       <cfg-context>
        <node name="instr" num="2"/>
        <node name="stmt" num="58"/>
        <node name="if-then"/>
        <node name="stmt" num="57"/>
        <node name="if-then"/>
        <node name="stmt" num="55"/>
        <node name="if-then"/>
        <node name="stmt" num="53"/>
        <node name="loop"/>
        <node name="stmt" num="40"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="0" fname="free_entry" fvid="5935">
      <location byte="189314" file="src/log.c" line="185"/>
      <args/>
      <obligations/>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="56"/>
        <node name="if-then"/>
        <node name="stmt" num="55"/>
        <node name="if-then"/>
        <node name="stmt" num="53"/>
        <node name="loop"/>
        <node name="stmt" num="40"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="0" fname="free_entry" fvid="5935">
      <location byte="189044" file="src/log.c" line="173"/>
      <args/>
      <obligations/>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="50"/>
        <node name="if-then"/>
        <node name="stmt" num="49"/>
        <node name="loop"/>
        <node name="stmt" num="40"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
    </callsite-obligations>
    <return-sites/>
    <post-expectations/>
    <ds-expectations/>
   </secondary-proof-obligations>
  </function>
  <header time="01/10/2017 05:33:34">
   <application file="src/log.c" name="application"/>
  </header>
 </c-analysis>
