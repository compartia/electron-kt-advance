<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="die">
   <statistics avg-context-complexity="0.26" avg-predicate-complexity="0.91" context-complexity="9" predicate-complexity="32" size="35"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="6">
     <location byte="193685" file="src/log.c" line="457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp">
         <lval>
          <lhost>
           <var vid="6036" vname="tmp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="214"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="193685" file="src/log.c" line="457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6036" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="214"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-lval" p-complexity="1">
     <location byte="193685" file="src/log.c" line="457"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6036" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="214"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-lval" p-complexity="1">
     <location byte="193685" file="src/log.c" line="457"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6036" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="214"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-lval" p-complexity="1">
     <location byte="193685" file="src/log.c" line="457"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6036" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="214"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-lval" p-complexity="1">
     <location byte="193685" file="src/log.c" line="457"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6036" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="214"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="0">
     <location byte="193685" file="src/log.c" line="457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6038" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="214"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="0">
     <location byte="193738" file="src/log.c" line="459"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6033" vname="arg1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="215"/>
      </cfg-context>
      <exp-context>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="9" origin="prim-exp" p-complexity="0">
     <location byte="193753" file="src/log.c" line="460"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6035" vname="errmess"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="216"/>
       <node name="if-then"/>
       <node name="stmt" num="215"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="10" origin="prim-exp" p-complexity="0">
     <location byte="193772" file="src/log.c" line="462"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5901" vname="log_stderr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="fputc" id="11" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="193824" file="src/log.c" line="465"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="218"/>
       <node name="if-then"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="stream" nr="2" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>stream</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="fputc" id="12" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="193824" file="src/log.c" line="465"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="218"/>
       <node name="if-then"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="stream" nr="2" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>stream</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="fputc" id="13" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="193824" file="src/log.c" line="465"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="218"/>
       <node name="if-then"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="stream" nr="2" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>stream</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="fputc" id="14" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="193824" file="src/log.c" line="465"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="stderr">
         <lval>
          <lhost>
           <var vid="2438" vname="stderr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="218"/>
       <node name="if-then"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="stream" nr="2" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>stream</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="15" origin="prim-exp" p-complexity="0">
     <location byte="193824" file="src/log.c" line="465"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="2438" vname="stderr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="218"/>
       <node name="if-then"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="16" origin="prim-exp" p-complexity="1">
     <location byte="193824" file="src/log.c" line="465"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="218"/>
       <node name="if-then"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="17" origin="prim-exp" p-complexity="1">
     <location byte="193824" file="src/log.c" line="465"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="218"/>
       <node name="if-then"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="18" origin="prim-exp" p-complexity="1">
     <location byte="193824" file="src/log.c" line="465"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="stderr">
       <lval>
        <lhost>
         <var vid="2438" vname="stderr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="218"/>
       <node name="if-then"/>
       <node name="stmt" num="217"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="19" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="message">
       <lval>
        <lhost>
         <var vid="6032" vname="message"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="20" origin="prim-exp" p-complexity="0">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6032" vname="message"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="21" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (message:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="message">
        <lval>
         <lhost>
          <var vid="6032" vname="message"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="22" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (message:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="message">
        <lval>
         <lhost>
          <var vid="6032" vname="message"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="23" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (message:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="message">
        <lval>
         <lhost>
          <var vid="6032" vname="message"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="24" origin="prim-exp" p-complexity="0">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6033" vname="arg1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="25" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="arg1">
       <lval>
        <lhost>
         <var vid="6033" vname="arg1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="26" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="arg1">
       <lval>
        <lhost>
         <var vid="6033" vname="arg1"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="27" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="arg1">
       <lval>
        <lhost>
         <var vid="6033" vname="arg1"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="28" origin="prim-exp" p-complexity="0">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6035" vname="errmess"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="29" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="errmess">
       <lval>
        <lhost>
         <var vid="6035" vname="errmess"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="30" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="errmess">
       <lval>
        <lhost>
         <var vid="6035" vname="errmess"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="31" origin="prim-exp" p-complexity="1">
     <location byte="193853" file="src/log.c" line="467"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="errmess">
       <lval>
        <lhost>
         <var vid="6035" vname="errmess"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="32" origin="prim-exp" p-complexity="0">
     <location byte="193912" file="src/log.c" line="469"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;FAILED to start up&quot;">
       <constant ctag="cstr" strValue="FAILED to start up"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="33" origin="prim-exp" p-complexity="0">
     <location byte="193912" file="src/log.c" line="469"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;FAILED to start up&quot;">
       <constant ctag="cstr" strValue="FAILED to start up"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="34" origin="prim-exp" p-complexity="0">
     <location byte="193912" file="src/log.c" line="469"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;FAILED to start up&quot;">
       <constant ctag="cstr" strValue="FAILED to start up"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="35" origin="prim-exp" p-complexity="0">
     <location byte="193968" file="src/log.c" line="472"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6034" vname="exit_code"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="219"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:38">
   <application file="src/log.xml" name="application"/>
  </header>
 </c-analysis>
