<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="eatspace">
   <statistics avg-context-complexity="6.19" avg-predicate-complexity="1.31" context-complexity="223" predicate-complexity="47" size="36"/>
   <unconstrained-external-functions>
    <efn name="stdio/ungetc" num="1"/>
    <efn name="libio/_IO_getc" num="2"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="5" id="1" origin="prim-exp" p-complexity="0">
     <location byte="202086" file="src/cache.c" line="871"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6140" vname="f"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="409"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="2" origin="prim-exp" p-complexity="1">
     <location byte="202086" file="src/cache.c" line="871"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="409"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="3" origin="prim-exp" p-complexity="1">
     <location byte="202086" file="src/cache.c" line="871"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="409"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="4" origin="prim-exp" p-complexity="1">
     <location byte="202086" file="src/cache.c" line="871"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="409"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="5" origin="prim-exp" p-complexity="0">
     <location byte="202086" file="src/cache.c" line="871"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6141" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="410"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="6" origin="prim-exp" p-complexity="0">
     <location byte="202118" file="src/cache.c" line="872"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6141" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="412"/>
       <node name="loop"/>
       <node name="stmt" num="411"/>
       <node name="if-then"/>
       <node name="stmt" num="410"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="7" origin="prim-exp" p-complexity="0">
     <location byte="202118" file="src/cache.c" line="872"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6141" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="413"/>
       <node name="if-then"/>
       <node name="stmt" num="412"/>
       <node name="loop"/>
       <node name="stmt" num="411"/>
       <node name="if-then"/>
       <node name="stmt" num="410"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="8" origin="prim-exp" p-complexity="0">
     <location byte="202152" file="src/cache.c" line="873"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6140" vname="f"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="416"/>
       <node name="loop"/>
       <node name="stmt" num="411"/>
       <node name="if-then"/>
       <node name="stmt" num="410"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="9" origin="prim-exp" p-complexity="1">
     <location byte="202152" file="src/cache.c" line="873"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="416"/>
       <node name="loop"/>
       <node name="stmt" num="411"/>
       <node name="if-then"/>
       <node name="stmt" num="410"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="10" origin="prim-exp" p-complexity="1">
     <location byte="202152" file="src/cache.c" line="873"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="416"/>
       <node name="loop"/>
       <node name="stmt" num="411"/>
       <node name="if-then"/>
       <node name="stmt" num="410"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="11" origin="prim-exp" p-complexity="1">
     <location byte="202152" file="src/cache.c" line="873"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="416"/>
       <node name="loop"/>
       <node name="stmt" num="411"/>
       <node name="if-then"/>
       <node name="stmt" num="410"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="12" origin="prim-exp" p-complexity="0">
     <location byte="202177" file="src/cache.c" line="875"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6141" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="417"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="13" origin="prim-exp" p-complexity="1">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="*(((lval (*(lval (tmp))) +i lval (c)):(unsigned short*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="(((*tmp) +i c):(unsigned short*)">
          <exp1 etag="lval" xstr="(*tmp)">
           <lval>
            <lhost>
             <mem etag="lval" xstr="tmp">
              <lval>
               <lhost>
                <var vid="6143" vname="tmp"/>
               </lhost>
              </lval>
             </mem>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="lval" xstr="c">
           <lval>
            <lhost>
             <var vid="6141" vname="c"/>
            </lhost>
           </lval>
          </exp2>
          <typ ttag="tptr">
           <typ ikind="iushort" ttag="tint">
            <attributes>
             <attr attrname="const"/>
            </attributes>
           </typ>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="14" origin="prim-exp" p-complexity="8">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="(((*tmp) +i c):(unsigned short*)">
         <exp1 etag="lval" xstr="(*tmp)">
          <lval>
           <lhost>
            <mem etag="lval" xstr="tmp">
             <lval>
              <lhost>
               <var vid="6143" vname="tmp"/>
              </lhost>
             </lval>
            </mem>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="c">
          <lval>
           <lhost>
            <var vid="6141" vname="c"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="iushort" ttag="tint">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="15" origin="prim-exp" p-complexity="6">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp">
         <lval>
          <lhost>
           <var vid="6143" vname="tmp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="16" origin="prim-exp" p-complexity="0">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6143" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="17" origin="prim-lval" p-complexity="1">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6143" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="18" origin="prim-lval" p-complexity="1">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6143" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="19" origin="prim-lval" p-complexity="1">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6143" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ikind="iushort" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="20" origin="prim-lval" p-complexity="1">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6143" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ikind="iushort" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="21" origin="prim-exp" p-complexity="0">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6141" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="22" origin="prim-op" p-complexity="1">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="(*tmp)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="tmp">
          <lval>
           <lhost>
            <var vid="6143" vname="tmp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="23" origin="prim-op" p-complexity="1">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="(*tmp)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="tmp">
          <lval>
           <lhost>
            <var vid="6143" vname="tmp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="24" origin="prim-op" p-complexity="3">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iushort" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="(*tmp)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="tmp">
          <lval>
           <lhost>
            <var vid="6143" vname="tmp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="c">
       <lval>
        <lhost>
         <var vid="6141" vname="c"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="25" origin="prim-op" p-complexity="2">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iushort" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="(*tmp)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="tmp">
          <lval>
           <lhost>
            <var vid="6143" vname="tmp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="c">
       <lval>
        <lhost>
         <var vid="6141" vname="c"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="26" origin="prim-lval" p-complexity="3">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="(((*tmp) +i c):(unsigned short*)">
       <exp1 etag="lval" xstr="(*tmp)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="tmp">
           <lval>
            <lhost>
             <var vid="6143" vname="tmp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="c">
        <lval>
         <lhost>
          <var vid="6141" vname="c"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iushort" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="27" origin="prim-lval" p-complexity="3">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="(((*tmp) +i c):(unsigned short*)">
       <exp1 etag="lval" xstr="(*tmp)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="tmp">
           <lval>
            <lhost>
             <var vid="6143" vname="tmp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="c">
        <lval>
         <lhost>
          <var vid="6141" vname="c"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iushort" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="28" origin="prim-lval" p-complexity="3">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="(((*tmp) +i c):(unsigned short*)">
       <exp1 etag="lval" xstr="(*tmp)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="tmp">
           <lval>
            <lhost>
             <var vid="6143" vname="tmp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="c">
        <lval>
         <lhost>
          <var vid="6141" vname="c"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iushort" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iushort" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="29" origin="prim-lval" p-complexity="3">
     <location byte="202210" file="src/cache.c" line="878"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="(((*tmp) +i c):(unsigned short*)">
       <exp1 etag="lval" xstr="(*tmp)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="tmp">
           <lval>
            <lhost>
             <var vid="6143" vname="tmp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="c">
        <lval>
         <lhost>
          <var vid="6141" vname="c"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iushort" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iushort" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="30" origin="prim-exp" p-complexity="0">
     <location byte="202289" file="src/cache.c" line="880"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6141" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="421"/>
       <node name="if-else"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="31" origin="prim-exp" p-complexity="0">
     <location byte="202289" file="src/cache.c" line="880"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6140" vname="f"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="421"/>
       <node name="if-else"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="32" origin="prim-exp" p-complexity="1">
     <location byte="202289" file="src/cache.c" line="880"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="421"/>
       <node name="if-else"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="33" origin="prim-exp" p-complexity="1">
     <location byte="202289" file="src/cache.c" line="880"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="421"/>
       <node name="if-else"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="34" origin="prim-exp" p-complexity="1">
     <location byte="202289" file="src/cache.c" line="880"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="f">
       <lval>
        <lhost>
         <var vid="6140" vname="f"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="117" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="421"/>
       <node name="if-else"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="35" origin="prim-exp" p-complexity="0">
     <location byte="202306" file="src/cache.c" line="881"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6142" vname="nl"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="422"/>
       <node name="if-else"/>
       <node name="stmt" num="420"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="36" origin="prim-exp" p-complexity="0">
     <location byte="202327" file="src/cache.c" line="884"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6141" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="423"/>
       <node name="loop"/>
       <node name="stmt" num="408"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:34">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
