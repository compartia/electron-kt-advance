<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="log_query">
   <statistics avg-context-complexity="2.19" avg-predicate-complexity="0.90" context-complexity="676" predicate-complexity="278" size="308"/>
   <unconstrained-external-functions>
    <efn name="dnsmasq/prettyprint_addr" num="1"/>
    <efn name="dnsmasq/my_syslog" num="3"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="6">
     <location byte="219129" file="src/cache.c" line="1584"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="842"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="219129" file="src/cache.c" line="1584"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="842"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-lval" p-complexity="1">
     <location byte="219129" file="src/cache.c" line="1584"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="842"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-lval" p-complexity="1">
     <location byte="219129" file="src/cache.c" line="1584"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="842"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-lval" p-complexity="1">
     <location byte="219129" file="src/cache.c" line="1584"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="842"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-lval" p-complexity="1">
     <location byte="219129" file="src/cache.c" line="1584"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="842"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="0">
     <location byte="219179" file="src/cache.c" line="1585"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;is&quot;">
       <constant ctag="cstr" strValue="is"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="842"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="6">
     <location byte="219201" file="src/cache.c" line="1587"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="options"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="843"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="9" origin="prim-exp" p-complexity="0">
     <location byte="219201" file="src/cache.c" line="1587"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="843"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="10" origin="prim-lval" p-complexity="1">
     <location byte="219201" file="src/cache.c" line="1587"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="843"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="11" origin="prim-lval" p-complexity="1">
     <location byte="219201" file="src/cache.c" line="1587"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="843"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="12" origin="prim-lval" p-complexity="1">
     <location byte="219201" file="src/cache.c" line="1587"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="843"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="13" origin="prim-lval" p-complexity="1">
     <location byte="219201" file="src/cache.c" line="1587"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="843"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="14" origin="prim-op" p-complexity="0">
     <location byte="219201" file="src/cache.c" line="1587"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="843"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="15" origin="prim-op" p-complexity="1">
     <location byte="219201" file="src/cache.c" line="1587"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="843"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="16" origin="prim-exp" p-complexity="0">
     <location byte="219323" file="src/cache.c" line="1590"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6385" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="845"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="17" origin="prim-exp" p-complexity="1">
     <location byte="219323" file="src/cache.c" line="1590"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="845"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="18" origin="prim-exp" p-complexity="1">
     <location byte="219323" file="src/cache.c" line="1590"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="845"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="19" origin="prim-exp" p-complexity="1">
     <location byte="219323" file="src/cache.c" line="1590"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="845"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="20" origin="prim-exp" p-complexity="0">
     <location byte="219349" file="src/cache.c" line="1592"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6386" vname="addr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="21" origin="prim-exp" p-complexity="0">
     <location byte="219371" file="src/cache.c" line="1594"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="22" origin="prim-op" p-complexity="0">
     <location byte="219371" file="src/cache.c" line="1594"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="23">
       <constant ctag="cint64" ikind="iint" intValue="23"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="23" origin="prim-op" p-complexity="1">
     <location byte="219371" file="src/cache.c" line="1594"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="23">
       <constant ctag="cint64" ikind="iint" intValue="23"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="24" name="format" origin="f-pre" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="format-string">
      <exp etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="format">
      <math>
       <apply>
        <format-string/>
        <ci>format</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="25" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="26" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="27" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="28" name="deref-read-nt" origin="f-pre" p-complexity="2">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (arg:(char*))]">
       <arg etag="caste" xstr="caste (arg:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="arg">
         <lval>
          <lhost>
           <var vid="6387" vname="arg"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="29" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </base-exp>
      <len-exp cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (arg:(char*))]">
       <arg etag="caste" xstr="caste (arg:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="arg">
         <lval>
          <lhost>
           <var vid="6387" vname="arg"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="30" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="31" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="sprintf" id="32" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="runtime-value" etag="cnapp" xstr="runtime-value">
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="33" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="34" origin="prim-exp" p-complexity="6">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="35" origin="prim-exp" p-complexity="0">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="36" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="37" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="38" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="39" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="40" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="41" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="42" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="43" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="arg">
       <lval>
        <lhost>
         <var vid="6387" vname="arg"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="44" origin="prim-exp" p-complexity="0">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6387" vname="arg"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="45" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="46" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="47" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (arg:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="arg">
        <lval>
         <lhost>
          <var vid="6387" vname="arg"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="48" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="addr-&gt;addr.log.keytag">
       <lval>
        <lhost>
         <mem etag="lval" xstr="addr">
          <lval>
           <lhost>
            <var vid="6386" vname="addr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <offset>
           <field ckey="178" fname="keytag"/>
          </offset>
          <field ckey="177" fname="log"/>
         </offset>
         <field ckey="176" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="49" origin="prim-exp" p-complexity="6">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="addr">
         <lval>
          <lhost>
           <var vid="6386" vname="addr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <offset>
          <field ckey="178" fname="keytag"/>
         </offset>
         <field ckey="177" fname="log"/>
        </offset>
        <field ckey="176" fname="addr"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="50" origin="prim-exp" p-complexity="0">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6386" vname="addr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="51" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="52" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="53" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="54" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="55" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="addr-&gt;addr.log.algo">
       <lval>
        <lhost>
         <mem etag="lval" xstr="addr">
          <lval>
           <lhost>
            <var vid="6386" vname="addr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <offset>
           <field ckey="178" fname="algo"/>
          </offset>
          <field ckey="177" fname="log"/>
         </offset>
         <field ckey="176" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="56" origin="prim-exp" p-complexity="6">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="addr">
         <lval>
          <lhost>
           <var vid="6386" vname="addr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <offset>
          <field ckey="178" fname="algo"/>
         </offset>
         <field ckey="177" fname="log"/>
        </offset>
        <field ckey="176" fname="addr"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="57" origin="prim-exp" p-complexity="0">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6386" vname="addr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="58" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="59" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="60" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="61" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="62" origin="prim-exp" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="addr-&gt;addr.log.digest">
       <lval>
        <lhost>
         <mem etag="lval" xstr="addr">
          <lval>
           <lhost>
            <var vid="6386" vname="addr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <offset>
           <field ckey="178" fname="digest"/>
          </offset>
          <field ckey="177" fname="log"/>
         </offset>
         <field ckey="176" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="63" origin="prim-exp" p-complexity="6">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="addr">
         <lval>
          <lhost>
           <var vid="6386" vname="addr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <offset>
          <field ckey="178" fname="digest"/>
         </offset>
         <field ckey="177" fname="log"/>
        </offset>
        <field ckey="176" fname="addr"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="64" origin="prim-exp" p-complexity="0">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6386" vname="addr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="65" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="66" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="67" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="68" origin="prim-lval" p-complexity="1">
     <location byte="219394" file="src/cache.c" line="1595"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="848"/>
       <node name="if-then"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="69" origin="prim-exp" p-complexity="0">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="849"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="70" origin="prim-op" p-complexity="0">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="849"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="71" origin="prim-op" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="849"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="inet_ntop" id="72" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="inet_ntop" id="73" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="inet_ntop" id="74" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="inet_ntop" id="75" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="caste" xstr="caste (addr:(void*))">
         <typ ttag="tptr">
          <attributes>
           <attr attrname="restrict"/>
          </attributes>
          <typ ttag="tvoid">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
         <exp etag="lval" xstr="addr">
          <lval>
           <lhost>
            <var vid="6386" vname="addr"/>
           </lhost>
          </lval>
         </exp>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="inet_ntop" id="76" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="inet_ntop" id="77" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="inet_ntop" id="78" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="inet_ntop" id="79" name="no-overlap" origin="f-pre" p-complexity="2">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="src" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="no-overlap">
      <math>
       <apply>
        <no-overlap/>
        <ci>src</ci>
        <ci>dst</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="80" origin="prim-exp" p-complexity="0">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6391" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="81" origin="prim-exp" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6386" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="82" origin="prim-exp" p-complexity="0">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6386" vname="addr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="83" origin="prim-exp" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="84" origin="prim-exp" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="85" origin="prim-exp" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6386" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="86" origin="prim-exp" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="87" origin="prim-exp" p-complexity="6">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="88" origin="prim-exp" p-complexity="0">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="89" origin="prim-lval" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="90" origin="prim-lval" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="91" origin="prim-lval" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="92" origin="prim-lval" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="93" origin="prim-exp" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="94" origin="prim-exp" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="95" origin="prim-exp" p-complexity="1">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="96" origin="prim-exp" p-complexity="0">
     <location byte="219519" file="src/cache.c" line="1599"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp etag="const" xstr="46">
       <constant ctag="cint64" ikind="iint" intValue="46"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="852"/>
       <node name="if-else"/>
       <node name="stmt" num="847"/>
       <node name="if-then"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="97" origin="prim-exp" p-complexity="0">
     <location byte="219621" file="src/cache.c" line="1607"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6387" vname="arg"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="853"/>
       <node name="if-else"/>
       <node name="stmt" num="846"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="98" origin="prim-exp" p-complexity="0">
     <location byte="219636" file="src/cache.c" line="1609"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="99" origin="prim-op" p-complexity="0">
     <location byte="219636" file="src/cache.c" line="1609"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="100" origin="prim-op" p-complexity="1">
     <location byte="219636" file="src/cache.c" line="1609"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="101" origin="prim-exp" p-complexity="0">
     <location byte="219669" file="src/cache.c" line="1611"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6385" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="855"/>
       <node name="if-then"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="102" origin="prim-exp" p-complexity="6">
     <location byte="219688" file="src/cache.c" line="1612"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="855"/>
       <node name="if-then"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="103" origin="prim-exp" p-complexity="0">
     <location byte="219688" file="src/cache.c" line="1612"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="855"/>
       <node name="if-then"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="104" origin="prim-lval" p-complexity="1">
     <location byte="219688" file="src/cache.c" line="1612"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="855"/>
       <node name="if-then"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="105" origin="prim-lval" p-complexity="1">
     <location byte="219688" file="src/cache.c" line="1612"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="855"/>
       <node name="if-then"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="106" origin="prim-lval" p-complexity="1">
     <location byte="219688" file="src/cache.c" line="1612"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="855"/>
       <node name="if-then"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="107" origin="prim-lval" p-complexity="1">
     <location byte="219688" file="src/cache.c" line="1612"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="855"/>
       <node name="if-then"/>
       <node name="stmt" num="854"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="108" origin="prim-exp" p-complexity="0">
     <location byte="219730" file="src/cache.c" line="1615"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="109" origin="prim-op" p-complexity="0">
     <location byte="219730" file="src/cache.c" line="1615"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="5">
       <constant ctag="cint64" ikind="iint" intValue="5"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="110" origin="prim-op" p-complexity="1">
     <location byte="219730" file="src/cache.c" line="1615"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="5">
       <constant ctag="cint64" ikind="iint" intValue="5"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="111" origin="prim-exp" p-complexity="0">
     <location byte="219763" file="src/cache.c" line="1617"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="112" origin="prim-op" p-complexity="0">
     <location byte="219763" file="src/cache.c" line="1617"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="113" origin="prim-op" p-complexity="1">
     <location byte="219763" file="src/cache.c" line="1617"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="114" origin="prim-exp" p-complexity="0">
     <location byte="219786" file="src/cache.c" line="1618"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;NXDOMAIN&quot;">
       <constant ctag="cstr" strValue="NXDOMAIN"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="858"/>
       <node name="if-then"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="115" origin="prim-exp" p-complexity="0">
     <location byte="219822" file="src/cache.c" line="1621"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="116" origin="prim-op" p-complexity="0">
     <location byte="219822" file="src/cache.c" line="1621"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="117" origin="prim-op" p-complexity="1">
     <location byte="219822" file="src/cache.c" line="1621"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="118" origin="prim-exp" p-complexity="0">
     <location byte="219848" file="src/cache.c" line="1622"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;NODATA-IPv4&quot;">
       <constant ctag="cstr" strValue="NODATA-IPv4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="860"/>
       <node name="if-then"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="119" origin="prim-exp" p-complexity="0">
     <location byte="219878" file="src/cache.c" line="1623"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="861"/>
       <node name="if-else"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="120" origin="prim-op" p-complexity="0">
     <location byte="219878" file="src/cache.c" line="1623"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="861"/>
       <node name="if-else"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="121" origin="prim-op" p-complexity="1">
     <location byte="219878" file="src/cache.c" line="1623"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="861"/>
       <node name="if-else"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="122" origin="prim-exp" p-complexity="0">
     <location byte="219904" file="src/cache.c" line="1624"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;NODATA-IPv6&quot;">
       <constant ctag="cstr" strValue="NODATA-IPv6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="862"/>
       <node name="if-then"/>
       <node name="stmt" num="861"/>
       <node name="if-else"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="123" origin="prim-exp" p-complexity="0">
     <location byte="219939" file="src/cache.c" line="1626"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;NODATA&quot;">
       <constant ctag="cstr" strValue="NODATA"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="863"/>
       <node name="if-else"/>
       <node name="stmt" num="861"/>
       <node name="if-else"/>
       <node name="stmt" num="859"/>
       <node name="if-else"/>
       <node name="stmt" num="857"/>
       <node name="if-then"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="124" origin="prim-exp" p-complexity="0">
     <location byte="219972" file="src/cache.c" line="1629"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="864"/>
       <node name="if-else"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="125" origin="prim-op" p-complexity="0">
     <location byte="219972" file="src/cache.c" line="1629"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="864"/>
       <node name="if-else"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="126" origin="prim-op" p-complexity="1">
     <location byte="219972" file="src/cache.c" line="1629"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="864"/>
       <node name="if-else"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="127" origin="prim-exp" p-complexity="0">
     <location byte="219998" file="src/cache.c" line="1630"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;&lt;CNAME&gt;&quot;">
       <constant ctag="cstr" strValue="&lt;CNAME&gt;"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="865"/>
       <node name="if-then"/>
       <node name="stmt" num="864"/>
       <node name="if-else"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="128" origin="prim-exp" p-complexity="0">
     <location byte="220023" file="src/cache.c" line="1631"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="866"/>
       <node name="if-else"/>
       <node name="stmt" num="864"/>
       <node name="if-else"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="129" origin="prim-op" p-complexity="0">
     <location byte="220023" file="src/cache.c" line="1631"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="17">
       <constant ctag="cint64" ikind="iint" intValue="17"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="866"/>
       <node name="if-else"/>
       <node name="stmt" num="864"/>
       <node name="if-else"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="130" origin="prim-op" p-complexity="1">
     <location byte="220023" file="src/cache.c" line="1631"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="17">
       <constant ctag="cint64" ikind="iint" intValue="17"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="866"/>
       <node name="if-else"/>
       <node name="stmt" num="864"/>
       <node name="if-else"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="131" origin="prim-exp" p-complexity="0">
     <location byte="220049" file="src/cache.c" line="1632"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6387" vname="arg"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="867"/>
       <node name="if-then"/>
       <node name="stmt" num="866"/>
       <node name="if-else"/>
       <node name="stmt" num="864"/>
       <node name="if-else"/>
       <node name="stmt" num="856"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="132" origin="prim-exp" p-complexity="0">
     <location byte="220064" file="src/cache.c" line="1634"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="133" origin="prim-op" p-complexity="0">
     <location byte="220064" file="src/cache.c" line="1634"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="134" origin="prim-op" p-complexity="1">
     <location byte="220064" file="src/cache.c" line="1634"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="135" origin="prim-exp" p-complexity="0">
     <location byte="220090" file="src/cache.c" line="1635"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;config&quot;">
       <constant ctag="cstr" strValue="config"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="869"/>
       <node name="if-then"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="136" origin="prim-exp" p-complexity="0">
     <location byte="220116" file="src/cache.c" line="1636"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="137" origin="prim-op" p-complexity="0">
     <location byte="220116" file="src/cache.c" line="1636"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="138" origin="prim-op" p-complexity="1">
     <location byte="220116" file="src/cache.c" line="1636"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="139" origin="prim-exp" p-complexity="0">
     <location byte="220141" file="src/cache.c" line="1637"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;DHCP&quot;">
       <constant ctag="cstr" strValue="DHCP"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="871"/>
       <node name="if-then"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="140" origin="prim-exp" p-complexity="0">
     <location byte="220165" file="src/cache.c" line="1638"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="141" origin="prim-op" p-complexity="0">
     <location byte="220165" file="src/cache.c" line="1638"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="142" origin="prim-op" p-complexity="1">
     <location byte="220165" file="src/cache.c" line="1638"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="143" origin="prim-exp" p-complexity="0">
     <location byte="220190" file="src/cache.c" line="1639"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6387" vname="arg"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="873"/>
       <node name="if-then"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="144" origin="prim-exp" p-complexity="0">
     <location byte="220211" file="src/cache.c" line="1640"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="145" origin="prim-op" p-complexity="0">
     <location byte="220211" file="src/cache.c" line="1640"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="16">
       <constant ctag="cint64" ikind="iint" intValue="16"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="146" origin="prim-op" p-complexity="1">
     <location byte="220211" file="src/cache.c" line="1640"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="16">
       <constant ctag="cint64" ikind="iint" intValue="16"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="147" origin="prim-exp" p-complexity="0">
     <location byte="220237" file="src/cache.c" line="1641"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;reply&quot;">
       <constant ctag="cstr" strValue="reply"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="875"/>
       <node name="if-then"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="148" origin="prim-exp" p-complexity="0">
     <location byte="220262" file="src/cache.c" line="1642"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="149" origin="prim-op" p-complexity="0">
     <location byte="220262" file="src/cache.c" line="1642"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="24">
       <constant ctag="cint64" ikind="iint" intValue="24"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="150" origin="prim-op" p-complexity="1">
     <location byte="220262" file="src/cache.c" line="1642"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="24">
       <constant ctag="cint64" ikind="iint" intValue="24"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="151" origin="prim-exp" p-complexity="0">
     <location byte="220288" file="src/cache.c" line="1643"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;validation&quot;">
       <constant ctag="cstr" strValue="validation"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="877"/>
       <node name="if-then"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="152" origin="prim-exp" p-complexity="0">
     <location byte="220318" file="src/cache.c" line="1644"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="153" origin="prim-op" p-complexity="0">
     <location byte="220318" file="src/cache.c" line="1644"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="21">
       <constant ctag="cint64" ikind="iint" intValue="21"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="154" origin="prim-op" p-complexity="1">
     <location byte="220318" file="src/cache.c" line="1644"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="21">
       <constant ctag="cint64" ikind="iint" intValue="21"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="155" origin="prim-exp" p-complexity="0">
     <location byte="220344" file="src/cache.c" line="1645"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;auth&quot;">
       <constant ctag="cstr" strValue="auth"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="879"/>
       <node name="if-then"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="156" origin="prim-exp" p-complexity="0">
     <location byte="220368" file="src/cache.c" line="1646"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="157" origin="prim-op" p-complexity="0">
     <location byte="220368" file="src/cache.c" line="1646"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="18">
       <constant ctag="cint64" ikind="iint" intValue="18"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="158" origin="prim-op" p-complexity="1">
     <location byte="220368" file="src/cache.c" line="1646"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="18">
       <constant ctag="cint64" ikind="iint" intValue="18"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="159" origin="prim-exp" p-complexity="0">
     <location byte="220402" file="src/cache.c" line="1648"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;forwarded&quot;">
       <constant ctag="cstr" strValue="forwarded"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="881"/>
       <node name="if-then"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="160" origin="prim-exp" p-complexity="0">
     <location byte="220430" file="src/cache.c" line="1649"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;to&quot;">
       <constant ctag="cstr" strValue="to"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="881"/>
       <node name="if-then"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="161" origin="prim-exp" p-complexity="0">
     <location byte="220456" file="src/cache.c" line="1651"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="162" origin="prim-op" p-complexity="0">
     <location byte="220456" file="src/cache.c" line="1651"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="19">
       <constant ctag="cint64" ikind="iint" intValue="19"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="163" origin="prim-op" p-complexity="1">
     <location byte="220456" file="src/cache.c" line="1651"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="19">
       <constant ctag="cint64" ikind="iint" intValue="19"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="164" origin="prim-exp" p-complexity="0">
     <location byte="220490" file="src/cache.c" line="1653"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6387" vname="arg"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="883"/>
       <node name="if-then"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="165" origin="prim-exp" p-complexity="0">
     <location byte="220510" file="src/cache.c" line="1654"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;from&quot;">
       <constant ctag="cstr" strValue="from"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="883"/>
       <node name="if-then"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="166" origin="prim-exp" p-complexity="0">
     <location byte="220538" file="src/cache.c" line="1656"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="167" origin="prim-op" p-complexity="0">
     <location byte="220538" file="src/cache.c" line="1656"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="22">
       <constant ctag="cint64" ikind="iint" intValue="22"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="168" origin="prim-op" p-complexity="1">
     <location byte="220538" file="src/cache.c" line="1656"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="22">
       <constant ctag="cint64" ikind="iint" intValue="22"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="169" origin="prim-exp" p-complexity="0">
     <location byte="220572" file="src/cache.c" line="1658"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6387" vname="arg"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="885"/>
       <node name="if-then"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="170" origin="prim-exp" p-complexity="0">
     <location byte="220592" file="src/cache.c" line="1659"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;to&quot;">
       <constant ctag="cstr" strValue="to"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="885"/>
       <node name="if-then"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="171" origin="prim-exp" p-complexity="0">
     <location byte="220618" file="src/cache.c" line="1661"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="172" origin="prim-op" p-complexity="0">
     <location byte="220618" file="src/cache.c" line="1661"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="26">
       <constant ctag="cint64" ikind="iint" intValue="26"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="173" origin="prim-op" p-complexity="1">
     <location byte="220618" file="src/cache.c" line="1661"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="26">
       <constant ctag="cint64" ikind="iint" intValue="26"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="174" origin="prim-exp" p-complexity="0">
     <location byte="220652" file="src/cache.c" line="1663"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;ipset add&quot;">
       <constant ctag="cstr" strValue="ipset add"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="175" origin="prim-exp" p-complexity="0">
     <location byte="220680" file="src/cache.c" line="1664"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6385" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="176" origin="prim-exp" p-complexity="0">
     <location byte="220699" file="src/cache.c" line="1665"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6387" vname="arg"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="177" origin="prim-exp" p-complexity="6">
     <location byte="220717" file="src/cache.c" line="1666"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="178" origin="prim-exp" p-complexity="0">
     <location byte="220717" file="src/cache.c" line="1666"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="179" origin="prim-lval" p-complexity="1">
     <location byte="220717" file="src/cache.c" line="1666"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="180" origin="prim-lval" p-complexity="1">
     <location byte="220717" file="src/cache.c" line="1666"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="181" origin="prim-lval" p-complexity="1">
     <location byte="220717" file="src/cache.c" line="1666"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="182" origin="prim-lval" p-complexity="1">
     <location byte="220717" file="src/cache.c" line="1666"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="887"/>
       <node name="if-then"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="183" origin="prim-exp" p-complexity="0">
     <location byte="220767" file="src/cache.c" line="1669"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;cached&quot;">
       <constant ctag="cstr" strValue="cached"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="888"/>
       <node name="if-else"/>
       <node name="stmt" num="886"/>
       <node name="if-else"/>
       <node name="stmt" num="884"/>
       <node name="if-else"/>
       <node name="stmt" num="882"/>
       <node name="if-else"/>
       <node name="stmt" num="880"/>
       <node name="if-else"/>
       <node name="stmt" num="878"/>
       <node name="if-else"/>
       <node name="stmt" num="876"/>
       <node name="if-else"/>
       <node name="stmt" num="874"/>
       <node name="if-else"/>
       <node name="stmt" num="872"/>
       <node name="if-else"/>
       <node name="stmt" num="870"/>
       <node name="if-else"/>
       <node name="stmt" num="868"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="strlen" id="184" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="strlen" id="185" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="strlen" id="186" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="strlen" id="187" name="deref-read-nt" origin="f-pre" p-complexity="2">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (name:(char*))]">
       <arg etag="caste" xstr="caste (name:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="name">
         <lval>
          <lhost>
           <var vid="6385" vname="name"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="strlen" id="188" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </base-exp>
      <len-exp cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (name:(char*))]">
       <arg etag="caste" xstr="caste (name:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="name">
         <lval>
          <lhost>
           <var vid="6385" vname="name"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="189" origin="prim-exp" p-complexity="1">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="190" origin="prim-exp" p-complexity="0">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6385" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="191" origin="prim-exp" p-complexity="1">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="192" origin="prim-exp" p-complexity="1">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="193" origin="prim-exp" p-complexity="1">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="6385" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="889"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="194" origin="prim-exp" p-complexity="0">
     <location byte="220789" file="src/cache.c" line="1671"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6393" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="890"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="195" origin="prim-exp" p-complexity="0">
     <location byte="220816" file="src/cache.c" line="1672"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;.&quot;">
       <constant ctag="cstr" strValue="."/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="891"/>
       <node name="if-then"/>
       <node name="stmt" num="890"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="196" origin="prim-exp" p-complexity="6">
     <location byte="220831" file="src/cache.c" line="1674"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="options2"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="197" origin="prim-exp" p-complexity="0">
     <location byte="220831" file="src/cache.c" line="1674"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="198" origin="prim-lval" p-complexity="1">
     <location byte="220831" file="src/cache.c" line="1674"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="199" origin="prim-lval" p-complexity="1">
     <location byte="220831" file="src/cache.c" line="1674"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="200" origin="prim-lval" p-complexity="1">
     <location byte="220831" file="src/cache.c" line="1674"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="201" origin="prim-lval" p-complexity="1">
     <location byte="220831" file="src/cache.c" line="1674"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="202" origin="prim-op" p-complexity="0">
     <location byte="220831" file="src/cache.c" line="1674"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="19">
       <constant ctag="cint64" ikind="iint" intValue="19"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="203" origin="prim-op" p-complexity="1">
     <location byte="220831" file="src/cache.c" line="1674"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="19">
       <constant ctag="cint64" ikind="iint" intValue="19"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="204" origin="prim-exp" p-complexity="6">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="log_source_addr"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="205" origin="prim-exp" p-complexity="0">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="206" origin="prim-lval" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="207" origin="prim-lval" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="208" origin="prim-lval" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="209" origin="prim-lval" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="210" origin="prim-exp" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;log_source_addr">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="log_source_addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="211" origin="prim-exp" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;log_source_addr">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="log_source_addr"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="203" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="212" origin="prim-exp" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;log_source_addr">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="log_source_addr"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="203" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="213" origin="prim-exp" p-complexity="6">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff2"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="214" origin="prim-exp" p-complexity="0">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="215" origin="prim-lval" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="216" origin="prim-lval" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="217" origin="prim-lval" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="218" origin="prim-lval" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="219" origin="prim-exp" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="220" origin="prim-exp" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="221" origin="prim-exp" p-complexity="1">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="222" origin="prim-exp" p-complexity="0">
     <location byte="220952" file="src/cache.c" line="1676"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6396" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="893"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="223" origin="prim-exp" p-complexity="0">
     <location byte="221047" file="src/cache.c" line="1677"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6384" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="224" origin="prim-op" p-complexity="0">
     <location byte="221047" file="src/cache.c" line="1677"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="27">
       <constant ctag="cint64" ikind="iint" intValue="27"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="225" origin="prim-op" p-complexity="1">
     <location byte="221047" file="src/cache.c" line="1677"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="27">
       <constant ctag="cint64" ikind="iint" intValue="27"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="226" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;* %s/%u %s %s %s %s&quot;">
       <constant ctag="cstr" strValue="* %s/%u %s %s %s %s"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="227" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;* %s/%u %s %s %s %s&quot;">
       <constant ctag="cstr" strValue="* %s/%u %s %s %s %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="228" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;* %s/%u %s %s %s %s&quot;">
       <constant ctag="cstr" strValue="* %s/%u %s %s %s %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="229" origin="prim-exp" p-complexity="6">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff2"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="230" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="231" origin="prim-lval" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="232" origin="prim-lval" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="233" origin="prim-lval" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="234" origin="prim-lval" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="235" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="236" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="237" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="238" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6394" vname="port"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="239" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6388" vname="source"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="240" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="241" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="242" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="243" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6385" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="244" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="245" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="246" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="247" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6390" vname="verb"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="248" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="249" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="250" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="251" origin="prim-exp" p-complexity="0">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6389" vname="dest"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="252" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="253" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="254" origin="prim-exp" p-complexity="1">
     <location byte="221070" file="src/cache.c" line="1678"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="895"/>
       <node name="if-then"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="255" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;%u %s/%u %s %s %s %s&quot;">
       <constant ctag="cstr" strValue="%u %s/%u %s %s %s %s"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="256" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;%u %s/%u %s %s %s %s&quot;">
       <constant ctag="cstr" strValue="%u %s/%u %s %s %s %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="257" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;%u %s/%u %s %s %s %s&quot;">
       <constant ctag="cstr" strValue="%u %s/%u %s %s %s %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="258" origin="prim-exp" p-complexity="6">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="log_display_id"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="259" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="260" origin="prim-lval" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="261" origin="prim-lval" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="262" origin="prim-lval" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="263" origin="prim-lval" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="264" origin="prim-exp" p-complexity="6">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff2"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="265" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="266" origin="prim-lval" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="267" origin="prim-lval" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="268" origin="prim-lval" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="269" origin="prim-lval" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="270" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="271" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="272" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff2">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff2"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="273" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6394" vname="port"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="274" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6388" vname="source"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="275" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="276" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="277" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="278" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6385" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="279" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="280" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="281" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="282" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6390" vname="verb"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="283" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="284" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="285" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="286" origin="prim-exp" p-complexity="0">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6389" vname="dest"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="8"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="287" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="8"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="288" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="8"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="289" origin="prim-exp" p-complexity="1">
     <location byte="221178" file="src/cache.c" line="1680"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="896"/>
       <node name="if-else"/>
       <node name="stmt" num="894"/>
       <node name="if-then"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="8"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="290" origin="prim-exp" p-complexity="0">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;%s %s %s %s&quot;">
       <constant ctag="cstr" strValue="%s %s %s %s"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="291" origin="prim-exp" p-complexity="0">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;%s %s %s %s&quot;">
       <constant ctag="cstr" strValue="%s %s %s %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="292" origin="prim-exp" p-complexity="0">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;%s %s %s %s&quot;">
       <constant ctag="cstr" strValue="%s %s %s %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="293" origin="prim-exp" p-complexity="0">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6388" vname="source"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="294" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="295" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="296" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="source">
       <lval>
        <lhost>
         <var vid="6388" vname="source"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="297" origin="prim-exp" p-complexity="0">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6385" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="298" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="299" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="300" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="6385" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="301" origin="prim-exp" p-complexity="0">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6390" vname="verb"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="302" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="303" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="304" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="verb">
       <lval>
        <lhost>
         <var vid="6390" vname="verb"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="305" origin="prim-exp" p-complexity="0">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6389" vname="dest"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="306" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="307" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="308" origin="prim-exp" p-complexity="1">
     <location byte="221324" file="src/cache.c" line="1683"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dest">
       <lval>
        <lhost>
         <var vid="6389" vname="dest"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="897"/>
       <node name="if-else"/>
       <node name="stmt" num="892"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:34">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
