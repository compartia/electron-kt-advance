<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="record_source">
   <statistics avg-context-complexity="3.58" avg-predicate-complexity="1.14" context-complexity="276" predicate-complexity="88" size="77"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="217992" file="src/cache.c" line="1523"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6360" vname="index___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="2" origin="prim-exp" p-complexity="0">
     <location byte="218012" file="src/cache.c" line="1524"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;config&quot;">
       <constant ctag="cstr" strValue="config"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="799"/>
       <node name="if-then"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="3" origin="prim-exp" p-complexity="0">
     <location byte="218012" file="src/cache.c" line="1524"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (&quot;config&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;config&quot;">
        <constant ctag="cstr" strValue="config"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="799"/>
       <node name="if-then"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="4" origin="prim-exp" p-complexity="0">
     <location byte="218012" file="src/cache.c" line="1524"/>
     <predicate tag="global-mem">
      <exp etag="caste" xstr="caste (&quot;config&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;config&quot;">
        <constant ctag="cstr" strValue="config"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="799"/>
       <node name="if-then"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="5" origin="prim-exp" p-complexity="0">
     <location byte="218012" file="src/cache.c" line="1524"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;config&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;config&quot;">
        <constant ctag="cstr" strValue="config"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="799"/>
       <node name="if-then"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="6" origin="prim-exp" p-complexity="0">
     <location byte="218012" file="src/cache.c" line="1524"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (&quot;config&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;config&quot;">
        <constant ctag="cstr" strValue="config"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="799"/>
       <node name="if-then"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="7" origin="prim-exp" p-complexity="0">
     <location byte="218036" file="src/cache.c" line="1525"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6360" vname="index___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="800"/>
       <node name="if-else"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="8" origin="prim-exp" p-complexity="0">
     <location byte="218056" file="src/cache.c" line="1526"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;/etc/hosts&quot;">
       <constant ctag="cstr" strValue="/etc/hosts"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="801"/>
       <node name="if-then"/>
       <node name="stmt" num="800"/>
       <node name="if-else"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="9" origin="prim-exp" p-complexity="0">
     <location byte="218056" file="src/cache.c" line="1526"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (&quot;/etc/hosts&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;/etc/hosts&quot;">
        <constant ctag="cstr" strValue="/etc/hosts"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="801"/>
       <node name="if-then"/>
       <node name="stmt" num="800"/>
       <node name="if-else"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="10" origin="prim-exp" p-complexity="0">
     <location byte="218056" file="src/cache.c" line="1526"/>
     <predicate tag="global-mem">
      <exp etag="caste" xstr="caste (&quot;/etc/hosts&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;/etc/hosts&quot;">
        <constant ctag="cstr" strValue="/etc/hosts"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="801"/>
       <node name="if-then"/>
       <node name="stmt" num="800"/>
       <node name="if-else"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="11" origin="prim-exp" p-complexity="0">
     <location byte="218056" file="src/cache.c" line="1526"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;/etc/hosts&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;/etc/hosts&quot;">
        <constant ctag="cstr" strValue="/etc/hosts"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="801"/>
       <node name="if-then"/>
       <node name="stmt" num="800"/>
       <node name="if-else"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="12" origin="prim-exp" p-complexity="0">
     <location byte="218056" file="src/cache.c" line="1526"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (&quot;/etc/hosts&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;/etc/hosts&quot;">
        <constant ctag="cstr" strValue="/etc/hosts"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="801"/>
       <node name="if-then"/>
       <node name="stmt" num="800"/>
       <node name="if-else"/>
       <node name="stmt" num="798"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="13" origin="prim-exp" p-complexity="6">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addn_hosts"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="802"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="14" origin="prim-exp" p-complexity="0">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="802"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="15" origin="prim-lval" p-complexity="1">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="802"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="16" origin="prim-lval" p-complexity="1">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="802"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="17" origin="prim-lval" p-complexity="1">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="802"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="18" origin="prim-lval" p-complexity="1">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="802"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="19" origin="prim-exp" p-complexity="0">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6361" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="804"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="20" origin="prim-exp" p-complexity="6">
     <location byte="218141" file="src/cache.c" line="1529"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6361" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="index"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="21" origin="prim-exp" p-complexity="0">
     <location byte="218141" file="src/cache.c" line="1529"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6361" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="22" origin="prim-lval" p-complexity="1">
     <location byte="218141" file="src/cache.c" line="1529"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="23" origin="prim-lval" p-complexity="1">
     <location byte="218141" file="src/cache.c" line="1529"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="24" origin="prim-lval" p-complexity="1">
     <location byte="218141" file="src/cache.c" line="1529"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="25" origin="prim-lval" p-complexity="1">
     <location byte="218141" file="src/cache.c" line="1529"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="26" origin="prim-exp" p-complexity="0">
     <location byte="218141" file="src/cache.c" line="1529"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6360" vname="index___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="27" origin="prim-exp" p-complexity="6">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6361" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="fname"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="28" origin="prim-exp" p-complexity="0">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6361" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="29" origin="prim-lval" p-complexity="1">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="30" origin="prim-lval" p-complexity="1">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="31" origin="prim-lval" p-complexity="1">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="32" origin="prim-lval" p-complexity="1">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="33" origin="prim-exp" p-complexity="1">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6361" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="34" origin="prim-exp" p-complexity="1">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="global-mem">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6361" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="35" origin="prim-exp" p-complexity="1">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6361" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="36" origin="prim-exp" p-complexity="1">
     <location byte="218171" file="src/cache.c" line="1530"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6361" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="807"/>
       <node name="if-then"/>
       <node name="stmt" num="806"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="37" origin="prim-exp" p-complexity="6">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6361" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="808"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="38" origin="prim-exp" p-complexity="0">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6361" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="808"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="39" origin="prim-lval" p-complexity="1">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="808"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="40" origin="prim-lval" p-complexity="1">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="808"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="41" origin="prim-lval" p-complexity="1">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="808"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="42" origin="prim-lval" p-complexity="1">
     <location byte="218080" file="src/cache.c" line="1528"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="808"/>
       <node name="loop"/>
       <node name="stmt" num="803"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="43" origin="prim-exp" p-complexity="6">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="dynamic_dirs"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="809"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="44" origin="prim-exp" p-complexity="0">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="809"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="45" origin="prim-lval" p-complexity="1">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="809"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="46" origin="prim-lval" p-complexity="1">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="809"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="47" origin="prim-lval" p-complexity="1">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="809"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="48" origin="prim-lval" p-complexity="1">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="809"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="49" origin="prim-exp" p-complexity="0">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6361" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="811"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="50" origin="prim-exp" p-complexity="6">
     <location byte="218257" file="src/cache.c" line="1534"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6361" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="index"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="51" origin="prim-exp" p-complexity="0">
     <location byte="218257" file="src/cache.c" line="1534"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6361" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="52" origin="prim-lval" p-complexity="1">
     <location byte="218257" file="src/cache.c" line="1534"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="53" origin="prim-lval" p-complexity="1">
     <location byte="218257" file="src/cache.c" line="1534"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="54" origin="prim-lval" p-complexity="1">
     <location byte="218257" file="src/cache.c" line="1534"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="55" origin="prim-lval" p-complexity="1">
     <location byte="218257" file="src/cache.c" line="1534"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="56" origin="prim-exp" p-complexity="0">
     <location byte="218257" file="src/cache.c" line="1534"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6360" vname="index___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="57" origin="prim-exp" p-complexity="6">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6361" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="fname"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="58" origin="prim-exp" p-complexity="0">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6361" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="59" origin="prim-lval" p-complexity="1">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="60" origin="prim-lval" p-complexity="1">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="61" origin="prim-lval" p-complexity="1">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="62" origin="prim-lval" p-complexity="1">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="63" origin="prim-exp" p-complexity="1">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6361" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="64" origin="prim-exp" p-complexity="1">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="global-mem">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6361" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="65" origin="prim-exp" p-complexity="1">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6361" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="66" origin="prim-exp" p-complexity="1">
     <location byte="218288" file="src/cache.c" line="1535"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6361" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="814"/>
       <node name="if-then"/>
       <node name="stmt" num="813"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="67" origin="prim-exp" p-complexity="6">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6361" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="815"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="68" origin="prim-exp" p-complexity="0">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6361" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="815"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="69" origin="prim-lval" p-complexity="1">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="815"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="70" origin="prim-lval" p-complexity="1">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="815"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="71" origin="prim-lval" p-complexity="1">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="815"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="72" origin="prim-lval" p-complexity="1">
     <location byte="218193" file="src/cache.c" line="1533"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6361" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="815"/>
       <node name="loop"/>
       <node name="stmt" num="810"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="73" origin="prim-exp" p-complexity="0">
     <location byte="218310" file="src/cache.c" line="1538"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;&lt;unknown&gt;&quot;">
       <constant ctag="cstr" strValue="&lt;unknown&gt;"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="816"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="74" origin="prim-exp" p-complexity="0">
     <location byte="218310" file="src/cache.c" line="1538"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (&quot;&lt;unknown&gt;&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;&lt;unknown&gt;&quot;">
        <constant ctag="cstr" strValue="&lt;unknown&gt;"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="816"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="75" origin="prim-exp" p-complexity="0">
     <location byte="218310" file="src/cache.c" line="1538"/>
     <predicate tag="global-mem">
      <exp etag="caste" xstr="caste (&quot;&lt;unknown&gt;&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;&lt;unknown&gt;&quot;">
        <constant ctag="cstr" strValue="&lt;unknown&gt;"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="816"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="76" origin="prim-exp" p-complexity="0">
     <location byte="218310" file="src/cache.c" line="1538"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;&lt;unknown&gt;&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;&lt;unknown&gt;&quot;">
        <constant ctag="cstr" strValue="&lt;unknown&gt;"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="816"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="77" origin="prim-exp" p-complexity="0">
     <location byte="218310" file="src/cache.c" line="1538"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (&quot;&lt;unknown&gt;&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;&lt;unknown&gt;&quot;">
        <constant ctag="cstr" strValue="&lt;unknown&gt;"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="816"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:34">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
