<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="dump_cache">
   <statistics avg-context-complexity="10.52" avg-predicate-complexity="1.40" context-complexity="6646" predicate-complexity="883" size="632"/>
   <unconstrained-external-functions>
    <efn name="dnsmasq/prettyprint_addr" num="1"/>
    <efn name="dnsmasq/my_syslog" num="7"/>
    <efn name="dnsmasq/sockaddr_isequal" num="1"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="214866" file="src/cache.c" line="1411"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;&quot;">
       <constant ctag="cstr" strValue=""/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="214883" file="src/cache.c" line="1413"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;time %lu&quot;">
       <constant ctag="cstr" strValue="time %lu"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-exp" p-complexity="0">
     <location byte="214883" file="src/cache.c" line="1413"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;time %lu&quot;">
       <constant ctag="cstr" strValue="time %lu"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-exp" p-complexity="0">
     <location byte="214883" file="src/cache.c" line="1413"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;time %lu&quot;">
       <constant ctag="cstr" strValue="time %lu"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-exp" p-complexity="1">
     <location byte="214883" file="src/cache.c" line="1413"/>
     <predicate from="ilong" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="lval" xstr="now">
       <lval>
        <lhost>
         <var vid="6307" vname="now"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-exp" p-complexity="0">
     <location byte="214883" file="src/cache.c" line="1413"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6307" vname="now"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="0">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;cache size %d, %d/%d cache insertions re-used unexpired cache entries.&quot;">
       <constant ctag="cstr" strValue="cache size %d, %d/%d cache insertions re-used unexpired cache entries."/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="0">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;cache size %d, %d/%d cache insertions re-used unexpired cache entries.&quot;">
       <constant ctag="cstr" strValue="cache size %d, %d/%d cache insertions re-used unexpired cache entries."/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="9" origin="prim-exp" p-complexity="0">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;cache size %d, %d/%d cache insertions re-used unexpired cache entries.&quot;">
       <constant ctag="cstr" strValue="cache size %d, %d/%d cache insertions re-used unexpired cache entries."/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="10" origin="prim-exp" p-complexity="6">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="11" origin="prim-exp" p-complexity="0">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="12" origin="prim-lval" p-complexity="1">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="13" origin="prim-lval" p-complexity="1">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="14" origin="prim-lval" p-complexity="1">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="15" origin="prim-lval" p-complexity="1">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="16" origin="prim-exp" p-complexity="0">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5906" vname="cache_live_freed"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="17" origin="prim-exp" p-complexity="0">
     <location byte="214933" file="src/cache.c" line="1414"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5905" vname="cache_inserted"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="18" origin="prim-exp" p-complexity="0">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;queries forwarded %u, queries answered locally %u&quot;">
       <constant ctag="cstr" strValue="queries forwarded %u, queries answered locally %u"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="19" origin="prim-exp" p-complexity="0">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;queries forwarded %u, queries answered locally %u&quot;">
       <constant ctag="cstr" strValue="queries forwarded %u, queries answered locally %u"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="20" origin="prim-exp" p-complexity="0">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;queries forwarded %u, queries answered locally %u&quot;">
       <constant ctag="cstr" strValue="queries forwarded %u, queries answered locally %u"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="21" origin="prim-exp" p-complexity="6">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="queries_forwarded"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="22" origin="prim-exp" p-complexity="0">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="23" origin="prim-lval" p-complexity="1">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="24" origin="prim-lval" p-complexity="1">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="25" origin="prim-lval" p-complexity="1">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="26" origin="prim-lval" p-complexity="1">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="27" origin="prim-exp" p-complexity="6">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="local_answer"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="28" origin="prim-exp" p-complexity="0">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="29" origin="prim-lval" p-complexity="1">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="30" origin="prim-lval" p-complexity="1">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="31" origin="prim-lval" p-complexity="1">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="32" origin="prim-lval" p-complexity="1">
     <location byte="215091" file="src/cache.c" line="1416"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="33" origin="prim-exp" p-complexity="0">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;queries for authoritative zones %u&quot;">
       <constant ctag="cstr" strValue="queries for authoritative zones %u"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="34" origin="prim-exp" p-complexity="0">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;queries for authoritative zones %u&quot;">
       <constant ctag="cstr" strValue="queries for authoritative zones %u"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="35" origin="prim-exp" p-complexity="0">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;queries for authoritative zones %u&quot;">
       <constant ctag="cstr" strValue="queries for authoritative zones %u"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="36" origin="prim-exp" p-complexity="6">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="auth_answer"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="37" origin="prim-exp" p-complexity="0">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="38" origin="prim-lval" p-complexity="1">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="39" origin="prim-lval" p-complexity="1">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="40" origin="prim-lval" p-complexity="1">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="41" origin="prim-lval" p-complexity="1">
     <location byte="215233" file="src/cache.c" line="1419"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="42" origin="prim-exp" p-complexity="6">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="servers"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="43" origin="prim-exp" p-complexity="0">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="44" origin="prim-lval" p-complexity="1">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="45" origin="prim-lval" p-complexity="1">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="46" origin="prim-lval" p-complexity="1">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="47" origin="prim-lval" p-complexity="1">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="711"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="48" origin="prim-exp" p-complexity="0">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="713"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="49" origin="prim-exp" p-complexity="0">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="50" origin="prim-lval" p-complexity="1">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="51" origin="prim-lval" p-complexity="1">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="52" origin="prim-lval" p-complexity="1">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="53" origin="prim-lval" p-complexity="1">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="54" origin="prim-exp" p-complexity="6">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv">
         <lval>
          <lhost>
           <var vid="6308" vname="serv"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="55" origin="prim-exp" p-complexity="0">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="56" origin="prim-lval" p-complexity="1">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="57" origin="prim-lval" p-complexity="1">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="58" origin="prim-lval" p-complexity="1">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="59" origin="prim-lval" p-complexity="1">
     <location byte="215390" file="src/cache.c" line="1427"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="60" origin="prim-exp" p-complexity="6">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv">
         <lval>
          <lhost>
           <var vid="6308" vname="serv"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="61" origin="prim-exp" p-complexity="0">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="62" origin="prim-lval" p-complexity="1">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="63" origin="prim-lval" p-complexity="1">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="64" origin="prim-lval" p-complexity="1">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="65" origin="prim-lval" p-complexity="1">
     <location byte="215324" file="src/cache.c" line="1426"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="715"/>
       <node name="loop"/>
       <node name="stmt" num="712"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="66" origin="prim-exp" p-complexity="6">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="servers"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="716"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="67" origin="prim-exp" p-complexity="0">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="716"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="68" origin="prim-lval" p-complexity="1">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="716"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="69" origin="prim-lval" p-complexity="1">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="716"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="70" origin="prim-lval" p-complexity="1">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="716"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="71" origin="prim-lval" p-complexity="1">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="716"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="72" origin="prim-exp" p-complexity="0">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="718"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="73" origin="prim-exp" p-complexity="6">
     <location byte="215480" file="src/cache.c" line="1430"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv">
         <lval>
          <lhost>
           <var vid="6308" vname="serv"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="74" origin="prim-exp" p-complexity="0">
     <location byte="215480" file="src/cache.c" line="1430"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="75" origin="prim-lval" p-complexity="1">
     <location byte="215480" file="src/cache.c" line="1430"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="76" origin="prim-lval" p-complexity="1">
     <location byte="215480" file="src/cache.c" line="1430"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="77" origin="prim-lval" p-complexity="1">
     <location byte="215480" file="src/cache.c" line="1430"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="78" origin="prim-lval" p-complexity="1">
     <location byte="215480" file="src/cache.c" line="1430"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="79" origin="prim-exp" p-complexity="0">
     <location byte="215600" file="src/cache.c" line="1435"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="721"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="80" origin="prim-exp" p-complexity="0">
     <location byte="215600" file="src/cache.c" line="1435"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6309" vname="serv1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="723"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="81" origin="prim-exp" p-complexity="6">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv1">
         <lval>
          <lhost>
           <var vid="6309" vname="serv1"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="82" origin="prim-exp" p-complexity="0">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6309" vname="serv1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="83" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="84" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="85" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="86" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="87" origin="prim-exp" p-complexity="0">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="88" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="89" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="90" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="91" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="92" origin="prim-exp" p-complexity="6">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="valid-mem">
      <exp etag="addrof" xstr="addrof (serv-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv">
          <lval>
           <lhost>
            <var vid="6308" vname="serv"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="93" origin="prim-exp" p-complexity="6">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="lower-bound">
      <exp etag="addrof" xstr="addrof (serv-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv">
          <lval>
           <lhost>
            <var vid="6308" vname="serv"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="203" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="94" origin="prim-exp" p-complexity="6">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="upper-bound">
      <exp etag="addrof" xstr="addrof (serv-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv">
          <lval>
           <lhost>
            <var vid="6308" vname="serv"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="203" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="95" origin="prim-exp" p-complexity="0">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6309" vname="serv1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="96" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="97" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="98" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="99" origin="prim-lval" p-complexity="1">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="100" origin="prim-exp" p-complexity="6">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="valid-mem">
      <exp etag="addrof" xstr="addrof (serv1-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv1">
          <lval>
           <lhost>
            <var vid="6309" vname="serv1"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="101" origin="prim-exp" p-complexity="6">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="lower-bound">
      <exp etag="addrof" xstr="addrof (serv1-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv1">
          <lval>
           <lhost>
            <var vid="6309" vname="serv1"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="203" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="102" origin="prim-exp" p-complexity="6">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="upper-bound">
      <exp etag="addrof" xstr="addrof (serv1-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv1">
          <lval>
           <lhost>
            <var vid="6309" vname="serv1"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="203" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="726"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="103" origin="prim-exp" p-complexity="0">
     <location byte="215650" file="src/cache.c" line="1436"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6314" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="104" origin="prim-exp" p-complexity="0">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6309" vname="serv1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="105" origin="prim-lval" p-complexity="1">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="106" origin="prim-lval" p-complexity="1">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="107" origin="prim-lval" p-complexity="1">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="108" origin="prim-lval" p-complexity="1">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="109" origin="prim-exp" p-complexity="6">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv1">
         <lval>
          <lhost>
           <var vid="6309" vname="serv1"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="110" origin="prim-exp" p-complexity="0">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6309" vname="serv1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="111" origin="prim-lval" p-complexity="1">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="112" origin="prim-lval" p-complexity="1">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="113" origin="prim-lval" p-complexity="1">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="114" origin="prim-lval" p-complexity="1">
     <location byte="215771" file="src/cache.c" line="1440"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="115" origin="prim-exp" p-complexity="0">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6312" vname="queries"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="116" origin="prim-exp" p-complexity="6">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv1">
         <lval>
          <lhost>
           <var vid="6309" vname="serv1"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="queries"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="117" origin="prim-exp" p-complexity="0">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6309" vname="serv1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="118" origin="prim-lval" p-complexity="1">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="119" origin="prim-lval" p-complexity="1">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="120" origin="prim-lval" p-complexity="1">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="121" origin="prim-lval" p-complexity="1">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="122" origin="prim-op" p-complexity="3">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="queries">
       <lval>
        <lhost>
         <var vid="6312" vname="queries"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="serv1-&gt;queries">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv1">
          <lval>
           <lhost>
            <var vid="6309" vname="serv1"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="queries"/>
        </offset>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="123" origin="prim-op" p-complexity="3">
     <location byte="215799" file="src/cache.c" line="1441"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="queries">
       <lval>
        <lhost>
         <var vid="6312" vname="queries"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="serv1-&gt;queries">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv1">
          <lval>
           <lhost>
            <var vid="6309" vname="serv1"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="queries"/>
        </offset>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="124" origin="prim-exp" p-complexity="0">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6313" vname="failed_queries"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="125" origin="prim-exp" p-complexity="6">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv1">
         <lval>
          <lhost>
           <var vid="6309" vname="serv1"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="failed_queries"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="126" origin="prim-exp" p-complexity="0">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6309" vname="serv1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="127" origin="prim-lval" p-complexity="1">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="128" origin="prim-lval" p-complexity="1">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="129" origin="prim-lval" p-complexity="1">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="130" origin="prim-lval" p-complexity="1">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="131" origin="prim-op" p-complexity="3">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="failed_queries">
       <lval>
        <lhost>
         <var vid="6313" vname="failed_queries"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="serv1-&gt;failed_queries">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv1">
          <lval>
           <lhost>
            <var vid="6309" vname="serv1"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="failed_queries"/>
        </offset>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="132" origin="prim-op" p-complexity="3">
     <location byte="215833" file="src/cache.c" line="1442"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="failed_queries">
       <lval>
        <lhost>
         <var vid="6313" vname="failed_queries"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="serv1-&gt;failed_queries">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv1">
          <lval>
           <lhost>
            <var vid="6309" vname="serv1"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="failed_queries"/>
        </offset>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="728"/>
       <node name="if-then"/>
       <node name="stmt" num="727"/>
       <node name="if-then"/>
       <node name="stmt" num="725"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="133" origin="prim-exp" p-complexity="6">
     <location byte="215600" file="src/cache.c" line="1435"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv1">
         <lval>
          <lhost>
           <var vid="6309" vname="serv1"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="729"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="134" origin="prim-exp" p-complexity="0">
     <location byte="215600" file="src/cache.c" line="1435"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6309" vname="serv1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="729"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="135" origin="prim-lval" p-complexity="1">
     <location byte="215600" file="src/cache.c" line="1435"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="729"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="136" origin="prim-lval" p-complexity="1">
     <location byte="215600" file="src/cache.c" line="1435"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="729"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="137" origin="prim-lval" p-complexity="1">
     <location byte="215600" file="src/cache.c" line="1435"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="729"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="138" origin="prim-lval" p-complexity="1">
     <location byte="215600" file="src/cache.c" line="1435"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv1">
       <lval>
        <lhost>
         <var vid="6309" vname="serv1"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="729"/>
       <node name="loop"/>
       <node name="stmt" num="722"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="139" origin="prim-exp" p-complexity="0">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="140" origin="prim-lval" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="141" origin="prim-lval" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="142" origin="prim-lval" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="143" origin="prim-lval" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="144" origin="prim-exp" p-complexity="6">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="valid-mem">
      <exp etag="addrof" xstr="addrof (serv-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv">
          <lval>
           <lhost>
            <var vid="6308" vname="serv"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="145" origin="prim-exp" p-complexity="6">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="lower-bound">
      <exp etag="addrof" xstr="addrof (serv-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv">
          <lval>
           <lhost>
            <var vid="6308" vname="serv"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="203" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="146" origin="prim-exp" p-complexity="6">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="upper-bound">
      <exp etag="addrof" xstr="addrof (serv-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv">
          <lval>
           <lhost>
            <var vid="6308" vname="serv"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="addr"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="203" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="147" origin="prim-exp" p-complexity="6">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="148" origin="prim-exp" p-complexity="0">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="149" origin="prim-lval" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="150" origin="prim-lval" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="151" origin="prim-lval" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="152" origin="prim-lval" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="153" origin="prim-exp" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="154" origin="prim-exp" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="155" origin="prim-exp" p-complexity="1">
     <location byte="215882" file="src/cache.c" line="1444"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="156" origin="prim-exp" p-complexity="0">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;server %s#%d: queries sent %u, retried or failed %u&quot;">
       <constant ctag="cstr" strValue="server %s#%d: queries sent %u, retried or failed %u"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="157" origin="prim-exp" p-complexity="0">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;server %s#%d: queries sent %u, retried or failed %u&quot;">
       <constant ctag="cstr" strValue="server %s#%d: queries sent %u, retried or failed %u"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="158" origin="prim-exp" p-complexity="0">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;server %s#%d: queries sent %u, retried or failed %u&quot;">
       <constant ctag="cstr" strValue="server %s#%d: queries sent %u, retried or failed %u"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="159" origin="prim-exp" p-complexity="6">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="160" origin="prim-exp" p-complexity="0">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="161" origin="prim-lval" p-complexity="1">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="162" origin="prim-lval" p-complexity="1">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="163" origin="prim-lval" p-complexity="1">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="164" origin="prim-lval" p-complexity="1">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="165" origin="prim-exp" p-complexity="1">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="166" origin="prim-exp" p-complexity="1">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="167" origin="prim-exp" p-complexity="1">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="168" origin="prim-exp" p-complexity="0">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6311" vname="port"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="169" origin="prim-exp" p-complexity="0">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6312" vname="queries"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="170" origin="prim-exp" p-complexity="0">
     <location byte="215947" file="src/cache.c" line="1445"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6313" vname="failed_queries"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="730"/>
       <node name="if-then"/>
       <node name="stmt" num="720"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="171" origin="prim-exp" p-complexity="6">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="serv">
         <lval>
          <lhost>
           <var vid="6308" vname="serv"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="206" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="731"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="172" origin="prim-exp" p-complexity="0">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6308" vname="serv"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="731"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="173" origin="prim-lval" p-complexity="1">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="731"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="174" origin="prim-lval" p-complexity="1">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="731"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="175" origin="prim-lval" p-complexity="1">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="731"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="176" origin="prim-lval" p-complexity="1">
     <location byte="215414" file="src/cache.c" line="1429"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="serv">
       <lval>
        <lhost>
         <var vid="6308" vname="serv"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="731"/>
       <node name="loop"/>
       <node name="stmt" num="717"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="177" origin="prim-exp" p-complexity="6">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="options"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="178" origin="prim-exp" p-complexity="0">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="179" origin="prim-lval" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="180" origin="prim-lval" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="181" origin="prim-lval" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="182" origin="prim-lval" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="183" origin="prim-op" p-complexity="0">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="184" origin="prim-op" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="185" origin="prim-exp" p-complexity="6">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="options"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="186" origin="prim-exp" p-complexity="0">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="187" origin="prim-lval" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="188" origin="prim-lval" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="189" origin="prim-lval" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="190" origin="prim-lval" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="191" origin="prim-op" p-complexity="0">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="192" origin="prim-op" p-complexity="1">
     <location byte="216086" file="src/cache.c" line="1448"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="193" origin="prim-exp" p-complexity="0">
     <location byte="216348" file="src/cache.c" line="1452"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;Host Address Flags Expires&quot;">
       <constant ctag="cstr" strValue="Host Address Flags Expires"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="735"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="194" origin="prim-exp" p-complexity="0">
     <location byte="216348" file="src/cache.c" line="1452"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;Host Address Flags Expires&quot;">
       <constant ctag="cstr" strValue="Host Address Flags Expires"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="735"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="195" origin="prim-exp" p-complexity="0">
     <location byte="216348" file="src/cache.c" line="1452"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;Host Address Flags Expires&quot;">
       <constant ctag="cstr" strValue="Host Address Flags Expires"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="735"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="196" origin="prim-exp" p-complexity="0">
     <location byte="216463" file="src/cache.c" line="1454"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6317" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="737"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="197" origin="prim-exp" p-complexity="0">
     <location byte="216463" file="src/cache.c" line="1454"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5910" vname="hash_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="737"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="198" origin="prim-exp" p-complexity="8">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
         <exp1 etag="lval" xstr="hash_table">
          <lval>
           <lhost>
            <var vid="5902" vname="hash_table"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="i">
          <lval>
           <lhost>
            <var vid="6317" vname="i"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ttag="tptr">
           <typ ckey="196" ttag="tcomp"/>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="199" origin="prim-exp" p-complexity="0">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="hash_table"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="200" origin="prim-exp" p-complexity="0">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6317" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="201" origin="prim-op" p-complexity="1">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="202" origin="prim-op" p-complexity="1">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="203" origin="prim-op" p-complexity="3">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6317" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="204" origin="prim-op" p-complexity="2">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6317" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="205" origin="prim-lval" p-complexity="3">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6317" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="206" origin="prim-lval" p-complexity="3">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6317" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="207" origin="prim-lval" p-complexity="3">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6317" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="208" origin="prim-lval" p-complexity="3">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6317" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="739"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="209" origin="prim-exp" p-complexity="0">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="741"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="210" origin="prim-exp" p-complexity="6">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="211" origin="prim-exp" p-complexity="0">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="212" origin="prim-lval" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="213" origin="prim-lval" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="214" origin="prim-lval" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="215" origin="prim-lval" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="216" origin="prim-exp" p-complexity="6">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="namebuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="217" origin="prim-exp" p-complexity="0">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="218" origin="prim-lval" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="219" origin="prim-lval" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="220" origin="prim-lval" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="221" origin="prim-lval" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="222" origin="prim-exp" p-complexity="0">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="223" origin="prim-exp" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="224" origin="prim-exp" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="225" origin="prim-exp" p-complexity="1">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="226" origin="prim-exp" p-complexity="0">
     <location byte="216563" file="src/cache.c" line="1457"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6322" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="227" origin="prim-exp" p-complexity="0">
     <location byte="216663" file="src/cache.c" line="1458"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6318" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="228" origin="prim-lval" p-complexity="1">
     <location byte="216663" file="src/cache.c" line="1458"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="229" origin="prim-lval" p-complexity="1">
     <location byte="216663" file="src/cache.c" line="1458"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="230" origin="prim-lval" p-complexity="1">
     <location byte="216663" file="src/cache.c" line="1458"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="231" origin="prim-lval" p-complexity="1">
     <location byte="216663" file="src/cache.c" line="1458"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="strlen" id="232" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="strlen" id="233" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="strlen" id="234" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="strlen" id="235" name="deref-read-nt" origin="f-pre" p-complexity="2">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (n:(char*))]">
       <arg etag="caste" xstr="caste (n:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="n">
         <lval>
          <lhost>
           <var vid="6320" vname="n"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="strlen" id="236" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </base-exp>
      <len-exp cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (n:(char*))]">
       <arg etag="caste" xstr="caste (n:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="n">
         <lval>
          <lhost>
           <var vid="6320" vname="n"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>s</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="237" origin="prim-exp" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="n">
       <lval>
        <lhost>
         <var vid="6320" vname="n"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="238" origin="prim-exp" p-complexity="0">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6320" vname="n"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="239" origin="prim-exp" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="240" origin="prim-exp" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="241" origin="prim-exp" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (n:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="n">
        <lval>
         <lhost>
          <var vid="6320" vname="n"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="743"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="242" origin="prim-exp" p-complexity="0">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6324" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="243" origin="prim-exp" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="244" origin="prim-exp" p-complexity="6">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="245" origin="prim-exp" p-complexity="0">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="246" origin="prim-lval" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="247" origin="prim-lval" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="248" origin="prim-lval" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="249" origin="prim-lval" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="250" origin="prim-op" p-complexity="0">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="251" origin="prim-op" p-complexity="1">
     <location byte="216676" file="src/cache.c" line="1459"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="252" origin="prim-exp" p-complexity="0">
     <location byte="216732" file="src/cache.c" line="1460"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;&lt;Root&gt;&quot;">
       <constant ctag="cstr" strValue="&lt;Root&gt;"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="746"/>
       <node name="if-then"/>
       <node name="stmt" num="745"/>
       <node name="if-then"/>
       <node name="stmt" num="744"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="253" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6320" vname="n"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="254" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="n">
       <lval>
        <lhost>
         <var vid="6320" vname="n"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="255" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="n">
       <lval>
        <lhost>
         <var vid="6320" vname="n"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="256" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="n">
       <lval>
        <lhost>
         <var vid="6320" vname="n"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="257" name="format" origin="f-pre" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="format-string">
      <exp etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </args>
     <precondition name="format">
      <math>
       <apply>
        <format-string/>
        <ci>format</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="258" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="259" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="260" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="261" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%-30.30s&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%-30.30s&quot;">
         <constant ctag="cstr" strValue="%-30.30s"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="262" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </base-exp>
      <len-exp cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%-30.30s&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%-30.30s&quot;">
         <constant ctag="cstr" strValue="%-30.30s"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="263" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="264" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="265" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="runtime-value" etag="cnapp" xstr="runtime-value">
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="266" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="267" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6319" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="268" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="269" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="270" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="271" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="const" xstr="&quot;%-30.30s&quot;">
       <constant ctag="cstr" strValue="%-30.30s"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="272" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="273" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="274" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (&quot;%-30.30s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-30.30s&quot;">
        <constant ctag="cstr" strValue="%-30.30s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="275" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6326" vname="tmp___2"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="276" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6326" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="277" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6326" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="278" origin="prim-exp" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6326" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="279" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6319" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="280" origin="prim-exp" p-complexity="0">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6328" vname="tmp___3"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="281" origin="prim-op" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="282" origin="prim-op" p-complexity="1">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="283" origin="prim-op" p-complexity="3">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="tmp___3">
       <lval>
        <lhost>
         <var vid="6328" vname="tmp___3"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="284" origin="prim-op" p-complexity="2">
     <location byte="216751" file="src/cache.c" line="1461"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="tmp___3">
       <lval>
        <lhost>
         <var vid="6328" vname="tmp___3"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="747"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="285" origin="prim-exp" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="286" origin="prim-exp" p-complexity="6">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="287" origin="prim-exp" p-complexity="0">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="288" origin="prim-lval" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="289" origin="prim-lval" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="290" origin="prim-lval" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="291" origin="prim-lval" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="292" origin="prim-op" p-complexity="0">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="293" origin="prim-op" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="294" origin="prim-exp" p-complexity="0">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="749"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="295" origin="prim-exp" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="749"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="296" origin="prim-exp" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="749"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="297" origin="prim-exp" p-complexity="1">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="749"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="298" origin="prim-exp" p-complexity="0">
     <location byte="216799" file="src/cache.c" line="1462"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6332" vname="tmp___5"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="299" origin="prim-exp" p-complexity="0">
     <location byte="216874" file="src/cache.c" line="1463"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="752"/>
       <node name="if-else"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="300" origin="prim-exp" p-complexity="1">
     <location byte="216874" file="src/cache.c" line="1463"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="752"/>
       <node name="if-else"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="301" origin="prim-exp" p-complexity="1">
     <location byte="216874" file="src/cache.c" line="1463"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="752"/>
       <node name="if-else"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="302" origin="prim-exp" p-complexity="1">
     <location byte="216874" file="src/cache.c" line="1463"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="752"/>
       <node name="if-else"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="303" origin="prim-exp" p-complexity="0">
     <location byte="216874" file="src/cache.c" line="1463"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6330" vname="tmp___4"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="752"/>
       <node name="if-else"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="304" origin="prim-exp" p-complexity="1">
     <location byte="216874" file="src/cache.c" line="1463"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___4">
       <lval>
        <lhost>
         <var vid="6330" vname="tmp___4"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="752"/>
       <node name="if-else"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="305" origin="prim-exp" p-complexity="1">
     <location byte="216874" file="src/cache.c" line="1463"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___4">
       <lval>
        <lhost>
         <var vid="6330" vname="tmp___4"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="752"/>
       <node name="if-else"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="306" origin="prim-exp" p-complexity="1">
     <location byte="216874" file="src/cache.c" line="1463"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___4">
       <lval>
        <lhost>
         <var vid="6330" vname="tmp___4"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="752"/>
       <node name="if-else"/>
       <node name="stmt" num="750"/>
       <node name="if-then"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="307" origin="prim-exp" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="308" origin="prim-exp" p-complexity="6">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="309" origin="prim-exp" p-complexity="0">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="310" origin="prim-lval" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="311" origin="prim-lval" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="312" origin="prim-lval" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="313" origin="prim-lval" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="314" origin="prim-op" p-complexity="0">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="5">
       <constant ctag="cint64" ikind="iint" intValue="5"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="315" origin="prim-op" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="5">
       <constant ctag="cint64" ikind="iint" intValue="5"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="316" origin="prim-exp" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="317" origin="prim-exp" p-complexity="6">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="318" origin="prim-exp" p-complexity="0">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="319" origin="prim-lval" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="320" origin="prim-lval" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="321" origin="prim-lval" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="322" origin="prim-lval" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="323" origin="prim-op" p-complexity="0">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="324" origin="prim-op" p-complexity="1">
     <location byte="216946" file="src/cache.c" line="1475"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="325" origin="prim-exp" p-complexity="6">
     <location byte="217017" file="src/cache.c" line="1477"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="756"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="326" origin="prim-exp" p-complexity="0">
     <location byte="217017" file="src/cache.c" line="1477"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="756"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="327" origin="prim-lval" p-complexity="1">
     <location byte="217017" file="src/cache.c" line="1477"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="756"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="328" origin="prim-lval" p-complexity="1">
     <location byte="217017" file="src/cache.c" line="1477"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="756"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="329" origin="prim-lval" p-complexity="1">
     <location byte="217017" file="src/cache.c" line="1477"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="756"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="330" origin="prim-lval" p-complexity="1">
     <location byte="217017" file="src/cache.c" line="1477"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="756"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="331" origin="prim-exp" p-complexity="1">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="332" origin="prim-exp" p-complexity="6">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="333" origin="prim-exp" p-complexity="0">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="334" origin="prim-lval" p-complexity="1">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="335" origin="prim-lval" p-complexity="1">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="336" origin="prim-lval" p-complexity="1">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="337" origin="prim-lval" p-complexity="1">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="338" origin="prim-op" p-complexity="0">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="339" origin="prim-op" p-complexity="1">
     <location byte="217049" file="src/cache.c" line="1478"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" fname="inet_ntop" id="340" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="16" fname="inet_ntop" id="341" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="16" fname="inet_ntop" id="342" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="16" fname="inet_ntop" id="343" name="deref-read" origin="f-pre" p-complexity="11">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
         <typ ttag="tptr">
          <attributes>
           <attr attrname="restrict"/>
          </attributes>
          <typ ttag="tvoid">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
         <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
          <lval>
           <lhost>
            <mem etag="lval" xstr="cache___0">
             <lval>
              <lhost>
               <var vid="6316" vname="cache___0"/>
              </lhost>
             </lval>
            </mem>
           </lhost>
           <offset>
            <offset>
             <field ckey="197" fname="addr"/>
            </offset>
            <field ckey="196" fname="addr"/>
           </offset>
          </lval>
         </exp>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="16" fname="inet_ntop" id="344" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="16" fname="inet_ntop" id="345" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="16" fname="inet_ntop" id="346" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="16" fname="inet_ntop" id="347" name="no-overlap" origin="f-pre" p-complexity="7">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="dst" nr="3" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="no-overlap">
      <math>
       <apply>
        <no-overlap/>
        <ci>src</ci>
        <ci>dst</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="348" origin="prim-exp" p-complexity="6">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="197" fname="addr"/>
         </offset>
         <field ckey="196" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="349" origin="prim-exp" p-complexity="0">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="350" origin="prim-lval" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="351" origin="prim-lval" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="352" origin="prim-lval" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="353" origin="prim-lval" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="354" origin="prim-exp" p-complexity="6">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="355" origin="prim-exp" p-complexity="6">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="356" origin="prim-exp" p-complexity="6">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="357" origin="prim-exp" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="358" origin="prim-exp" p-complexity="0">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6318" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="359" origin="prim-exp" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="360" origin="prim-exp" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="361" origin="prim-exp" p-complexity="1">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="362" origin="prim-exp" p-complexity="0">
     <location byte="217081" file="src/cache.c" line="1479"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp etag="const" xstr="46">
       <constant ctag="cint64" ikind="iint" intValue="46"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="758"/>
       <node name="if-then"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="363" origin="prim-exp" p-complexity="1">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="364" origin="prim-exp" p-complexity="6">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="365" origin="prim-exp" p-complexity="0">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="366" origin="prim-lval" p-complexity="1">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="367" origin="prim-lval" p-complexity="1">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="368" origin="prim-lval" p-complexity="1">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="369" origin="prim-lval" p-complexity="1">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="370" origin="prim-op" p-complexity="0">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="371" origin="prim-op" p-complexity="1">
     <location byte="217129" file="src/cache.c" line="1481"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" fname="inet_ntop" id="372" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="17" fname="inet_ntop" id="373" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="17" fname="inet_ntop" id="374" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="17" fname="inet_ntop" id="375" name="deref-read" origin="f-pre" p-complexity="11">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
         <typ ttag="tptr">
          <attributes>
           <attr attrname="restrict"/>
          </attributes>
          <typ ttag="tvoid">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
         <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
          <lval>
           <lhost>
            <mem etag="lval" xstr="cache___0">
             <lval>
              <lhost>
               <var vid="6316" vname="cache___0"/>
              </lhost>
             </lval>
            </mem>
           </lhost>
           <offset>
            <offset>
             <field ckey="197" fname="addr"/>
            </offset>
            <field ckey="196" fname="addr"/>
           </offset>
          </lval>
         </exp>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="17" fname="inet_ntop" id="376" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="17" fname="inet_ntop" id="377" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="17" fname="inet_ntop" id="378" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="17" fname="inet_ntop" id="379" name="no-overlap" origin="f-pre" p-complexity="7">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="dst" nr="3" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="no-overlap">
      <math>
       <apply>
        <no-overlap/>
        <ci>src</ci>
        <ci>dst</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="380" origin="prim-exp" p-complexity="6">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="197" fname="addr"/>
         </offset>
         <field ckey="196" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="381" origin="prim-exp" p-complexity="0">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="382" origin="prim-lval" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="383" origin="prim-lval" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="384" origin="prim-lval" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="385" origin="prim-lval" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="386" origin="prim-exp" p-complexity="6">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="387" origin="prim-exp" p-complexity="6">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="388" origin="prim-exp" p-complexity="6">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="389" origin="prim-exp" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="390" origin="prim-exp" p-complexity="0">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6318" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="391" origin="prim-exp" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="392" origin="prim-exp" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="393" origin="prim-exp" p-complexity="1">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (a:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="a">
        <lval>
         <lhost>
          <var vid="6318" vname="a"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="17" id="394" origin="prim-exp" p-complexity="0">
     <location byte="217161" file="src/cache.c" line="1482"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp etag="const" xstr="46">
       <constant ctag="cint64" ikind="iint" intValue="46"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="760"/>
       <node name="if-then"/>
       <node name="stmt" num="759"/>
       <node name="if-else"/>
       <node name="stmt" num="757"/>
       <node name="if-then"/>
       <node name="stmt" num="755"/>
       <node name="if-else"/>
       <node name="stmt" num="753"/>
       <node name="if-else"/>
       <node name="stmt" num="748"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="395" origin="prim-exp" p-complexity="1">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="396" origin="prim-exp" p-complexity="6">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="397" origin="prim-exp" p-complexity="0">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="398" origin="prim-lval" p-complexity="1">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="399" origin="prim-lval" p-complexity="1">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="400" origin="prim-lval" p-complexity="1">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="401" origin="prim-lval" p-complexity="1">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="402" origin="prim-op" p-complexity="0">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="403" origin="prim-op" p-complexity="1">
     <location byte="217218" file="src/cache.c" line="1486"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="404" origin="prim-exp" p-complexity="0">
     <location byte="217253" file="src/cache.c" line="1487"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;4&quot;">
       <constant ctag="cstr" strValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="762"/>
       <node name="if-then"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="405" origin="prim-exp" p-complexity="1">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="406" origin="prim-exp" p-complexity="6">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="407" origin="prim-exp" p-complexity="0">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="408" origin="prim-lval" p-complexity="1">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="409" origin="prim-lval" p-complexity="1">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="410" origin="prim-lval" p-complexity="1">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="411" origin="prim-lval" p-complexity="1">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="412" origin="prim-op" p-complexity="0">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="413" origin="prim-op" p-complexity="1">
     <location byte="217272" file="src/cache.c" line="1488"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="414" origin="prim-exp" p-complexity="0">
     <location byte="217307" file="src/cache.c" line="1489"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;6&quot;">
       <constant ctag="cstr" strValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="764"/>
       <node name="if-then"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="415" origin="prim-exp" p-complexity="1">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="416" origin="prim-exp" p-complexity="6">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="417" origin="prim-exp" p-complexity="0">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="418" origin="prim-lval" p-complexity="1">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="419" origin="prim-lval" p-complexity="1">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="420" origin="prim-lval" p-complexity="1">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="421" origin="prim-lval" p-complexity="1">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="422" origin="prim-op" p-complexity="0">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="423" origin="prim-op" p-complexity="1">
     <location byte="217326" file="src/cache.c" line="1490"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="424" origin="prim-exp" p-complexity="0">
     <location byte="217362" file="src/cache.c" line="1491"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;C&quot;">
       <constant ctag="cstr" strValue="C"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="766"/>
       <node name="if-then"/>
       <node name="stmt" num="765"/>
       <node name="if-else"/>
       <node name="stmt" num="763"/>
       <node name="if-else"/>
       <node name="stmt" num="761"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="425" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="426" origin="prim-exp" p-complexity="6">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="427" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="428" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="429" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="430" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="431" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="432" origin="prim-op" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="15">
       <constant ctag="cint64" ikind="iint" intValue="15"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="433" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="15">
       <constant ctag="cint64" ikind="iint" intValue="15"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="767"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="434" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="435" origin="prim-exp" p-complexity="6">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="436" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="437" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="438" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="439" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="440" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="441" origin="prim-op" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="442" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="770"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="443" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="444" origin="prim-exp" p-complexity="6">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="445" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="446" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="447" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="448" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="449" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="450" origin="prim-op" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="451" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="773"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="452" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="453" origin="prim-exp" p-complexity="6">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="454" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="455" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="456" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="457" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="458" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="459" origin="prim-op" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="5">
       <constant ctag="cint64" ikind="iint" intValue="5"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="460" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="5">
       <constant ctag="cint64" ikind="iint" intValue="5"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="776"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="461" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="462" origin="prim-exp" p-complexity="6">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="463" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="464" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="465" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="466" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="467" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="468" origin="prim-op" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="469" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="779"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="470" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="782"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="471" origin="prim-exp" p-complexity="6">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="782"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="472" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="782"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="473" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="782"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="474" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="782"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="475" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="782"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="476" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="782"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="477" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="478" origin="prim-exp" p-complexity="6">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="479" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="480" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="481" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="482" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="483" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="484" origin="prim-op" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="485" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="785"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="486" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="487" origin="prim-exp" p-complexity="6">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="488" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="489" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="490" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="491" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="492" origin="prim-lval" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="493" origin="prim-op" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="494" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="788"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="495" name="format" origin="f-pre" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="format-string">
      <exp etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="format">
      <math>
       <apply>
        <format-string/>
        <ci>format</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="496" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="497" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="498" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="499" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
         <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="500" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </base-exp>
      <len-exp cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
         <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="501" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="502" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="503" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="runtime-value" etag="cnapp" xstr="runtime-value">
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="504" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="505" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6319" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="506" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="507" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="508" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="509" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
       <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="510" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="511" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="512" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%-40.40s %s%s%s%s%s%s%s%s%s&quot;">
        <constant ctag="cstr" strValue="%-40.40s %s%s%s%s%s%s%s%s%s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="513" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6318" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="514" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="515" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="516" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6318" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="517" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6310" vname="t"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="518" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="t">
       <lval>
        <lhost>
         <var vid="6310" vname="t"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="519" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="t">
       <lval>
        <lhost>
         <var vid="6310" vname="t"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="520" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="t">
       <lval>
        <lhost>
         <var vid="6310" vname="t"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="521" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6348" vname="tmp___13"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="522" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___13">
       <lval>
        <lhost>
         <var vid="6348" vname="tmp___13"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="523" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___13">
       <lval>
        <lhost>
         <var vid="6348" vname="tmp___13"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="524" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___13">
       <lval>
        <lhost>
         <var vid="6348" vname="tmp___13"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="525" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6346" vname="tmp___12"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="526" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___12">
       <lval>
        <lhost>
         <var vid="6346" vname="tmp___12"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="527" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___12">
       <lval>
        <lhost>
         <var vid="6346" vname="tmp___12"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="528" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___12">
       <lval>
        <lhost>
         <var vid="6346" vname="tmp___12"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="529" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6344" vname="tmp___11"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="530" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___11">
       <lval>
        <lhost>
         <var vid="6344" vname="tmp___11"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="531" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___11">
       <lval>
        <lhost>
         <var vid="6344" vname="tmp___11"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="532" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___11">
       <lval>
        <lhost>
         <var vid="6344" vname="tmp___11"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="6"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="533" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6342" vname="tmp___10"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="534" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___10">
       <lval>
        <lhost>
         <var vid="6342" vname="tmp___10"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="535" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___10">
       <lval>
        <lhost>
         <var vid="6342" vname="tmp___10"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="536" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___10">
       <lval>
        <lhost>
         <var vid="6342" vname="tmp___10"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="7"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="537" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6340" vname="tmp___9"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="8"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="538" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___9">
       <lval>
        <lhost>
         <var vid="6340" vname="tmp___9"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="8"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="539" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___9">
       <lval>
        <lhost>
         <var vid="6340" vname="tmp___9"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="8"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="540" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___9">
       <lval>
        <lhost>
         <var vid="6340" vname="tmp___9"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="8"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="541" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6338" vname="tmp___8"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="9"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="542" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___8">
       <lval>
        <lhost>
         <var vid="6338" vname="tmp___8"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="9"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="543" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___8">
       <lval>
        <lhost>
         <var vid="6338" vname="tmp___8"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="9"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="544" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___8">
       <lval>
        <lhost>
         <var vid="6338" vname="tmp___8"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="9"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="545" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6336" vname="tmp___7"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="10"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="546" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___7">
       <lval>
        <lhost>
         <var vid="6336" vname="tmp___7"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="10"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="547" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___7">
       <lval>
        <lhost>
         <var vid="6336" vname="tmp___7"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="10"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="548" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___7">
       <lval>
        <lhost>
         <var vid="6336" vname="tmp___7"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="10"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="549" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6334" vname="tmp___6"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="11"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="550" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___6">
       <lval>
        <lhost>
         <var vid="6334" vname="tmp___6"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="11"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="551" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___6">
       <lval>
        <lhost>
         <var vid="6334" vname="tmp___6"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="11"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="552" origin="prim-exp" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___6">
       <lval>
        <lhost>
         <var vid="6334" vname="tmp___6"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="11"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="553" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6319" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="554" origin="prim-exp" p-complexity="0">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6350" vname="tmp___14"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="555" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="556" origin="prim-op" p-complexity="1">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="557" origin="prim-op" p-complexity="3">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="tmp___14">
       <lval>
        <lhost>
         <var vid="6350" vname="tmp___14"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="558" origin="prim-op" p-complexity="2">
     <location byte="217382" file="src/cache.c" line="1498"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="tmp___14">
       <lval>
        <lhost>
         <var vid="6350" vname="tmp___14"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="791"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="559" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="560" origin="prim-exp" p-complexity="6">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="561" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="562" origin="prim-lval" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="563" origin="prim-lval" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="564" origin="prim-lval" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="565" origin="prim-lval" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="566" origin="prim-exp" p-complexity="6">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ilong" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="addrof" xstr="addrof (cache___0-&gt;ttd)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6316" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="ttd"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="567" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="568" origin="prim-lval" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="569" origin="prim-lval" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="570" origin="prim-lval" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="571" origin="prim-lval" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="572" origin="prim-exp" p-complexity="6">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;ttd):(time_t*))">
       <typ ttag="tptr">
        <typ tname="time_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;ttd)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="196" fname="ttd"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="573" origin="prim-exp" p-complexity="6">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;ttd):(time_t*))">
       <typ ttag="tptr">
        <typ tname="time_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;ttd)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="196" fname="ttd"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ilong" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="574" origin="prim-exp" p-complexity="6">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (cache___0-&gt;ttd):(time_t*))">
       <typ ttag="tptr">
        <typ tname="time_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (cache___0-&gt;ttd)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="cache___0">
           <lval>
            <lhost>
             <var vid="6316" vname="cache___0"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="196" fname="ttd"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ilong" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="575" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="tmp___15">
       <lval>
        <lhost>
         <var vid="6352" vname="tmp___15"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="576" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6352" vname="tmp___15"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="794"/>
       <node name="if-else"/>
       <node name="stmt" num="792"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="577" name="format" origin="f-pre" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="format-string">
      <exp etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="format">
      <math>
       <apply>
        <format-string/>
        <ci>format</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="578" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="579" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="580" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="581" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%s&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%s&quot;">
         <constant ctag="cstr" strValue="%s"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="582" name="deref-read-nt" origin="f-pre" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </base-exp>
      <len-exp cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%s&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%s&quot;">
         <constant ctag="cstr" strValue="%s"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="format" nr="2" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>format</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>format</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="583" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="584" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" fname="sprintf" id="585" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="runtime-value" etag="cnapp" xstr="runtime-value">
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s" nr="1" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <runtime-value/>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="586" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="587" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6319" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="588" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="589" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="590" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (p:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="591" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="const" xstr="&quot;%s&quot;">
       <constant ctag="cstr" strValue="%s"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="592" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="593" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="594" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (&quot;%s&quot;:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="const" xstr="&quot;%s&quot;">
        <constant ctag="cstr" strValue="%s"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="595" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6354" vname="tmp___16"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="596" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___16">
       <lval>
        <lhost>
         <var vid="6354" vname="tmp___16"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="597" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___16">
       <lval>
        <lhost>
         <var vid="6354" vname="tmp___16"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="598" origin="prim-exp" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___16">
       <lval>
        <lhost>
         <var vid="6354" vname="tmp___16"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="599" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6319" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="600" origin="prim-exp" p-complexity="0">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6356" vname="tmp___17"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="601" origin="prim-op" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="602" origin="prim-op" p-complexity="1">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="603" origin="prim-op" p-complexity="3">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="tmp___17">
       <lval>
        <lhost>
         <var vid="6356" vname="tmp___17"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="604" origin="prim-op" p-complexity="2">
     <location byte="217768" file="src/cache.c" line="1510"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="tmp___17">
       <lval>
        <lhost>
         <var vid="6356" vname="tmp___17"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="605" origin="prim-exp" p-complexity="0">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6319" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="606" origin="prim-op" p-complexity="1">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="607" origin="prim-op" p-complexity="1">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="608" origin="prim-op" p-complexity="2">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate op="minuspi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="609" origin="prim-op" p-complexity="1">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate op="minuspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6319" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="610" origin="prim-lval" p-complexity="2">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate tag="not-null">
      <exp binop="minuspi" etag="binop" xstr="((p -i 1):(char*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="611" origin="prim-lval" p-complexity="2">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate tag="valid-mem">
      <exp binop="minuspi" etag="binop" xstr="((p -i 1):(char*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="612" origin="prim-lval" p-complexity="2">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate tag="lower-bound">
      <exp binop="minuspi" etag="binop" xstr="((p -i 1):(char*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="613" origin="prim-lval" p-complexity="2">
     <location byte="217851" file="src/cache.c" line="1512"/>
     <predicate tag="upper-bound">
      <exp binop="minuspi" etag="binop" xstr="((p -i 1):(char*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6319" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="614" origin="prim-exp" p-complexity="1">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="namebuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="615" origin="prim-exp" p-complexity="6">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="namebuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="616" origin="prim-exp" p-complexity="0">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="617" origin="prim-lval" p-complexity="1">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="618" origin="prim-lval" p-complexity="1">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="619" origin="prim-lval" p-complexity="1">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="620" origin="prim-lval" p-complexity="1">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="621" origin="prim-exp" p-complexity="1">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="622" origin="prim-exp" p-complexity="1">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="623" origin="prim-exp" p-complexity="1">
     <location byte="217869" file="src/cache.c" line="1514"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="624" origin="prim-exp" p-complexity="6">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6316" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="625" origin="prim-exp" p-complexity="0">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6316" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="626" origin="prim-lval" p-complexity="1">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="627" origin="prim-lval" p-complexity="1">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="628" origin="prim-lval" p-complexity="1">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="629" origin="prim-lval" p-complexity="1">
     <location byte="216492" file="src/cache.c" line="1455"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6316" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="795"/>
       <node name="loop"/>
       <node name="stmt" num="740"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="630" origin="prim-exp" p-complexity="0">
     <location byte="216463" file="src/cache.c" line="1454"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6317" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="796"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="631" origin="prim-op" p-complexity="2">
     <location byte="216463" file="src/cache.c" line="1454"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6317" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="796"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="632" origin="prim-op" p-complexity="2">
     <location byte="216463" file="src/cache.c" line="1454"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6317" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="796"/>
       <node name="loop"/>
       <node name="stmt" num="736"/>
       <node name="if-then"/>
       <node name="stmt" num="734"/>
       <node name="if-else"/>
       <node name="stmt" num="732"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:34">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
