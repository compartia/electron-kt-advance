<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function cfilename="src/cache.c" gvid="46" name="cache_make_stat" num-ppo="0">
   <statistics api-assumptions="2" callers="1" ds-assumptions="0" field-assignments="6" global-assignments="4" global-assumptions="45" rv-assumptions="0"/>
   <parameters>
    <param formal-vid="6276" index="1" vname="t"/>
   </parameters>
   <callers>
    <caller cfilename="src/rfc1035.c" fname="answer_request" gvid="359" updated="01/09/2017 21:38:45" updated-f="1483997925.77">
     <call-site byte="225368" file="src/rfc1035.c" line="1277"/>
     <args>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="1"/>
      <node name="stmt" num="816"/>
      <node name="if-then"/>
      <node name="stmt" num="815"/>
      <node name="if-then"/>
      <node name="stmt" num="813"/>
      <node name="if-then"/>
      <node name="stmt" num="811"/>
      <node name="if-then"/>
      <node name="stmt" num="809"/>
      <node name="loop"/>
      <node name="stmt" num="806"/>
      <node name="if-then"/>
      <node name="stmt" num="804"/>
      <node name="if-else"/>
      <node name="stmt" num="802"/>
      <node name="loop"/>
      <node name="stmt" num="795"/>
     </calling-context>
    </caller>
   </callers>
   <api-assumptions>
    <api-assumption nr="1">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="t">
         <lval>
          <lhost>
           <var vid="6276" vname="t"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="48" fname="stat"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="11"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="2">
     <predicate tag="not-null">
      <exp etag="lval" xstr="t">
       <lval>
        <lhost>
         <var vid="6276" vname="t"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="13"/>
      <po id="472"/>
      <po id="483"/>
      <po id="513"/>
      <po id="524"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
   </api-assumptions>
   <rv-assumptions/>
   <ds-assumptions/>
   <global-assumptions>
    <global-assumption nr="1">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="buff">
       <lval>
        <lhost>
         <var vid="93" vname="buff"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="29"/>
      <po id="57"/>
      <po id="80"/>
      <po id="103"/>
      <po id="131"/>
      <po id="159"/>
      <po id="304"/>
      <po id="389"/>
      <po id="415"/>
      <po id="493"/>
      <po id="504"/>
      <po id="534"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="2">
     <predicate tag="not-null">
      <exp etag="lval" xstr="buff">
       <lval>
        <lhost>
         <var vid="93" vname="buff"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="28"/>
      <po id="56"/>
      <po id="79"/>
      <po id="102"/>
      <po id="130"/>
      <po id="158"/>
      <po id="302"/>
      <po id="387"/>
      <po id="413"/>
      <po id="491"/>
      <po id="503"/>
      <po id="533"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="3">
     <predicate tag="common-base">
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="6282" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="buff">
       <lval>
        <lhost>
         <var vid="93" vname="buff"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="305"/>
      <po id="306"/>
      <po id="390"/>
      <po id="391"/>
      <po id="416"/>
      <po id="417"/>
      <po id="494"/>
      <po id="495"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="4">
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (buff:(unsigned char*))">
       <typ ttag="tptr">
        <typ ikind="iuchar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="480"/>
      <po id="521"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="5">
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (((buff +i 1):(char*):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp binop="pluspi" etag="binop" xstr="((buff +i 1):(char*)">
        <exp1 etag="lval" xstr="buff">
         <lval>
          <lhost>
           <var vid="93" vname="buff"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="34"/>
      <po id="62"/>
      <po id="85"/>
      <po id="108"/>
      <po id="136"/>
      <po id="164"/>
      <po id="509"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="6">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="buff">
       <lval>
        <lhost>
         <var vid="93" vname="buff"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="31"/>
      <po id="59"/>
      <po id="82"/>
      <po id="105"/>
      <po id="133"/>
      <po id="161"/>
      <po id="506"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="7">
     <predicate tag="allocation-base">
      <exp etag="caste" xstr="caste (buff:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="377"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="8">
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6284" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (buff:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="357"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="9">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="servers"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="175"/>
      <po id="199"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="10">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (((buff +i 1):(char*):(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="pluspi" etag="binop" xstr="((buff +i 1):(char*)">
        <exp1 etag="lval" xstr="buff">
         <lval>
          <lhost>
           <var vid="93" vname="buff"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (((buff +i 1):(char*):(char*))]">
       <arg etag="caste" xstr="caste (((buff +i 1):(char*):(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp binop="pluspi" etag="binop" xstr="((buff +i 1):(char*)">
         <exp1 etag="lval" xstr="buff">
          <lval>
           <lhost>
            <var vid="93" vname="buff"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="ichar" ttag="tint"/>
         </typ>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="499"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="11">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="6284" vname="new"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="minuspp" etag="binop" xstr="((p -p buff):long">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6282" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="ilong" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="395"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="12">
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (buff:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </base-exp>
      <len-exp etag="caste" xstr="caste (bufflen:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="bufflen">
        <lval>
         <lhost>
          <var vid="92" vname="bufflen"/>
         </lhost>
        </lval>
       </exp>
      </len-exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="364"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="13">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="auth_answer"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="169"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="14">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="286"/>
      <po id="335"/>
      <po id="446"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="15">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="280"/>
      <po id="329"/>
      <po id="440"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="16">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="39"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="17">
     <predicate from="ilong" tag="signed-to-unsigned-cast" to="iushort">
      <exp binop="minuspp" etag="binop" xstr="((p -p buff):long">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6282" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="ilong" ttag="tint"/>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="487"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="18">
     <predicate tag="cast">
      <tfrom ikind="ilong" ttag="tint"/>
      <tto ikind="iint" ttag="tint"/>
      <exp binop="minusa" etag="binop" xstr="((caste (bufflen:long) - ((p -p buff):long):long">
       <exp1 etag="caste" xstr="caste (bufflen:long)">
        <typ ikind="ilong" ttag="tint"/>
        <exp etag="lval" xstr="bufflen">
         <lval>
          <lhost>
           <var vid="92" vname="bufflen"/>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 binop="minuspp" etag="binop" xstr="((p -p buff):long">
        <exp1 etag="lval" xstr="p">
         <lval>
          <lhost>
           <var vid="6282" vname="p"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="buff">
         <lval>
          <lhost>
           <var vid="93" vname="buff"/>
          </lhost>
         </lval>
        </exp2>
        <typ ikind="ilong" ttag="tint"/>
       </exp2>
       <typ ikind="ilong" ttag="tint"/>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="296"/>
      <po id="407"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="19">
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="lval" xstr="bufflen">
       <lval>
        <lhost>
         <var vid="92" vname="bufflen"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="375"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="20">
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="317" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="41"/>
      <po id="115"/>
      <po id="143"/>
      <po id="171"/>
      <po id="177"/>
      <po id="201"/>
      <po id="282"/>
      <po id="331"/>
      <po id="442"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="21">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (((buff +i 1):(char*):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp binop="pluspi" etag="binop" xstr="((buff +i 1):(char*)">
        <exp1 etag="lval" xstr="buff">
         <lval>
          <lhost>
           <var vid="93" vname="buff"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </exp>
      </exp1>
      <exp2 cn="runtime-value" etag="cnapp" xstr="runtime-value">
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="25"/>
      <po id="53"/>
      <po id="76"/>
      <po id="99"/>
      <po id="127"/>
      <po id="155"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="22">
     <predicate op="minusa" size="ilong" tag="int-overflow">
      <exp1 etag="caste" xstr="caste (bufflen:long)">
       <typ ikind="ilong" ttag="tint"/>
       <exp etag="lval" xstr="bufflen">
        <lval>
         <lhost>
          <var vid="92" vname="bufflen"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 binop="minuspp" etag="binop" xstr="((p -p buff):long">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6282" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="ilong" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="308"/>
      <po id="419"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="23">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="317" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="42"/>
      <po id="116"/>
      <po id="144"/>
      <po id="172"/>
      <po id="178"/>
      <po id="202"/>
      <po id="283"/>
      <po id="332"/>
      <po id="443"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="24">
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 binop="plusa" etag="binop" xstr="((bytes_needed + 1):int">
       <exp1 etag="lval" xstr="bytes_needed">
        <lval>
         <lhost>
          <var vid="6289" vname="bytes_needed"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp1>
      <exp2 etag="lval" xstr="bufflen">
       <lval>
        <lhost>
         <var vid="92" vname="bufflen"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="348"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="25">
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (buff:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="374"/>
      <po id="382"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="26">
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (buff:(unsigned char*))">
       <typ ttag="tptr">
        <typ ikind="iuchar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="481"/>
      <po id="522"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="27">
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (buff:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="372"/>
      <po id="380"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="28">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (buff:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (bufflen:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="bufflen">
        <lval>
         <lhost>
          <var vid="92" vname="bufflen"/>
         </lhost>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="363"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="29">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="local_answer"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="141"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="30">
     <predicate op="minusa" size="ilong" tag="int-underflow">
      <exp1 etag="caste" xstr="caste (bufflen:long)">
       <typ ikind="ilong" ttag="tint"/>
       <exp etag="lval" xstr="bufflen">
        <lval>
         <lhost>
          <var vid="92" vname="bufflen"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 binop="minuspp" etag="binop" xstr="((p -p buff):long">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6282" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="ilong" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="307"/>
      <po id="418"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="31">
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (((buff +i 1):(char*):(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="pluspi" etag="binop" xstr="((buff +i 1):(char*)">
        <exp1 etag="lval" xstr="buff">
         <lval>
          <lhost>
           <var vid="93" vname="buff"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="497"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="32">
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="6284" vname="new"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="minuspp" etag="binop" xstr="((p -p buff):long">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6282" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="ilong" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="394"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="33">
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (buff:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="361"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="34">
     <predicate op="minusa" size="iint" tag="int-underflow">
      <exp1 binop="plusa" etag="binop" xstr="((((bytes_needed + 1):int + bufflen):int">
       <exp1 binop="plusa" etag="binop" xstr="((bytes_needed + 1):int">
        <exp1 etag="lval" xstr="bytes_needed">
         <lval>
          <lhost>
           <var vid="6289" vname="bytes_needed"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ikind="iint" ttag="tint"/>
       </exp1>
       <exp2 etag="lval" xstr="bufflen">
        <lval>
         <lhost>
          <var vid="92" vname="bufflen"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp1>
      <exp2 etag="lval" xstr="bytes_avail">
       <lval>
        <lhost>
         <var vid="6288" vname="bytes_avail"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="350"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="35">
     <predicate op="minusa" size="iint" tag="int-overflow">
      <exp1 binop="plusa" etag="binop" xstr="((((bytes_needed + 1):int + bufflen):int">
       <exp1 binop="plusa" etag="binop" xstr="((bytes_needed + 1):int">
        <exp1 etag="lval" xstr="bytes_needed">
         <lval>
          <lhost>
           <var vid="6289" vname="bytes_needed"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ikind="iint" ttag="tint"/>
       </exp1>
       <exp2 etag="lval" xstr="bufflen">
        <lval>
         <lhost>
          <var vid="92" vname="bufflen"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp1>
      <exp2 etag="lval" xstr="bytes_avail">
       <lval>
        <lhost>
         <var vid="6288" vname="bytes_avail"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="351"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="36">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid"/>
      <exp1 etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6284" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (bufflen:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="bufflen">
        <lval>
         <lhost>
          <var vid="92" vname="bufflen"/>
         </lhost>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="360"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="37">
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 binop="plusa" etag="binop" xstr="((bytes_needed + 1):int">
       <exp1 etag="lval" xstr="bytes_needed">
        <lval>
         <lhost>
          <var vid="6289" vname="bytes_needed"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp1>
      <exp2 etag="lval" xstr="bufflen">
       <lval>
        <lhost>
         <var vid="92" vname="bufflen"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="347"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="38">
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (((buff +i 1):(char*):(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="pluspi" etag="binop" xstr="((buff +i 1):(char*)">
        <exp1 etag="lval" xstr="buff">
         <lval>
          <lhost>
           <var vid="93" vname="buff"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </exp>
      </base-exp>
      <len-exp cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (((buff +i 1):(char*):(char*))]">
       <arg etag="caste" xstr="caste (((buff +i 1):(char*):(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp binop="pluspi" etag="binop" xstr="((buff +i 1):(char*)">
         <exp1 etag="lval" xstr="buff">
          <lval>
           <lhost>
            <var vid="93" vname="buff"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="ichar" ttag="tint"/>
         </typ>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </len-exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="500"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="39">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="queries_forwarded"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="113"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="40">
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (dnsmasq_daemon-&gt;addrbuff:(char*))]">
       <arg etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
         <lval>
          <lhost>
           <mem etag="lval" xstr="dnsmasq_daemon">
            <lval>
             <lhost>
              <var vid="317" vname="dnsmasq_daemon"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="6" fname="addrbuff"/>
          </offset>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%&quot;">
         <constant ctag="cstr" strValue="%"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="542"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="41">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="addrbuff"/>
        </offset>
       </lval>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (dnsmasq_daemon-&gt;addrbuff:(char*))]">
       <arg etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
         <lval>
          <lhost>
           <mem etag="lval" xstr="dnsmasq_daemon">
            <lval>
             <lhost>
              <var vid="317" vname="dnsmasq_daemon"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="6" fname="addrbuff"/>
          </offset>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="546"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="42">
     <predicate tag="initialized-range">
      <base-exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="addrbuff"/>
        </offset>
       </lval>
      </base-exp>
      <len-exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="addrbuff"/>
        </offset>
       </lval>
      </len-exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="544"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="43">
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="550"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="44">
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (dnsmasq_daemon-&gt;addrbuff:(char*))]">
       <arg etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
         <lval>
          <lhost>
           <mem etag="lval" xstr="dnsmasq_daemon">
            <lval>
             <lhost>
              <var vid="317" vname="dnsmasq_daemon"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="6" fname="addrbuff"/>
          </offset>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%&quot;">
         <constant ctag="cstr" strValue="%"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="543"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="45">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="addrbuff"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="46">
       <constant ctag="cint64" ikind="iint" intValue="46"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="547"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
   </global-assumptions>
   <global-assignments>
    <global-assignment nr="1">
     <lhs>
      <lhost>
       <var vid="93" vname="buff"/>
      </lhost>
     </lhs>
     <rhs etag="caste" xstr="caste (tmp:(char*))">
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6283" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </rhs>
     <loc byte="212407" file="src/cache.c" line="1305"/>
    </global-assignment>
    <global-assignment nr="4">
     <lhs>
      <lhost>
       <mem etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="93" vname="buff"/>
         </lhost>
        </lval>
       </mem>
      </lhost>
     </lhs>
     <rhs etag="caste" xstr="caste (len:char)">
      <typ ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="len">
       <lval>
        <lhost>
         <var vid="6279" vname="len"/>
        </lhost>
       </lval>
      </exp>
     </rhs>
     <loc byte="214524" file="src/cache.c" line="1389"/>
    </global-assignment>
    <global-assignment nr="3">
     <lhs>
      <lhost>
       <var vid="92" vname="bufflen"/>
      </lhost>
     </lhs>
     <rhs etag="lval" xstr="newlen">
      <lval>
       <lhost>
        <var vid="6287" vname="newlen"/>
       </lhost>
      </lval>
     </rhs>
     <loc byte="214121" file="src/cache.c" line="1374"/>
    </global-assignment>
    <global-assignment nr="2">
     <lhs>
      <lhost>
       <var vid="93" vname="buff"/>
      </lhost>
     </lhs>
     <rhs etag="lval" xstr="new">
      <lval>
       <lhost>
        <var vid="6284" vname="new"/>
       </lhost>
      </lval>
     </rhs>
     <loc byte="214107" file="src/cache.c" line="1373"/>
    </global-assignment>
   </global-assignments>
   <field-assignments>
    <field-assignment ckey="36" field="flags" nr="1">
     <rhs binop="band" etag="binop" xstr="((serv-&gt;flags &amp; -513):int">
      <exp1 etag="lval" xstr="serv-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv">
          <lval>
           <lhost>
            <var vid="6280" vname="serv"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="flags"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="-513">
       <constant ctag="cint64" ikind="iint" intValue="-513"/>
      </exp2>
      <typ ikind="iint" ttag="tint"/>
     </rhs>
     <loc byte="213070" file="src/cache.c" line="1341"/>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="674"/>
       <node name="loop"/>
       <node name="stmt" num="671"/>
       <node name="stmt" num="657"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="48" field="len" nr="4">
     <rhs etag="caste" xstr="caste (((p -p buff):long:unsigned short)">
      <typ ikind="iushort" ttag="tint"/>
      <exp binop="minuspp" etag="binop" xstr="((p -p buff):long">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="6282" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="buff">
        <lval>
         <lhost>
          <var vid="6277" vname="buff"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="ilong" ttag="tint"/>
      </exp>
     </rhs>
     <loc byte="214402" file="src/cache.c" line="1382"/>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="697"/>
       <node name="stmt" num="657"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="48" field="txt" nr="5">
     <rhs etag="caste" xstr="caste (buff:(unsigned char*))">
      <typ ttag="tptr">
       <typ ikind="iuchar" ttag="tint"/>
      </typ>
      <exp etag="lval" xstr="buff">
       <lval>
        <lhost>
         <var vid="6277" vname="buff"/>
        </lhost>
       </lval>
      </exp>
     </rhs>
     <loc byte="214470" file="src/cache.c" line="1387"/>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="699"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="48" field="txt" nr="3">
     <rhs etag="caste" xstr="caste (buff:(unsigned char*))">
      <typ ttag="tptr">
       <typ ikind="iuchar" ttag="tint"/>
      </typ>
      <exp etag="lval" xstr="buff">
       <lval>
        <lhost>
         <var vid="6277" vname="buff"/>
        </lhost>
       </lval>
      </exp>
     </rhs>
     <loc byte="214364" file="src/cache.c" line="1381"/>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="697"/>
       <node name="stmt" num="657"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="36" field="flags" nr="2">
     <rhs binop="bor" etag="binop" xstr="((serv1-&gt;flags | 512):int">
      <exp1 etag="lval" xstr="serv1-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="serv1">
          <lval>
           <lhost>
            <var vid="6281" vname="serv1"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="206" fname="flags"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="512">
       <constant ctag="cint64" ikind="iint" intValue="512"/>
      </exp2>
      <typ ikind="iint" ttag="tint"/>
     </rhs>
     <loc byte="213522" file="src/cache.c" line="1355"/>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="687"/>
       <node name="if-then"/>
       <node name="stmt" num="686"/>
       <node name="if-then"/>
       <node name="stmt" num="684"/>
       <node name="loop"/>
       <node name="stmt" num="681"/>
       <node name="if-then"/>
       <node name="stmt" num="679"/>
       <node name="loop"/>
       <node name="stmt" num="676"/>
       <node name="stmt" num="657"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="48" field="len" nr="6">
     <rhs etag="caste" xstr="caste (((len + 1):int:unsigned short)">
      <typ ikind="iushort" ttag="tint"/>
      <exp binop="plusa" etag="binop" xstr="((len + 1):int">
       <exp1 etag="lval" xstr="len">
        <lval>
         <lhost>
          <var vid="6279" vname="len"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp>
     </rhs>
     <loc byte="214504" file="src/cache.c" line="1388"/>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="699"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
   </field-assignments>
  </function>
  <header time="01/10/2017 06:52:35">
   <application file="src/cache.c" name="application"/>
  </header>
 </c-analysis>
