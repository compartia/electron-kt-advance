<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function cfilename="src/cache.c" gvid="52" name="read_hostsfile" num-ppo="0">
   <statistics api-assumptions="6" callers="3" ds-assumptions="0" field-assignments="4" global-assignments="0" global-assumptions="6" rv-assumptions="37"/>
   <parameters>
    <param formal-vid="6164" index="1" vname="filename"/>
    <param formal-vid="6166" index="2" vname="index___0"/>
    <param formal-vid="6167" index="3" vname="cache_size"/>
    <param formal-vid="6168" index="4" vname="rhash"/>
    <param formal-vid="6169" index="5" vname="hashsz"/>
   </parameters>
   <callers>
    <caller cfilename="src/cache.c" fname="cache_reload" gvid="51" updated="01/09/2017 21:38:34" updated-f="1483997914.75">
     <call-site byte="208134" file="src/cache.c" line="1129"/>
     <args>
      <arg etag="caste" xstr="caste (&quot;/etc/hosts&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;/etc/hosts&quot;">
        <constant ctag="cstr" strValue="/etc/hosts"/>
       </exp>
      </arg>
      <arg etag="const" xstr="2">
       <constant ctag="cint64" ikind="iuint" intValue="2"/>
      </arg>
      <arg/>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="561"/>
      <node name="if-then"/>
      <node name="stmt" num="560"/>
      <node name="if-else"/>
      <node name="stmt" num="555"/>
     </calling-context>
    </caller>
    <caller cfilename="src/inotify.c" fname="inotify_check" gvid="227" updated="01/09/2017 21:38:37" updated-f="1483997917.99">
     <call-site byte="192598" file="src/inotify.c" line="259"/>
     <args>
      <arg/>
      <arg/>
      <arg etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </arg>
      <arg/>
      <arg etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </arg>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="146"/>
      <node name="if-then"/>
      <node name="stmt" num="145"/>
      <node name="if-then"/>
      <node name="stmt" num="143"/>
      <node name="if-then"/>
      <node name="stmt" num="141"/>
      <node name="loop"/>
      <node name="stmt" num="138"/>
      <node name="loop"/>
      <node name="stmt" num="114"/>
      <node name="loop"/>
      <node name="stmt" num="103"/>
     </calling-context>
    </caller>
    <caller cfilename="src/inotify.c" fname="set_dynamic_inotify" gvid="72" updated="01/09/2017 21:38:38" updated-f="1483997918.03">
     <call-site byte="191098" file="src/inotify.c" line="196"/>
     <args>
      <arg/>
      <arg/>
      <arg/>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="95"/>
      <node name="if-then"/>
      <node name="stmt" num="94"/>
      <node name="if-then"/>
      <node name="stmt" num="93"/>
      <node name="if-then"/>
      <node name="stmt" num="92"/>
      <node name="if-then"/>
      <node name="stmt" num="90"/>
      <node name="loop"/>
      <node name="stmt" num="74"/>
      <node name="loop"/>
      <node name="stmt" num="52"/>
     </calling-context>
    </caller>
   </callers>
   <api-assumptions>
    <api-assumption nr="1">
     <predicate tag="initialized-range">
      <base-exp etag="lval" xstr="filename">
       <lval>
        <lhost>
         <var vid="6164" vname="filename"/>
        </lhost>
       </lval>
      </base-exp>
      <len-exp etag="lval" xstr="filename">
       <lval>
        <lhost>
         <var vid="6164" vname="filename"/>
        </lhost>
       </lval>
      </len-exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="10"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="2">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid"/>
      <exp1 etag="addrof" xstr="addrof (addr)">
       <lval>
        <lhost>
         <var vid="6178" vname="addr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="16">
       <constant ctag="cint64" ikind="iint" intValue="16"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="73"/>
      <po id="101"/>
      <po id="451"/>
      <po id="460"/>
      <po id="487"/>
      <po id="495"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="3">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="filename">
       <lval>
        <lhost>
         <var vid="6164" vname="filename"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (filename:(char*))]">
       <arg etag="caste" xstr="caste (filename:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="filename">
         <lval>
          <lhost>
           <var vid="6164" vname="filename"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="9"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="4">
     <predicate tag="not-null">
      <exp etag="lval" xstr="filename">
       <lval>
        <lhost>
         <var vid="6164" vname="filename"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="6"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="5">
     <predicate tag="not-zero">
      <exp etag="lval" xstr="hashsz">
       <lval>
        <lhost>
         <var vid="6169" vname="hashsz"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="454"/>
      <po id="463"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="6">
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp etag="lval" xstr="hashsz">
       <lval>
        <lhost>
         <var vid="6169" vname="hashsz"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="453"/>
      <po id="462"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
   </api-assumptions>
   <rv-assumptions>
    <rv-assumption communicated="yes" nr="1">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 byte="204137" etag="fnapp" file="src/cache.c" line="975" xstr="fn(canonicalise)@ 975[_, _]">
       <arg/>
       <arg/>
       <fn etag="lval" xstr="canonicalise">
        <lval>
         <lhost>
          <var vid="76" vname="canonicalise"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (fn(canonicalise)@ 975[_, _]:(char*))]">
       <arg etag="caste" xstr="caste (fn(canonicalise)@ 975[_, _]:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp byte="204137" etag="fnapp" file="src/cache.c" line="975" xstr="fn(canonicalise)@ 975[_, _]">
         <arg/>
         <arg/>
         <fn etag="lval" xstr="canonicalise">
          <lval>
           <lhost>
            <var vid="76" vname="canonicalise"/>
           </lhost>
          </lval>
         </fn>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="194"/>
      <po id="227"/>
      <po id="334"/>
      <po id="354"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="2">
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="66" ttag="tcomp"/>
      <exp byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="221"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption communicated="yes" nr="3">
     <predicate tag="initialized-range">
      <base-exp byte="204137" etag="fnapp" file="src/cache.c" line="975" xstr="fn(canonicalise)@ 975[_, _]">
       <arg/>
       <arg/>
       <fn etag="lval" xstr="canonicalise">
        <lval>
         <lhost>
          <var vid="76" vname="canonicalise"/>
         </lhost>
        </lval>
       </fn>
      </base-exp>
      <len-exp byte="204137" etag="fnapp" file="src/cache.c" line="975" xstr="fn(canonicalise)@ 975[_, _]">
       <arg/>
       <arg/>
       <fn etag="lval" xstr="canonicalise">
        <lval>
         <lhost>
          <var vid="76" vname="canonicalise"/>
         </lhost>
        </lval>
       </fn>
      </len-exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="195"/>
      <po id="228"/>
      <po id="335"/>
      <po id="355"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption communicated="yes" nr="4">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (fn(canonicalise)@ 975[_, _]:(char*))]">
       <arg etag="caste" xstr="caste (fn(canonicalise)@ 975[_, _]:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp byte="204137" etag="fnapp" file="src/cache.c" line="975" xstr="fn(canonicalise)@ 975[_, _]">
         <arg/>
         <arg/>
         <fn etag="lval" xstr="canonicalise">
          <lval>
           <lhost>
            <var vid="76" vname="canonicalise"/>
           </lhost>
          </lval>
         </fn>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="359"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption communicated="yes" nr="5">
     <predicate tag="allocation-base">
      <exp byte="204137" etag="fnapp" file="src/cache.c" line="975" xstr="fn(canonicalise)@ 975[_, _]">
       <arg/>
       <arg/>
       <fn etag="lval" xstr="canonicalise">
        <lval>
         <lhost>
          <var vid="76" vname="canonicalise"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="409"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="6">
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="66" ttag="tcomp"/>
      <exp byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="348"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption communicated="yes" nr="7">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (fn(canonicalise)@ 975[_, _]:(char*))]">
       <arg etag="caste" xstr="caste (fn(canonicalise)@ 975[_, _]:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp byte="204137" etag="fnapp" file="src/cache.c" line="975" xstr="fn(canonicalise)@ 975[_, _]">
         <arg/>
         <arg/>
         <fn etag="lval" xstr="canonicalise">
          <lval>
           <lhost>
            <var vid="76" vname="canonicalise"/>
           </lhost>
          </lval>
         </fn>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="232"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="8">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid"/>
      <exp1 byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 etag="const" xstr="16">
       <constant ctag="cint64" ikind="iint" intValue="16"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="464"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="9">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid"/>
      <exp1 byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 etag="const" xstr="16">
       <constant ctag="cint64" ikind="iint" intValue="16"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="455"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="10">
     <predicate tag="allocation-base">
      <exp byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="465"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="11">
     <predicate tag="allocation-base">
      <exp byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="456"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="12">
     <predicate tag="global-mem">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 978[_]).name.bname">
       <lval>
        <lhost>
         <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="492"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="13">
     <predicate tag="global-mem">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 990[_]).name.namep">
       <lval>
        <lhost>
         <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="namep"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="497"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="14">
     <predicate tag="not-null">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 990[_]).name.bname">
       <lval>
        <lhost>
         <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="496"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="15">
     <predicate tag="not-null">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 978[_]).name.bname">
       <lval>
        <lhost>
         <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="488"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="16">
     <predicate tag="global-mem">
      <exp byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="486"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="17">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
         <arg/>
         <fn etag="lval" xstr="whine_malloc">
          <lval>
           <lhost>
            <var vid="5" vname="whine_malloc"/>
           </lhost>
          </lval>
         </fn>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="67" fname="bname"/>
        </offset>
        <field ckey="66" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="493"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="18">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
         <arg/>
         <fn etag="lval" xstr="whine_malloc">
          <lval>
           <lhost>
            <var vid="5" vname="whine_malloc"/>
           </lhost>
          </lval>
         </fn>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="67" fname="namep"/>
        </offset>
        <field ckey="66" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="490"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="19">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
         <arg/>
         <fn etag="lval" xstr="whine_malloc">
          <lval>
           <lhost>
            <var vid="5" vname="whine_malloc"/>
           </lhost>
          </lval>
         </fn>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="67" fname="bname"/>
        </offset>
        <field ckey="66" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="501"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="20">
     <predicate tag="global-mem">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 978[_]).name.namep">
       <lval>
        <lhost>
         <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="namep"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="489"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="21">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
         <arg/>
         <fn etag="lval" xstr="whine_malloc">
          <lval>
           <lhost>
            <var vid="5" vname="whine_malloc"/>
           </lhost>
          </lval>
         </fn>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="67" fname="namep"/>
        </offset>
        <field ckey="66" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="498"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="22">
     <predicate tag="global-mem">
      <exp byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="494"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="23">
     <predicate tag="global-mem">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 990[_]).name.bname">
       <lval>
        <lhost>
         <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="500"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="24">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 990[_]).name.namep">
       <lval>
        <lhost>
         <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="namep"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="503"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="25">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 978[_]).name.namep">
       <lval>
        <lhost>
         <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="namep"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="508"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="26">
     <predicate tag="not-null">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 978[_]).name.namep">
       <lval>
        <lhost>
         <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="namep"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="511"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="27">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="505"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="28">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 990[_]).name.bname">
       <lval>
        <lhost>
         <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="504"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="29">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="510"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="30">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 978[_]).name.bname">
       <lval>
        <lhost>
         <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="509"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="31">
     <predicate tag="not-null">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 990[_]).name.namep">
       <lval>
        <lhost>
         <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="namep"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="506"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="32">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 990[_]).name.bname">
       <lval>
        <lhost>
         <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="512"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="33">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 990[_]).name.namep">
       <lval>
        <lhost>
         <mem byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="namep"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="514"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="34">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="516"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="35">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 byte="204715" etag="fnapp" file="src/cache.c" line="990" xstr="fn(whine_malloc)@ 990[_]">
       <arg/>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="513"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="36">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 978[_]).name.namep">
       <lval>
        <lhost>
         <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="namep"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="517"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="37">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 978[_]).name.bname">
       <lval>
        <lhost>
         <mem byte="204195" etag="fnapp" file="src/cache.c" line="978" xstr="fn(whine_malloc)@ 978[_]">
          <arg/>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="515"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
   </rv-assumptions>
   <ds-assumptions/>
   <global-assumptions>
    <global-assumption nr="1">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="local_ttl"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="308"/>
      <po id="386"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="2">
     <predicate from="iulong" tag="unsigned-to-signed-cast" to="ilong">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;local_ttl">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="local_ttl"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="307"/>
      <po id="385"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="3">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="options"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="181"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="4">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="317" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="25"/>
      <po id="184"/>
      <po id="311"/>
      <po id="389"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="5">
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="317" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="24"/>
      <po id="183"/>
      <po id="310"/>
      <po id="388"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="6">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="namebuff"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="22"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
   </global-assumptions>
   <global-assignments/>
   <field-assignments>
    <field-assignment ckey="66" field="flags" nr="1">
     <rhs etag="lval" xstr="flags">
      <lval>
       <lhost>
        <var vid="6177" vname="flags"/>
       </lhost>
      </lval>
     </rhs>
     <loc byte="204554" file="src/cache.c" line="985"/>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="484"/>
       <node name="if-then"/>
       <node name="stmt" num="483"/>
       <node name="if-then"/>
       <node name="stmt" num="481"/>
       <node name="if-then"/>
       <node name="stmt" num="480"/>
       <node name="if-then"/>
       <node name="stmt" num="479"/>
       <node name="if-then"/>
       <node name="stmt" num="478"/>
       <node name="loop"/>
       <node name="stmt" num="467"/>
       <node name="loop"/>
       <node name="stmt" num="447"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="66" field="ttd" nr="4">
     <rhs etag="caste" xstr="caste (dnsmasq_daemon-&gt;local_ttl:time_t)">
      <typ tname="time_t" ttag="tnamed"/>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;local_ttl">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="local_ttl"/>
        </offset>
       </lval>
      </exp>
     </rhs>
     <loc byte="204857" file="src/cache.c" line="994"/>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="487"/>
       <node name="if-then"/>
       <node name="stmt" num="486"/>
       <node name="if-then"/>
       <node name="stmt" num="478"/>
       <node name="loop"/>
       <node name="stmt" num="467"/>
       <node name="loop"/>
       <node name="stmt" num="447"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="66" field="flags" nr="3">
     <rhs etag="lval" xstr="flags">
      <lval>
       <lhost>
        <var vid="6177" vname="flags"/>
       </lhost>
      </lval>
     </rhs>
     <loc byte="204831" file="src/cache.c" line="993"/>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="487"/>
       <node name="if-then"/>
       <node name="stmt" num="486"/>
       <node name="if-then"/>
       <node name="stmt" num="478"/>
       <node name="loop"/>
       <node name="stmt" num="467"/>
       <node name="loop"/>
       <node name="stmt" num="447"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="66" field="ttd" nr="2">
     <rhs etag="caste" xstr="caste (dnsmasq_daemon-&gt;local_ttl:time_t)">
      <typ tname="time_t" ttag="tnamed"/>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;local_ttl">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="local_ttl"/>
        </offset>
       </lval>
      </exp>
     </rhs>
     <loc byte="204580" file="src/cache.c" line="986"/>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="484"/>
       <node name="if-then"/>
       <node name="stmt" num="483"/>
       <node name="if-then"/>
       <node name="stmt" num="481"/>
       <node name="if-then"/>
       <node name="stmt" num="480"/>
       <node name="if-then"/>
       <node name="stmt" num="479"/>
       <node name="if-then"/>
       <node name="stmt" num="478"/>
       <node name="loop"/>
       <node name="stmt" num="467"/>
       <node name="loop"/>
       <node name="stmt" num="447"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
   </field-assignments>
  </function>
  <header time="01/10/2017 06:52:36">
   <application file="src/cache.c" name="application"/>
  </header>
 </c-analysis>
