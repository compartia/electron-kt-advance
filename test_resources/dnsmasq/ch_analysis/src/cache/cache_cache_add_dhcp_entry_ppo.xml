<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="cache_add_dhcp_entry">
   <statistics avg-context-complexity="2.70" avg-predicate-complexity="1.22" context-complexity="917" predicate-complexity="416" size="340"/>
   <unconstrained-external-functions>
    <efn name="dnsmasq/my_syslog" num="2"/>
    <efn name="dnsmasq/whine_malloc" num="1"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="210218" file="src/cache.c" line="1210"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="613"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="210218" file="src/cache.c" line="1210"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="613"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-exp" p-complexity="0">
     <location byte="210218" file="src/cache.c" line="1210"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="613"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-exp" p-complexity="0">
     <location byte="210218" file="src/cache.c" line="1210"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="613"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-exp" p-complexity="1">
     <location byte="210279" file="src/cache.c" line="1211"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 7):unsigned int">
       <exp1 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iuint" intValue="1"/>
       </exp1>
       <exp2 etag="const" xstr="7">
        <constant ctag="cint64" ikind="iint" intValue="7"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="613"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-op" p-complexity="0">
     <location byte="210279" file="src/cache.c" line="1211"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="613"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-op" p-complexity="1">
     <location byte="210279" file="src/cache.c" line="1211"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="613"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="0">
     <location byte="210378" file="src/cache.c" line="1216"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6261" vname="prot"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="614"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="9" origin="prim-exp" p-complexity="1">
     <location byte="210406" file="src/cache.c" line="1218"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 8):unsigned int">
       <exp1 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iuint" intValue="1"/>
       </exp1>
       <exp2 etag="const" xstr="8">
        <constant ctag="cint64" ikind="iint" intValue="8"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="615"/>
       <node name="if-then"/>
       <node name="stmt" num="614"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="10" origin="prim-op" p-complexity="0">
     <location byte="210406" file="src/cache.c" line="1218"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="615"/>
       <node name="if-then"/>
       <node name="stmt" num="614"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="11" origin="prim-op" p-complexity="1">
     <location byte="210406" file="src/cache.c" line="1218"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="615"/>
       <node name="if-then"/>
       <node name="stmt" num="614"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="inet_ntop" id="12" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="inet_ntop" id="13" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="inet_ntop" id="14" name="deref-read" origin="f-pre" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="inet_ntop" id="15" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="caste" xstr="caste (host_address:(void*))">
         <typ ttag="tptr">
          <attributes>
           <attr attrname="restrict"/>
          </attributes>
          <typ ttag="tvoid">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
         <exp etag="lval" xstr="host_address">
          <lval>
           <lhost>
            <var vid="6262" vname="host_address"/>
           </lhost>
          </lval>
         </exp>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="inet_ntop" id="16" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="inet_ntop" id="17" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="inet_ntop" id="18" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (46:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="inet_ntop" id="19" name="no-overlap" origin="f-pre" p-complexity="2">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="src" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="no-overlap">
      <math>
       <apply>
        <no-overlap/>
        <ci>src</ci>
        <ci>dst</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="20" origin="prim-exp" p-complexity="0">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6261" vname="prot"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="21" origin="prim-exp" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="22" origin="prim-exp" p-complexity="0">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6262" vname="host_address"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="23" origin="prim-exp" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="24" origin="prim-exp" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="25" origin="prim-exp" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="26" origin="prim-exp" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="27" origin="prim-exp" p-complexity="6">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="28" origin="prim-exp" p-complexity="0">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="29" origin="prim-lval" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="30" origin="prim-lval" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="31" origin="prim-lval" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="32" origin="prim-lval" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="33" origin="prim-exp" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="34" origin="prim-exp" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="35" origin="prim-exp" p-complexity="1">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="36" origin="prim-exp" p-complexity="0">
     <location byte="210474" file="src/cache.c" line="1223"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp etag="const" xstr="46">
       <constant ctag="cint64" ikind="iint" intValue="46"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="616"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="37" origin="prim-exp" p-complexity="0">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="38" origin="prim-exp" p-complexity="1">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="39" origin="prim-exp" p-complexity="1">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="40" origin="prim-exp" p-complexity="1">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="41" origin="prim-exp" p-complexity="0">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6260" vname="host_name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="42" origin="prim-exp" p-complexity="1">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="43" origin="prim-exp" p-complexity="1">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="44" origin="prim-exp" p-complexity="1">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="45" origin="prim-exp" p-complexity="0">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="46" origin="prim-exp" p-complexity="1">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6266" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="47" origin="prim-exp" p-complexity="0">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6266" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="48" origin="prim-op" p-complexity="0">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="49" origin="prim-op" p-complexity="1">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="618"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="50" origin="prim-exp" p-complexity="0">
     <location byte="210538" file="src/cache.c" line="1225"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="619"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="51" origin="prim-exp" p-complexity="1">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crec-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crec">
          <lval>
           <lhost>
            <var vid="6264" vname="crec"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="52" origin="prim-exp" p-complexity="6">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crec">
         <lval>
          <lhost>
           <var vid="6264" vname="crec"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="53" origin="prim-exp" p-complexity="0">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="54" origin="prim-lval" p-complexity="1">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="55" origin="prim-lval" p-complexity="1">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="56" origin="prim-lval" p-complexity="1">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="57" origin="prim-lval" p-complexity="1">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="58" origin="prim-op" p-complexity="0">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="59" origin="prim-op" p-complexity="1">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="60" origin="prim-op" p-complexity="0">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="61" origin="prim-op" p-complexity="1">
     <location byte="210625" file="src/cache.c" line="1228"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="62" origin="prim-exp" p-complexity="1">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crec-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crec">
          <lval>
           <lhost>
            <var vid="6264" vname="crec"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="63" origin="prim-exp" p-complexity="6">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crec">
         <lval>
          <lhost>
           <var vid="6264" vname="crec"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="64" origin="prim-exp" p-complexity="0">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="65" origin="prim-lval" p-complexity="1">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="66" origin="prim-lval" p-complexity="1">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="67" origin="prim-lval" p-complexity="1">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="68" origin="prim-lval" p-complexity="1">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="69" origin="prim-op" p-complexity="0">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="70" origin="prim-op" p-complexity="1">
     <location byte="210671" file="src/cache.c" line="1230"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="71" origin="prim-op" p-complexity="0">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="72" origin="prim-op" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate size="iint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="73" origin="prim-exp" p-complexity="0">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;%s is a CNAME, not giving it to the DHCP lease of %s&quot;">
       <constant ctag="cstr" strValue="%s is a CNAME, not giving it to the DHCP lease of %s"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="74" origin="prim-exp" p-complexity="0">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;%s is a CNAME, not giving it to the DHCP lease of %s&quot;">
       <constant ctag="cstr" strValue="%s is a CNAME, not giving it to the DHCP lease of %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="75" origin="prim-exp" p-complexity="0">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;%s is a CNAME, not giving it to the DHCP lease of %s&quot;">
       <constant ctag="cstr" strValue="%s is a CNAME, not giving it to the DHCP lease of %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="76" origin="prim-exp" p-complexity="0">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6260" vname="host_name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="77" origin="prim-exp" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="78" origin="prim-exp" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="79" origin="prim-exp" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="80" origin="prim-exp" p-complexity="6">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="81" origin="prim-exp" p-complexity="0">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="82" origin="prim-lval" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="83" origin="prim-lval" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="84" origin="prim-lval" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="85" origin="prim-lval" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="86" origin="prim-exp" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="87" origin="prim-exp" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="88" origin="prim-exp" p-complexity="1">
     <location byte="210704" file="src/cache.c" line="1231"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="623"/>
       <node name="if-then"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="memcmp" id="89" name="buffersize" origin="f-pre" p-complexity="6">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="memcmp" id="90" name="buffersize" origin="f-pre" p-complexity="6">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="memcmp" id="91" name="buffersize" origin="f-pre" p-complexity="8">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="lval" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="memcmp" id="92" name="buffersize" origin="f-pre" p-complexity="7">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </base-exp>
      <len-exp etag="lval" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="memcmp" id="93" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="memcmp" id="94" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="memcmp" id="95" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="lval" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="memcmp" id="96" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </base-exp>
      <len-exp etag="lval" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6268" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="97" origin="prim-exp" p-complexity="6">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crec">
          <lval>
           <lhost>
            <var vid="6264" vname="crec"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="197" fname="addr"/>
         </offset>
         <field ckey="196" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="98" origin="prim-exp" p-complexity="0">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="99" origin="prim-lval" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="100" origin="prim-lval" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="101" origin="prim-lval" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="102" origin="prim-lval" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="103" origin="prim-exp" p-complexity="6">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="104" origin="prim-exp" p-complexity="6">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="105" origin="prim-exp" p-complexity="6">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crec">
           <lval>
            <lhost>
             <var vid="6264" vname="crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="106" origin="prim-exp" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="107" origin="prim-exp" p-complexity="0">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6262" vname="host_address"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="108" origin="prim-exp" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="109" origin="prim-exp" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="110" origin="prim-exp" p-complexity="1">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="111" origin="prim-exp" p-complexity="0">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6268" vname="addrlen"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="624"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="112" origin="prim-exp" p-complexity="0">
     <location byte="210846" file="src/cache.c" line="1234"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6269" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="625"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="113" origin="prim-exp" p-complexity="0">
     <location byte="210936" file="src/cache.c" line="1237"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="627"/>
       <node name="if-else"/>
       <node name="stmt" num="625"/>
       <node name="if-else"/>
       <node name="stmt" num="622"/>
       <node name="if-then"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="114" origin="prim-exp" p-complexity="1">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crec-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crec">
          <lval>
           <lhost>
            <var vid="6264" vname="crec"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="115" origin="prim-exp" p-complexity="6">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crec">
         <lval>
          <lhost>
           <var vid="6264" vname="crec"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="116" origin="prim-exp" p-complexity="0">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="117" origin="prim-lval" p-complexity="1">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="118" origin="prim-lval" p-complexity="1">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="119" origin="prim-lval" p-complexity="1">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="120" origin="prim-lval" p-complexity="1">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="121" origin="prim-op" p-complexity="0">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="122" origin="prim-op" p-complexity="1">
     <location byte="210968" file="src/cache.c" line="1239"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="123" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6260" vname="host_name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="124" origin="prim-exp" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="125" origin="prim-exp" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="126" origin="prim-exp" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="127" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="176" ttag="tcomp"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="128" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="129" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="130" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="131" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="132" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="133" origin="prim-exp" p-complexity="4">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="band" etag="binop" xstr="((caste (crec-&gt;flags:unsigned int) &amp; ((((caste (flags:unsigned int) | ((1 &lt;&lt; 11):unsigned int):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int):unsigned int">
       <exp1 etag="caste" xstr="caste (crec-&gt;flags:unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp etag="lval" xstr="crec-&gt;flags">
         <lval>
          <lhost>
           <mem etag="lval" xstr="crec">
            <lval>
             <lhost>
              <var vid="6264" vname="crec"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="196" fname="flags"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 binop="bor" etag="binop" xstr="((((caste (flags:unsigned int) | ((1 &lt;&lt; 11):unsigned int):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int">
        <exp1 binop="bor" etag="binop" xstr="((caste (flags:unsigned int) | ((1 &lt;&lt; 11):unsigned int):unsigned int">
         <exp1 etag="caste" xstr="caste (flags:unsigned int)">
          <typ ikind="iuint" ttag="tint"/>
          <exp etag="lval" xstr="flags">
           <lval>
            <lhost>
             <var vid="6266" vname="flags"/>
            </lhost>
           </lval>
          </exp>
         </exp1>
         <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 11):unsigned int">
          <exp1 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iuint" intValue="1"/>
          </exp1>
          <exp2 etag="const" xstr="11">
           <constant ctag="cint64" ikind="iint" intValue="11"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 3):unsigned int">
         <exp1 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iuint" intValue="1"/>
         </exp1>
         <exp2 etag="const" xstr="3">
          <constant ctag="cint64" ikind="iint" intValue="3"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="134" origin="prim-exp" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crec-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crec">
          <lval>
           <lhost>
            <var vid="6264" vname="crec"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="135" origin="prim-exp" p-complexity="6">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crec">
         <lval>
          <lhost>
           <var vid="6264" vname="crec"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="136" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="137" origin="prim-lval" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="138" origin="prim-lval" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="139" origin="prim-lval" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="140" origin="prim-lval" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="141" origin="prim-exp" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6266" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="142" origin="prim-exp" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6266" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="143" origin="prim-op" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="144" origin="prim-op" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="145" origin="prim-op" p-complexity="0">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="146" origin="prim-op" p-complexity="1">
     <location byte="211004" file="src/cache.c" line="1241"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="629"/>
       <node name="if-then"/>
       <node name="stmt" num="628"/>
       <node name="if-else"/>
       <node name="stmt" num="621"/>
       <node name="loop"/>
       <node name="stmt" num="617"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="147" origin="prim-exp" p-complexity="0">
     <location byte="211116" file="src/cache.c" line="1248"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6267" vname="in_hosts"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="631"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="148" origin="prim-exp" p-complexity="0">
     <location byte="211146" file="src/cache.c" line="1252"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6265" vname="fail_crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="inet_ntop" id="149" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="inet_ntop" id="150" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="inet_ntop" id="151" name="deref-read" origin="f-pre" p-complexity="6">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="inet_ntop" id="152" name="deref-read" origin="f-pre" p-complexity="11">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
         <typ ttag="tptr">
          <attributes>
           <attr attrname="restrict"/>
          </attributes>
          <typ ttag="tvoid">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
         <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
          <lval>
           <lhost>
            <mem etag="lval" xstr="fail_crec">
             <lval>
              <lhost>
               <var vid="6265" vname="fail_crec"/>
              </lhost>
             </lval>
            </mem>
           </lhost>
           <offset>
            <offset>
             <field ckey="197" fname="addr"/>
            </offset>
            <field ckey="196" fname="addr"/>
           </offset>
          </lval>
         </exp>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="inet_ntop" id="153" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (1025:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="1025">
        <constant ctag="cint64" ikind="iint" intValue="1025"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="inet_ntop" id="154" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (1025:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="1025">
        <constant ctag="cint64" ikind="iint" intValue="1025"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="inet_ntop" id="155" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (1025:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="1025">
        <constant ctag="cint64" ikind="iint" intValue="1025"/>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="size" nr="4" xstr="caste (1025:socklen_t)">
       <typ tname="socklen_t" ttag="tnamed"/>
       <exp etag="const" xstr="1025">
        <constant ctag="cint64" ikind="iint" intValue="1025"/>
       </exp>
      </exp>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dst</ci>
        <apply>
         <index-size/>
         <ci>size</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="inet_ntop" id="156" name="no-overlap" origin="f-pre" p-complexity="7">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="dst" nr="3" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="src" nr="2" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="no-overlap">
      <math>
       <apply>
        <no-overlap/>
        <ci>src</ci>
        <ci>dst</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="157" origin="prim-exp" p-complexity="0">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6261" vname="prot"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="158" origin="prim-exp" p-complexity="6">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="fail_crec">
          <lval>
           <lhost>
            <var vid="6265" vname="fail_crec"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="197" fname="addr"/>
         </offset>
         <field ckey="196" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="159" origin="prim-exp" p-complexity="0">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6265" vname="fail_crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="160" origin="prim-lval" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="fail_crec">
       <lval>
        <lhost>
         <var vid="6265" vname="fail_crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="161" origin="prim-lval" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="fail_crec">
       <lval>
        <lhost>
         <var vid="6265" vname="fail_crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="162" origin="prim-lval" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="fail_crec">
       <lval>
        <lhost>
         <var vid="6265" vname="fail_crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="163" origin="prim-lval" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="fail_crec">
       <lval>
        <lhost>
         <var vid="6265" vname="fail_crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="164" origin="prim-exp" p-complexity="6">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="165" origin="prim-exp" p-complexity="6">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="166" origin="prim-exp" p-complexity="6">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="167" origin="prim-exp" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="namebuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="168" origin="prim-exp" p-complexity="6">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="namebuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="169" origin="prim-exp" p-complexity="0">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="170" origin="prim-lval" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="171" origin="prim-lval" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="172" origin="prim-lval" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="173" origin="prim-lval" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="174" origin="prim-exp" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="175" origin="prim-exp" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="176" origin="prim-exp" p-complexity="1">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="177" origin="prim-exp" p-complexity="0">
     <location byte="211173" file="src/cache.c" line="1254"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp etag="const" xstr="1025">
       <constant ctag="cint64" ikind="iint" intValue="1025"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="178" origin="prim-exp" p-complexity="6">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="fail_crec">
         <lval>
          <lhost>
           <var vid="6265" vname="fail_crec"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="uid"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="179" origin="prim-exp" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6265" vname="fail_crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="180" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="fail_crec">
       <lval>
        <lhost>
         <var vid="6265" vname="fail_crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="181" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="fail_crec">
       <lval>
        <lhost>
         <var vid="6265" vname="fail_crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="182" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="fail_crec">
       <lval>
        <lhost>
         <var vid="6265" vname="fail_crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="183" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="fail_crec">
       <lval>
        <lhost>
         <var vid="6265" vname="fail_crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="184" origin="prim-op" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="185" origin="prim-op" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate size="iint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="186" origin="prim-exp" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;not giving name %s to the DHCP lease of %s because the name exists in %s with address %s&quot;">
       <constant ctag="cstr" strValue="not giving name %s to the DHCP lease of %s because the name exists in %s with address %s"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="187" origin="prim-exp" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;not giving name %s to the DHCP lease of %s because the name exists in %s with address %s&quot;">
       <constant ctag="cstr" strValue="not giving name %s to the DHCP lease of %s because the name exists in %s with address %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="188" origin="prim-exp" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;not giving name %s to the DHCP lease of %s because the name exists in %s with address %s&quot;">
       <constant ctag="cstr" strValue="not giving name %s to the DHCP lease of %s because the name exists in %s with address %s"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="189" origin="prim-exp" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6260" vname="host_name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="190" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="191" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="192" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="193" origin="prim-exp" p-complexity="6">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="194" origin="prim-exp" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="195" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="196" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="197" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="198" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="199" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="200" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="201" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="202" origin="prim-exp" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6271" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="203" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="6271" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="204" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="6271" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="205" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="6271" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="206" origin="prim-exp" p-complexity="6">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="namebuff"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="207" origin="prim-exp" p-complexity="0">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="208" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="209" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="210" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="211" origin="prim-lval" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="212" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="namebuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="213" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="namebuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="214" origin="prim-exp" p-complexity="1">
     <location byte="211251" file="src/cache.c" line="1255"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="namebuff"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="634"/>
       <node name="if-then"/>
       <node name="stmt" num="633"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="215" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="216" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="217" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="218" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="219" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="220" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6262" vname="host_address"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="221" origin="prim-exp" p-complexity="1">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="222" origin="prim-exp" p-complexity="1">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="223" origin="prim-exp" p-complexity="1">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="224" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="225" origin="prim-exp" p-complexity="1">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6266" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="226" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6266" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="636"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="227" origin="prim-exp" p-complexity="0">
     <location byte="211539" file="src/cache.c" line="1263"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="228" origin="prim-exp" p-complexity="1">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crec-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crec">
          <lval>
           <lhost>
            <var vid="6264" vname="crec"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="229" origin="prim-exp" p-complexity="6">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crec">
         <lval>
          <lhost>
           <var vid="6264" vname="crec"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="230" origin="prim-exp" p-complexity="0">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="231" origin="prim-lval" p-complexity="1">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="232" origin="prim-lval" p-complexity="1">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="233" origin="prim-lval" p-complexity="1">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="234" origin="prim-lval" p-complexity="1">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="235" origin="prim-op" p-complexity="0">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="5">
       <constant ctag="cint64" ikind="iint" intValue="5"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="236" origin="prim-op" p-complexity="1">
     <location byte="211640" file="src/cache.c" line="1265"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="5">
       <constant ctag="cint64" ikind="iint" intValue="5"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="237" origin="prim-exp" p-complexity="2">
     <location byte="211673" file="src/cache.c" line="1267"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((caste (flags:unsigned int) | ((1 &lt;&lt; 2):unsigned int):unsigned int">
       <exp1 etag="caste" xstr="caste (flags:unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp etag="lval" xstr="flags">
         <lval>
          <lhost>
           <var vid="6266" vname="flags"/>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 2):unsigned int">
        <exp1 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp1>
        <exp2 etag="const" xstr="2">
         <constant ctag="cint64" ikind="iint" intValue="2"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="238" origin="prim-exp" p-complexity="1">
     <location byte="211673" file="src/cache.c" line="1267"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6266" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="239" origin="prim-exp" p-complexity="0">
     <location byte="211673" file="src/cache.c" line="1267"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6266" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="240" origin="prim-op" p-complexity="0">
     <location byte="211673" file="src/cache.c" line="1267"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="241" origin="prim-op" p-complexity="1">
     <location byte="211673" file="src/cache.c" line="1267"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="242" origin="prim-exp" p-complexity="0">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="243" origin="prim-exp" p-complexity="0">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="244" origin="prim-exp" p-complexity="0">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="245" origin="prim-exp" p-complexity="0">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="246" origin="prim-exp" p-complexity="0">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="247" origin="prim-exp" p-complexity="0">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6262" vname="host_address"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="248" origin="prim-exp" p-complexity="1">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="249" origin="prim-exp" p-complexity="1">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="250" origin="prim-exp" p-complexity="1">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="251" origin="prim-exp" p-complexity="0">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="252" origin="prim-exp" p-complexity="0">
     <location byte="211694" file="src/cache.c" line="1268"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6266" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="639"/>
       <node name="if-then"/>
       <node name="stmt" num="638"/>
       <node name="if-then"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="253" origin="prim-exp" p-complexity="2">
     <location byte="211787" file="src/cache.c" line="1272"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((caste (flags:unsigned int) | ((1 &lt;&lt; 2):unsigned int):unsigned int">
       <exp1 etag="caste" xstr="caste (flags:unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp etag="lval" xstr="flags">
         <lval>
          <lhost>
           <var vid="6266" vname="flags"/>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 2):unsigned int">
        <exp1 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp1>
        <exp2 etag="const" xstr="2">
         <constant ctag="cint64" ikind="iint" intValue="2"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="640"/>
       <node name="if-else"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="254" origin="prim-exp" p-complexity="1">
     <location byte="211787" file="src/cache.c" line="1272"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6266" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="640"/>
       <node name="if-else"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="255" origin="prim-exp" p-complexity="0">
     <location byte="211787" file="src/cache.c" line="1272"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6266" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="640"/>
       <node name="if-else"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="256" origin="prim-op" p-complexity="0">
     <location byte="211787" file="src/cache.c" line="1272"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="640"/>
       <node name="if-else"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="257" origin="prim-op" p-complexity="1">
     <location byte="211787" file="src/cache.c" line="1272"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="640"/>
       <node name="if-else"/>
       <node name="stmt" num="637"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="258" origin="prim-exp" p-complexity="0">
     <location byte="211808" file="src/cache.c" line="1274"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5903" vname="dhcp_spare"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="641"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="259" origin="prim-exp" p-complexity="0">
     <location byte="211808" file="src/cache.c" line="1274"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="260" origin="prim-exp" p-complexity="6">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dhcp_spare">
         <lval>
          <lhost>
           <var vid="5903" vname="dhcp_spare"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="261" origin="prim-exp" p-complexity="0">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5903" vname="dhcp_spare"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="262" origin="prim-lval" p-complexity="1">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="5903" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="263" origin="prim-lval" p-complexity="1">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="5903" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="264" origin="prim-lval" p-complexity="1">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="5903" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="265" origin="prim-lval" p-complexity="1">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="5903" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="266" origin="prim-exp" p-complexity="1">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dhcp_spare-&gt;next">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dhcp_spare">
          <lval>
           <lhost>
            <var vid="5903" vname="dhcp_spare"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="next"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="267" origin="prim-exp" p-complexity="1">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dhcp_spare-&gt;next">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dhcp_spare">
          <lval>
           <lhost>
            <var vid="5903" vname="dhcp_spare"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="next"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="268" origin="prim-exp" p-complexity="1">
     <location byte="211837" file="src/cache.c" line="1275"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dhcp_spare-&gt;next">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dhcp_spare">
          <lval>
           <lhost>
            <var vid="5903" vname="dhcp_spare"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="next"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="643"/>
       <node name="if-then"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="269" origin="prim-exp" p-complexity="1">
     <location byte="211879" file="src/cache.c" line="1277"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6273" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="644"/>
       <node name="if-else"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="270" origin="prim-exp" p-complexity="0">
     <location byte="211879" file="src/cache.c" line="1277"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6273" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="644"/>
       <node name="if-else"/>
       <node name="stmt" num="642"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="271" origin="prim-exp" p-complexity="0">
     <location byte="211924" file="src/cache.c" line="1279"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="272" origin="prim-exp" p-complexity="0">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="273" origin="prim-lval" p-complexity="1">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="274" origin="prim-lval" p-complexity="1">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="275" origin="prim-lval" p-complexity="1">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="276" origin="prim-lval" p-complexity="1">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="277" origin="prim-exp" p-complexity="4">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((((((caste (flags:unsigned int) | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 4):unsigned int):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int">
       <exp1 binop="bor" etag="binop" xstr="((((caste (flags:unsigned int) | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 4):unsigned int):unsigned int">
        <exp1 binop="bor" etag="binop" xstr="((caste (flags:unsigned int) | ((1 &lt;&lt; 1):unsigned int):unsigned int">
         <exp1 etag="caste" xstr="caste (flags:unsigned int)">
          <typ ikind="iuint" ttag="tint"/>
          <exp etag="lval" xstr="flags">
           <lval>
            <lhost>
             <var vid="6266" vname="flags"/>
            </lhost>
           </lval>
          </exp>
         </exp1>
         <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 1):unsigned int">
          <exp1 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iuint" intValue="1"/>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iint" intValue="1"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 4):unsigned int">
         <exp1 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iuint" intValue="1"/>
         </exp1>
         <exp2 etag="const" xstr="4">
          <constant ctag="cint64" ikind="iint" intValue="4"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 3):unsigned int">
        <exp1 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp1>
        <exp2 etag="const" xstr="3">
         <constant ctag="cint64" ikind="iint" intValue="3"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="278" origin="prim-exp" p-complexity="1">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6266" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="279" origin="prim-exp" p-complexity="0">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6266" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="280" origin="prim-op" p-complexity="0">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="281" origin="prim-op" p-complexity="1">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="282" origin="prim-op" p-complexity="0">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="283" origin="prim-op" p-complexity="1">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="284" origin="prim-op" p-complexity="0">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="285" origin="prim-op" p-complexity="1">
     <location byte="211946" file="src/cache.c" line="1281"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="286" origin="prim-exp" p-complexity="0">
     <location byte="212003" file="src/cache.c" line="1282"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6263" vname="ttd"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="287" origin="prim-exp" p-complexity="0">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="288" origin="prim-lval" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="289" origin="prim-lval" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="290" origin="prim-lval" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="291" origin="prim-lval" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="292" origin="prim-exp" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((caste (crec-&gt;flags:unsigned int) | 1):unsigned int">
       <exp1 etag="caste" xstr="caste (crec-&gt;flags:unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp etag="lval" xstr="crec-&gt;flags">
         <lval>
          <lhost>
           <mem etag="lval" xstr="crec">
            <lval>
             <lhost>
              <var vid="6264" vname="crec"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="196" fname="flags"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iuint" intValue="1"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="293" origin="prim-exp" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crec-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crec">
          <lval>
           <lhost>
            <var vid="6264" vname="crec"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="294" origin="prim-exp" p-complexity="6">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crec">
         <lval>
          <lhost>
           <var vid="6264" vname="crec"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="295" origin="prim-exp" p-complexity="0">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="296" origin="prim-lval" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="297" origin="prim-lval" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="298" origin="prim-lval" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="299" origin="prim-lval" p-complexity="1">
     <location byte="212018" file="src/cache.c" line="1283"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="300" origin="prim-exp" p-complexity="0">
     <location byte="212054" file="src/cache.c" line="1285"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="649"/>
       <node name="if-else"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="301" origin="prim-lval" p-complexity="1">
     <location byte="212054" file="src/cache.c" line="1285"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="649"/>
       <node name="if-else"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="302" origin="prim-lval" p-complexity="1">
     <location byte="212054" file="src/cache.c" line="1285"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="649"/>
       <node name="if-else"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="303" origin="prim-lval" p-complexity="1">
     <location byte="212054" file="src/cache.c" line="1285"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="649"/>
       <node name="if-else"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="304" origin="prim-lval" p-complexity="1">
     <location byte="212054" file="src/cache.c" line="1285"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="649"/>
       <node name="if-else"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="305" origin="prim-exp" p-complexity="0">
     <location byte="212054" file="src/cache.c" line="1285"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6263" vname="ttd"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="649"/>
       <node name="if-else"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="306" origin="prim-exp" p-complexity="0">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="307" origin="prim-lval" p-complexity="1">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="308" origin="prim-lval" p-complexity="1">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="309" origin="prim-lval" p-complexity="1">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="310" origin="prim-lval" p-complexity="1">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="311" origin="prim-exp" p-complexity="6">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="host_address">
         <lval>
          <lhost>
           <var vid="6262" vname="host_address"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="312" origin="prim-exp" p-complexity="0">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6262" vname="host_address"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="313" origin="prim-lval" p-complexity="1">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="314" origin="prim-lval" p-complexity="1">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="315" origin="prim-lval" p-complexity="1">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="316" origin="prim-lval" p-complexity="1">
     <location byte="212077" file="src/cache.c" line="1286"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="317" origin="prim-exp" p-complexity="0">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="318" origin="prim-lval" p-complexity="1">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="319" origin="prim-lval" p-complexity="1">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="320" origin="prim-lval" p-complexity="1">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="321" origin="prim-lval" p-complexity="1">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="322" origin="prim-exp" p-complexity="0">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6260" vname="host_name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="323" origin="prim-exp" p-complexity="1">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="324" origin="prim-exp" p-complexity="1">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="325" origin="prim-exp" p-complexity="1">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="326" origin="prim-exp" p-complexity="1">
     <location byte="212116" file="src/cache.c" line="1287"/>
     <predicate tag="null-terminated">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="327" origin="prim-exp" p-complexity="0">
     <location byte="212152" file="src/cache.c" line="1288"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="328" origin="prim-lval" p-complexity="1">
     <location byte="212152" file="src/cache.c" line="1288"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="329" origin="prim-lval" p-complexity="1">
     <location byte="212152" file="src/cache.c" line="1288"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="330" origin="prim-lval" p-complexity="1">
     <location byte="212152" file="src/cache.c" line="1288"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="331" origin="prim-lval" p-complexity="1">
     <location byte="212152" file="src/cache.c" line="1288"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="332" origin="prim-exp" p-complexity="0">
     <location byte="212182" file="src/cache.c" line="1289"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="333" origin="prim-exp" p-complexity="1">
     <location byte="212182" file="src/cache.c" line="1289"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="334" origin="prim-exp" p-complexity="1">
     <location byte="212182" file="src/cache.c" line="1289"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="335" origin="prim-exp" p-complexity="1">
     <location byte="212182" file="src/cache.c" line="1289"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="336" origin="prim-exp" p-complexity="0">
     <location byte="212207" file="src/cache.c" line="1291"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6264" vname="crec"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="337" origin="prim-exp" p-complexity="1">
     <location byte="212207" file="src/cache.c" line="1291"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="338" origin="prim-exp" p-complexity="1">
     <location byte="212207" file="src/cache.c" line="1291"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="339" origin="prim-exp" p-complexity="1">
     <location byte="212207" file="src/cache.c" line="1291"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crec">
       <lval>
        <lhost>
         <var vid="6264" vname="crec"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="340" origin="prim-exp" p-complexity="0">
     <location byte="212207" file="src/cache.c" line="1291"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6263" vname="ttd"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:34">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
