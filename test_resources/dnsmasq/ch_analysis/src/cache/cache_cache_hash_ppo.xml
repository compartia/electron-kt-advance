<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="cache_hash">
   <statistics avg-context-complexity="3.97" avg-predicate-complexity="1.37" context-complexity="409" predicate-complexity="141" size="103"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="1">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-exp" p-complexity="1">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-exp" p-complexity="1">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-exp" p-complexity="0">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5960" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-exp" p-complexity="1">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="5960" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="1">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="5960" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="1">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="5960" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="9" origin="prim-exp" p-complexity="0">
     <location byte="189401" file="src/cache.c" line="173"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5962" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="55"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="10" origin="prim-exp" p-complexity="1">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="5958" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="11" origin="prim-exp" p-complexity="6">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="5958" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="12" origin="prim-exp" p-complexity="0">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="13" origin="prim-lval" p-complexity="1">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="14" origin="prim-lval" p-complexity="1">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="15" origin="prim-lval" p-complexity="1">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="16" origin="prim-lval" p-complexity="1">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="17" origin="prim-op" p-complexity="0">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="18" origin="prim-op" p-complexity="1">
     <location byte="189459" file="src/cache.c" line="175"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="19" origin="prim-exp" p-complexity="6">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="up">
         <lval>
          <lhost>
           <var vid="5959" vname="up"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="20" origin="prim-exp" p-complexity="0">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="21" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="22" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="23" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="24" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="25" origin="prim-exp" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="(*up)-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="(*up)">
          <lval>
           <lhost>
            <mem etag="lval" xstr="up">
             <lval>
              <lhost>
               <var vid="5959" vname="up"/>
              </lhost>
             </lval>
            </mem>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="26" origin="prim-exp" p-complexity="6">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="(*up)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="up">
            <lval>
             <lhost>
              <var vid="5959" vname="up"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="27" origin="prim-exp" p-complexity="6">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="up">
         <lval>
          <lhost>
           <var vid="5959" vname="up"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="28" origin="prim-exp" p-complexity="0">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="29" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="30" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="31" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="32" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="33" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="34" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="35" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="36" origin="prim-lval" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="37" origin="prim-op" p-complexity="0">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="38" origin="prim-op" p-complexity="1">
     <location byte="189502" file="src/cache.c" line="177"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="59"/>
       <node name="if-then"/>
       <node name="stmt" num="58"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="39" origin="prim-exp" p-complexity="6">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="up">
         <lval>
          <lhost>
           <var vid="5959" vname="up"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="40" origin="prim-exp" p-complexity="0">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="41" origin="prim-lval" p-complexity="1">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="42" origin="prim-lval" p-complexity="1">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="43" origin="prim-lval" p-complexity="1">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="44" origin="prim-lval" p-complexity="1">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="45" origin="prim-lval" p-complexity="1">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="46" origin="prim-lval" p-complexity="1">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="47" origin="prim-lval" p-complexity="1">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="48" origin="prim-lval" p-complexity="1">
     <location byte="189543" file="src/cache.c" line="178"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="62"/>
       <node name="loop"/>
       <node name="stmt" num="57"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="49" origin="prim-exp" p-complexity="1">
     <location byte="189576" file="src/cache.c" line="180"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="5958" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="50" origin="prim-exp" p-complexity="6">
     <location byte="189576" file="src/cache.c" line="180"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="5958" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="51" origin="prim-exp" p-complexity="0">
     <location byte="189576" file="src/cache.c" line="180"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="52" origin="prim-lval" p-complexity="1">
     <location byte="189576" file="src/cache.c" line="180"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="53" origin="prim-lval" p-complexity="1">
     <location byte="189576" file="src/cache.c" line="180"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="54" origin="prim-lval" p-complexity="1">
     <location byte="189576" file="src/cache.c" line="180"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="55" origin="prim-lval" p-complexity="1">
     <location byte="189576" file="src/cache.c" line="180"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="56" origin="prim-exp" p-complexity="6">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="up">
         <lval>
          <lhost>
           <var vid="5959" vname="up"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="57" origin="prim-exp" p-complexity="0">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="58" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="59" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="60" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="61" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="62" origin="prim-exp" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="(*up)-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="(*up)">
          <lval>
           <lhost>
            <mem etag="lval" xstr="up">
             <lval>
              <lhost>
               <var vid="5959" vname="up"/>
              </lhost>
             </lval>
            </mem>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="63" origin="prim-exp" p-complexity="6">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="(*up)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="up">
            <lval>
             <lhost>
              <var vid="5959" vname="up"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="64" origin="prim-exp" p-complexity="6">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="up">
         <lval>
          <lhost>
           <var vid="5959" vname="up"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="65" origin="prim-exp" p-complexity="0">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="66" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="67" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="68" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="69" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="70" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="71" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="72" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="73" origin="prim-lval" p-complexity="1">
     <location byte="189605" file="src/cache.c" line="181"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="66"/>
       <node name="if-then"/>
       <node name="stmt" num="65"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="74" origin="prim-exp" p-complexity="6">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="up">
         <lval>
          <lhost>
           <var vid="5959" vname="up"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="75" origin="prim-exp" p-complexity="0">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="76" origin="prim-lval" p-complexity="1">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="77" origin="prim-lval" p-complexity="1">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="78" origin="prim-lval" p-complexity="1">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="79" origin="prim-lval" p-complexity="1">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="80" origin="prim-lval" p-complexity="1">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="81" origin="prim-lval" p-complexity="1">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="82" origin="prim-lval" p-complexity="1">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="83" origin="prim-lval" p-complexity="1">
     <location byte="189649" file="src/cache.c" line="182"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="69"/>
       <node name="loop"/>
       <node name="stmt" num="64"/>
       <node name="if-then"/>
       <node name="stmt" num="63"/>
       <node name="if-then"/>
       <node name="stmt" num="56"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="84" origin="prim-exp" p-complexity="0">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="85" origin="prim-lval" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="86" origin="prim-lval" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="87" origin="prim-lval" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="88" origin="prim-lval" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5958" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="89" origin="prim-exp" p-complexity="6">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="up">
         <lval>
          <lhost>
           <var vid="5959" vname="up"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="90" origin="prim-exp" p-complexity="0">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="91" origin="prim-lval" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="92" origin="prim-lval" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="93" origin="prim-lval" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="94" origin="prim-lval" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="95" origin="prim-exp" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="96" origin="prim-exp" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="97" origin="prim-exp" p-complexity="1">
     <location byte="189683" file="src/cache.c" line="184"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="(*up)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="up">
          <lval>
           <lhost>
            <var vid="5959" vname="up"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="98" origin="prim-exp" p-complexity="0">
     <location byte="189709" file="src/cache.c" line="185"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="99" origin="prim-lval" p-complexity="1">
     <location byte="189709" file="src/cache.c" line="185"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="100" origin="prim-lval" p-complexity="1">
     <location byte="189709" file="src/cache.c" line="185"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="101" origin="prim-lval" p-complexity="1">
     <location byte="189709" file="src/cache.c" line="185"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="102" origin="prim-lval" p-complexity="1">
     <location byte="189709" file="src/cache.c" line="185"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="5959" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="103" origin="prim-exp" p-complexity="0">
     <location byte="189709" file="src/cache.c" line="185"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="70"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:35">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
