<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="add_dhcp_cname">
   <statistics avg-context-complexity="7.05" avg-predicate-complexity="1.14" context-complexity="1043" predicate-complexity="169" size="148"/>
   <unconstrained-external-functions>
    <efn name="dnsmasq/hostname_isequal" num="1"/>
    <efn name="dnsmasq/whine_malloc" num="1"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="6">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cnames"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="594"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="594"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-lval" p-complexity="1">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="594"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-lval" p-complexity="1">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="594"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-lval" p-complexity="1">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="594"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-lval" p-complexity="1">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="594"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="7" origin="prim-exp" p-complexity="0">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6249" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="596"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="8" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="iint" ttag="tint"/>
      <exp etag="lval" xstr="*(((lval (*(lval (a)).alias) +i 1):(char*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
          <exp1 etag="lval" xstr="a-&gt;alias">
           <lval>
            <lhost>
             <mem etag="lval" xstr="a">
              <lval>
               <lhost>
                <var vid="6249" vname="a"/>
               </lhost>
              </lval>
             </mem>
            </lhost>
            <offset>
             <field ckey="186" fname="alias"/>
            </offset>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iint" intValue="1"/>
          </exp2>
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="9" origin="prim-exp" p-complexity="7">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
         <exp1 etag="lval" xstr="a-&gt;alias">
          <lval>
           <lhost>
            <mem etag="lval" xstr="a">
             <lval>
              <lhost>
               <var vid="6249" vname="a"/>
              </lhost>
             </lval>
            </mem>
           </lhost>
           <offset>
            <field ckey="186" fname="alias"/>
           </offset>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="ichar" ttag="tint"/>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="10" origin="prim-exp" p-complexity="6">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6249" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="alias"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="11" origin="prim-exp" p-complexity="0">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6249" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="12" origin="prim-lval" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="13" origin="prim-lval" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="14" origin="prim-lval" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="15" origin="prim-lval" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="16" origin="prim-op" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="17" origin="prim-op" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="18" origin="prim-op" p-complexity="2">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="19" origin="prim-op" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="20" origin="prim-lval" p-complexity="2">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
       <exp1 etag="lval" xstr="a-&gt;alias">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6249" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="alias"/>
         </offset>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="21" origin="prim-lval" p-complexity="2">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
       <exp1 etag="lval" xstr="a-&gt;alias">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6249" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="alias"/>
         </offset>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="22" origin="prim-lval" p-complexity="2">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
       <exp1 etag="lval" xstr="a-&gt;alias">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6249" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="alias"/>
         </offset>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="23" origin="prim-lval" p-complexity="2">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
       <exp1 etag="lval" xstr="a-&gt;alias">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6249" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="alias"/>
         </offset>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="24" origin="prim-exp" p-complexity="0">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6246" vname="target"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="25" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="26" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="27" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="28" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="6252" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="29" origin="prim-exp" p-complexity="0">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6252" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="30" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (tmp___0:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="tmp___0">
        <lval>
         <lhost>
          <var vid="6252" vname="tmp___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="31" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (tmp___0:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="tmp___0">
        <lval>
         <lhost>
          <var vid="6252" vname="tmp___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="32" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (tmp___0:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="tmp___0">
        <lval>
         <lhost>
          <var vid="6252" vname="tmp___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="33" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="a-&gt;target">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="target"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="34" origin="prim-exp" p-complexity="6">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6249" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="target"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="35" origin="prim-exp" p-complexity="0">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6249" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="36" origin="prim-lval" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="37" origin="prim-lval" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="38" origin="prim-lval" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="39" origin="prim-lval" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="40" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (a-&gt;target:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="a-&gt;target">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6249" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="target"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="41" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (a-&gt;target:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="a-&gt;target">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6249" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="target"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="42" origin="prim-exp" p-complexity="1">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (a-&gt;target:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="a-&gt;target">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6249" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="target"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="599"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="43" origin="prim-exp" p-complexity="0">
     <location byte="209499" file="src/cache.c" line="1182"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6254" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="44" origin="prim-exp" p-complexity="0">
     <location byte="209588" file="src/cache.c" line="1185"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5903" vname="dhcp_spare"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="601"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="45" origin="prim-exp" p-complexity="0">
     <location byte="209588" file="src/cache.c" line="1185"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="46" origin="prim-exp" p-complexity="6">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dhcp_spare">
         <lval>
          <lhost>
           <var vid="5903" vname="dhcp_spare"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="47" origin="prim-exp" p-complexity="0">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5903" vname="dhcp_spare"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="48" origin="prim-lval" p-complexity="1">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="5903" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="49" origin="prim-lval" p-complexity="1">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="5903" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="50" origin="prim-lval" p-complexity="1">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="5903" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="51" origin="prim-lval" p-complexity="1">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="5903" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="52" origin="prim-exp" p-complexity="1">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dhcp_spare-&gt;next">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dhcp_spare">
          <lval>
           <lhost>
            <var vid="5903" vname="dhcp_spare"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="next"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="53" origin="prim-exp" p-complexity="1">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dhcp_spare-&gt;next">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dhcp_spare">
          <lval>
           <lhost>
            <var vid="5903" vname="dhcp_spare"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="next"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="54" origin="prim-exp" p-complexity="1">
     <location byte="209618" file="src/cache.c" line="1186"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dhcp_spare-&gt;next">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dhcp_spare">
          <lval>
           <lhost>
            <var vid="5903" vname="dhcp_spare"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="next"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="603"/>
       <node name="if-then"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="55" origin="prim-exp" p-complexity="1">
     <location byte="209658" file="src/cache.c" line="1188"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6250" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="604"/>
       <node name="if-else"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="56" origin="prim-exp" p-complexity="0">
     <location byte="209658" file="src/cache.c" line="1188"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6250" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="604"/>
       <node name="if-else"/>
       <node name="stmt" num="602"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="57" origin="prim-exp" p-complexity="0">
     <location byte="209704" file="src/cache.c" line="1190"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="58" origin="prim-exp" p-complexity="0">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="59" origin="prim-lval" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="60" origin="prim-lval" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="61" origin="prim-lval" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="62" origin="prim-lval" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="63" origin="prim-exp" p-complexity="5">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((((((((((1 &lt;&lt; 3):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 4):unsigned int):unsigned int | ((1 &lt;&lt; 11):unsigned int):unsigned int | ((1 &lt;&lt; 13):unsigned int):unsigned int">
       <exp1 binop="bor" etag="binop" xstr="((((((((1 &lt;&lt; 3):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 4):unsigned int):unsigned int | ((1 &lt;&lt; 11):unsigned int):unsigned int">
        <exp1 binop="bor" etag="binop" xstr="((((((1 &lt;&lt; 3):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 4):unsigned int):unsigned int">
         <exp1 binop="bor" etag="binop" xstr="((((1 &lt;&lt; 3):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int">
          <exp1 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 3):unsigned int">
           <exp1 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iuint" intValue="1"/>
           </exp1>
           <exp2 etag="const" xstr="3">
            <constant ctag="cint64" ikind="iint" intValue="3"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp1>
          <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 1):unsigned int">
           <exp1 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iuint" intValue="1"/>
           </exp1>
           <exp2 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iint" intValue="1"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp1>
         <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 4):unsigned int">
          <exp1 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iuint" intValue="1"/>
          </exp1>
          <exp2 etag="const" xstr="4">
           <constant ctag="cint64" ikind="iint" intValue="4"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 11):unsigned int">
         <exp1 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iuint" intValue="1"/>
         </exp1>
         <exp2 etag="const" xstr="11">
          <constant ctag="cint64" ikind="iint" intValue="11"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 13):unsigned int">
        <exp1 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp1>
        <exp2 etag="const" xstr="13">
         <constant ctag="cint64" ikind="iint" intValue="13"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="64" origin="prim-op" p-complexity="0">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="65" origin="prim-op" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="66" origin="prim-op" p-complexity="0">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="67" origin="prim-op" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="68" origin="prim-op" p-complexity="0">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="69" origin="prim-op" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="70" origin="prim-op" p-complexity="0">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="71" origin="prim-op" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="72" origin="prim-op" p-complexity="0">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="73" origin="prim-op" p-complexity="1">
     <location byte="209726" file="src/cache.c" line="1192"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="606"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="74" origin="prim-exp" p-complexity="0">
     <location byte="209798" file="src/cache.c" line="1193"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6247" vname="ttd"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="75" origin="prim-exp" p-complexity="0">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="76" origin="prim-lval" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="77" origin="prim-lval" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="78" origin="prim-lval" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="79" origin="prim-lval" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="80" origin="prim-exp" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((caste (aliasc-&gt;flags:unsigned int) | 1):unsigned int">
       <exp1 etag="caste" xstr="caste (aliasc-&gt;flags:unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp etag="lval" xstr="aliasc-&gt;flags">
         <lval>
          <lhost>
           <mem etag="lval" xstr="aliasc">
            <lval>
             <lhost>
              <var vid="6248" vname="aliasc"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="196" fname="flags"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iuint" intValue="1"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="81" origin="prim-exp" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="aliasc-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="aliasc">
          <lval>
           <lhost>
            <var vid="6248" vname="aliasc"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="82" origin="prim-exp" p-complexity="6">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="aliasc">
         <lval>
          <lhost>
           <var vid="6248" vname="aliasc"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="83" origin="prim-exp" p-complexity="0">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="84" origin="prim-lval" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="85" origin="prim-lval" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="86" origin="prim-lval" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="87" origin="prim-lval" p-complexity="1">
     <location byte="209819" file="src/cache.c" line="1194"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="608"/>
       <node name="if-then"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="88" origin="prim-exp" p-complexity="0">
     <location byte="209862" file="src/cache.c" line="1196"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="609"/>
       <node name="if-else"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="89" origin="prim-lval" p-complexity="1">
     <location byte="209862" file="src/cache.c" line="1196"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="609"/>
       <node name="if-else"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="90" origin="prim-lval" p-complexity="1">
     <location byte="209862" file="src/cache.c" line="1196"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="609"/>
       <node name="if-else"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="91" origin="prim-lval" p-complexity="1">
     <location byte="209862" file="src/cache.c" line="1196"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="609"/>
       <node name="if-else"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="92" origin="prim-lval" p-complexity="1">
     <location byte="209862" file="src/cache.c" line="1196"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="609"/>
       <node name="if-else"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="93" origin="prim-exp" p-complexity="0">
     <location byte="209862" file="src/cache.c" line="1196"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6247" vname="ttd"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="609"/>
       <node name="if-else"/>
       <node name="stmt" num="607"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="94" origin="prim-exp" p-complexity="0">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="95" origin="prim-lval" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="96" origin="prim-lval" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="97" origin="prim-lval" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="98" origin="prim-lval" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="99" origin="prim-exp" p-complexity="6">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6249" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="alias"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="100" origin="prim-exp" p-complexity="0">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6249" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="101" origin="prim-lval" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="102" origin="prim-lval" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="103" origin="prim-lval" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="104" origin="prim-lval" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="105" origin="prim-exp" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="106" origin="prim-exp" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="107" origin="prim-exp" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="108" origin="prim-exp" p-complexity="1">
     <location byte="209886" file="src/cache.c" line="1197"/>
     <predicate tag="null-terminated">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6249" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="109" origin="prim-exp" p-complexity="0">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="110" origin="prim-lval" p-complexity="1">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="111" origin="prim-lval" p-complexity="1">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="112" origin="prim-lval" p-complexity="1">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="113" origin="prim-lval" p-complexity="1">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="114" origin="prim-exp" p-complexity="0">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6246" vname="target"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="115" origin="prim-exp" p-complexity="1">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="116" origin="prim-exp" p-complexity="1">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="117" origin="prim-exp" p-complexity="1">
     <location byte="209922" file="src/cache.c" line="1198"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="118" origin="prim-exp" p-complexity="0">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="119" origin="prim-lval" p-complexity="1">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="120" origin="prim-lval" p-complexity="1">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="121" origin="prim-lval" p-complexity="1">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="122" origin="prim-lval" p-complexity="1">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="123" origin="prim-exp" p-complexity="6">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="target">
         <lval>
          <lhost>
           <var vid="6246" vname="target"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="uid"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="124" origin="prim-exp" p-complexity="0">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6246" vname="target"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="125" origin="prim-lval" p-complexity="1">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="126" origin="prim-lval" p-complexity="1">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="127" origin="prim-lval" p-complexity="1">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="128" origin="prim-lval" p-complexity="1">
     <location byte="209969" file="src/cache.c" line="1199"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="target">
       <lval>
        <lhost>
         <var vid="6246" vname="target"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="129" origin="prim-exp" p-complexity="0">
     <location byte="210012" file="src/cache.c" line="1200"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="130" origin="prim-lval" p-complexity="1">
     <location byte="210012" file="src/cache.c" line="1200"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="131" origin="prim-lval" p-complexity="1">
     <location byte="210012" file="src/cache.c" line="1200"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="132" origin="prim-lval" p-complexity="1">
     <location byte="210012" file="src/cache.c" line="1200"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="133" origin="prim-lval" p-complexity="1">
     <location byte="210012" file="src/cache.c" line="1200"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="134" origin="prim-exp" p-complexity="0">
     <location byte="210043" file="src/cache.c" line="1201"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="135" origin="prim-exp" p-complexity="1">
     <location byte="210043" file="src/cache.c" line="1201"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="136" origin="prim-exp" p-complexity="1">
     <location byte="210043" file="src/cache.c" line="1201"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="137" origin="prim-exp" p-complexity="1">
     <location byte="210043" file="src/cache.c" line="1201"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="138" origin="prim-exp" p-complexity="0">
     <location byte="210068" file="src/cache.c" line="1202"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6248" vname="aliasc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="139" origin="prim-exp" p-complexity="1">
     <location byte="210068" file="src/cache.c" line="1202"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="140" origin="prim-exp" p-complexity="1">
     <location byte="210068" file="src/cache.c" line="1202"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="141" origin="prim-exp" p-complexity="1">
     <location byte="210068" file="src/cache.c" line="1202"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="aliasc">
       <lval>
        <lhost>
         <var vid="6248" vname="aliasc"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="142" origin="prim-exp" p-complexity="0">
     <location byte="210068" file="src/cache.c" line="1202"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6247" vname="ttd"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="610"/>
       <node name="if-then"/>
       <node name="stmt" num="605"/>
       <node name="if-then"/>
       <node name="stmt" num="600"/>
       <node name="if-then"/>
       <node name="stmt" num="598"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="143" origin="prim-exp" p-complexity="6">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6249" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="611"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="144" origin="prim-exp" p-complexity="0">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6249" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="611"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="145" origin="prim-lval" p-complexity="1">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="611"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="146" origin="prim-lval" p-complexity="1">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="611"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="147" origin="prim-lval" p-complexity="1">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="611"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="148" origin="prim-lval" p-complexity="1">
     <location byte="209446" file="src/cache.c" line="1181"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6249" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="611"/>
       <node name="loop"/>
       <node name="stmt" num="595"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:34">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
