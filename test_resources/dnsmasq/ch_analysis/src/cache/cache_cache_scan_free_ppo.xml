<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="cache_scan_free">
   <statistics avg-context-complexity="10.07" avg-predicate-complexity="1.19" context-complexity="3666" predicate-complexity="432" size="364"/>
   <unconstrained-external-functions>
    <efn name="dnsmasq/hostname_isequal" num="1"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="1">
     <location byte="192113" file="src/cache.c" line="337"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6002" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="192113" file="src/cache.c" line="337"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6002" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-op" p-complexity="0">
     <location byte="192113" file="src/cache.c" line="337"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-op" p-complexity="1">
     <location byte="192113" file="src/cache.c" line="337"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="5" origin="prim-exp" p-complexity="0">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5999" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="6" origin="prim-exp" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="5999" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="7" origin="prim-exp" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="5999" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="8" origin="prim-exp" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="5999" vname="name"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="9" origin="prim-exp" p-complexity="6">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="up">
         <lval>
          <lhost>
           <var vid="6004" vname="up"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="10" origin="prim-exp" p-complexity="0">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6004" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="11" origin="prim-lval" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="12" origin="prim-lval" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="13" origin="prim-lval" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="14" origin="prim-lval" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="132"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="15" origin="prim-exp" p-complexity="0">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="134"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="16" origin="prim-exp" p-complexity="0">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6001" vname="now"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="136"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="17" origin="prim-exp" p-complexity="0">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="136"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="18" origin="prim-exp" p-complexity="1">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="136"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="19" origin="prim-exp" p-complexity="1">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="136"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="20" origin="prim-exp" p-complexity="1">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="136"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="21" origin="prim-exp" p-complexity="0">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6005" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="22" origin="prim-exp" p-complexity="0">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="139"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="23" origin="prim-exp" p-complexity="1">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="139"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="24" origin="prim-exp" p-complexity="1">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="139"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="25" origin="prim-exp" p-complexity="1">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="139"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="26" origin="prim-exp" p-complexity="0">
     <location byte="192227" file="src/cache.c" line="341"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6007" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="27" origin="prim-exp" p-complexity="0">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6004" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="28" origin="prim-lval" p-complexity="1">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="29" origin="prim-lval" p-complexity="1">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="30" origin="prim-lval" p-complexity="1">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="31" origin="prim-lval" p-complexity="1">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="32" origin="prim-exp" p-complexity="6">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="33" origin="prim-exp" p-complexity="0">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="34" origin="prim-lval" p-complexity="1">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="35" origin="prim-lval" p-complexity="1">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="36" origin="prim-lval" p-complexity="1">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="37" origin="prim-lval" p-complexity="1">
     <location byte="192305" file="src/cache.c" line="343"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="141"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="38" origin="prim-exp" p-complexity="1">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="39" origin="prim-exp" p-complexity="6">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="40" origin="prim-exp" p-complexity="0">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="41" origin="prim-lval" p-complexity="1">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="42" origin="prim-lval" p-complexity="1">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="43" origin="prim-lval" p-complexity="1">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="44" origin="prim-lval" p-complexity="1">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="45" origin="prim-op" p-complexity="0">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="46" origin="prim-op" p-complexity="1">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="47" origin="prim-op" p-complexity="0">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="48" origin="prim-op" p-complexity="1">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="49" origin="prim-op" p-complexity="0">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="50" origin="prim-op" p-complexity="1">
     <location byte="192336" file="src/cache.c" line="344"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="51" origin="prim-exp" p-complexity="0">
     <location byte="192398" file="src/cache.c" line="346"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="52" origin="prim-exp" p-complexity="1">
     <location byte="192398" file="src/cache.c" line="346"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="53" origin="prim-exp" p-complexity="1">
     <location byte="192398" file="src/cache.c" line="346"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="54" origin="prim-exp" p-complexity="1">
     <location byte="192398" file="src/cache.c" line="346"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="55" origin="prim-exp" p-complexity="0">
     <location byte="192423" file="src/cache.c" line="347"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="56" origin="prim-exp" p-complexity="1">
     <location byte="192423" file="src/cache.c" line="347"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="57" origin="prim-exp" p-complexity="1">
     <location byte="192423" file="src/cache.c" line="347"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="58" origin="prim-exp" p-complexity="1">
     <location byte="192423" file="src/cache.c" line="347"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="if-then"/>
       <node name="stmt" num="140"/>
       <node name="if-else"/>
       <node name="stmt" num="137"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="59" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="60" origin="prim-exp" p-complexity="6">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="61" origin="prim-exp" p-complexity="0">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="62" origin="prim-lval" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="63" origin="prim-lval" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="64" origin="prim-lval" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="65" origin="prim-lval" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="66" origin="prim-op" p-complexity="0">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="67" origin="prim-op" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="68" origin="prim-exp" p-complexity="0">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="69" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="70" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="71" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="72" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6009" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="73" origin="prim-exp" p-complexity="0">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6009" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="74" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (tmp___1:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="tmp___1">
        <lval>
         <lhost>
          <var vid="6009" vname="tmp___1"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="75" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (tmp___1:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="tmp___1">
        <lval>
         <lhost>
          <var vid="6009" vname="tmp___1"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="76" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (tmp___1:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="tmp___1">
        <lval>
         <lhost>
          <var vid="6009" vname="tmp___1"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="77" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="5999" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="78" origin="prim-exp" p-complexity="0">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5999" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="79" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="5999" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="80" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="5999" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="81" origin="prim-exp" p-complexity="1">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="name">
        <lval>
         <lhost>
          <var vid="5999" vname="name"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="82" origin="prim-exp" p-complexity="0">
     <location byte="192474" file="src/cache.c" line="352"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6011" vname="tmp___2"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="83" origin="prim-exp" p-complexity="2">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp binop="band" etag="binop" xstr="((caste (flags:int) &amp; caste (crecp-&gt;flags:int)):int">
       <exp1 etag="caste" xstr="caste (flags:int)">
        <typ ikind="iint" ttag="tint"/>
        <exp etag="lval" xstr="flags">
         <lval>
          <lhost>
           <var vid="6002" vname="flags"/>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="caste" xstr="caste (crecp-&gt;flags:int)">
        <typ ikind="iint" ttag="tint"/>
        <exp etag="lval" xstr="crecp-&gt;flags">
         <lval>
          <lhost>
           <mem etag="lval" xstr="crecp">
            <lval>
             <lhost>
              <var vid="6003" vname="crecp"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="196" fname="flags"/>
          </offset>
         </lval>
        </exp>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="84" origin="prim-exp" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6002" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="85" origin="prim-exp" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6002" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="86" origin="prim-exp" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="87" origin="prim-exp" p-complexity="6">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="88" origin="prim-exp" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="89" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="90" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="91" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="92" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="93" origin="prim-op" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="94" origin="prim-op" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="95" origin="prim-op" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="96" origin="prim-op" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="97" origin="prim-exp" p-complexity="2">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp binop="bor" etag="binop" xstr="((caste (crecp-&gt;flags:int) | caste (flags:int)):int">
       <exp1 etag="caste" xstr="caste (crecp-&gt;flags:int)">
        <typ ikind="iint" ttag="tint"/>
        <exp etag="lval" xstr="crecp-&gt;flags">
         <lval>
          <lhost>
           <mem etag="lval" xstr="crecp">
            <lval>
             <lhost>
              <var vid="6003" vname="crecp"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="196" fname="flags"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="caste" xstr="caste (flags:int)">
        <typ ikind="iint" ttag="tint"/>
        <exp etag="lval" xstr="flags">
         <lval>
          <lhost>
           <var vid="6002" vname="flags"/>
          </lhost>
         </lval>
        </exp>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="98" origin="prim-exp" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="99" origin="prim-exp" p-complexity="6">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="100" origin="prim-exp" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="101" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="102" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="103" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="104" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="105" origin="prim-exp" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6002" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="106" origin="prim-exp" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6002" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="107" origin="prim-op" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="9" id="108" origin="prim-op" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="109" origin="prim-exp" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="110" origin="prim-exp" p-complexity="6">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="111" origin="prim-exp" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="112" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="113" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="114" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="115" origin="prim-lval" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="116" origin="prim-op" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="117" origin="prim-op" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="118" origin="prim-op" p-complexity="0">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="14">
       <constant ctag="cint64" ikind="iint" intValue="14"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="119" origin="prim-op" p-complexity="1">
     <location byte="192568" file="src/cache.c" line="355"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="14">
       <constant ctag="cint64" ikind="iint" intValue="14"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="120" origin="prim-exp" p-complexity="1">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="121" origin="prim-exp" p-complexity="6">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="122" origin="prim-exp" p-complexity="0">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="123" origin="prim-lval" p-complexity="1">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="124" origin="prim-lval" p-complexity="1">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="125" origin="prim-lval" p-complexity="1">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="126" origin="prim-lval" p-complexity="1">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="127" origin="prim-op" p-complexity="0">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="128" origin="prim-op" p-complexity="1">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="129" origin="prim-op" p-complexity="0">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="130" origin="prim-op" p-complexity="1">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="131" origin="prim-op" p-complexity="0">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="132" origin="prim-op" p-complexity="1">
     <location byte="192714" file="src/cache.c" line="358"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="133" origin="prim-exp" p-complexity="0">
     <location byte="192771" file="src/cache.c" line="359"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="153"/>
       <node name="if-then"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="134" origin="prim-exp" p-complexity="1">
     <location byte="192771" file="src/cache.c" line="359"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="153"/>
       <node name="if-then"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="135" origin="prim-exp" p-complexity="1">
     <location byte="192771" file="src/cache.c" line="359"/>
     <predicate tag="global-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="153"/>
       <node name="if-then"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="136" origin="prim-exp" p-complexity="1">
     <location byte="192771" file="src/cache.c" line="359"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="153"/>
       <node name="if-then"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="137" origin="prim-exp" p-complexity="1">
     <location byte="192771" file="src/cache.c" line="359"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="153"/>
       <node name="if-then"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="138" origin="prim-exp" p-complexity="0">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6004" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="139" origin="prim-lval" p-complexity="1">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="140" origin="prim-lval" p-complexity="1">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="141" origin="prim-lval" p-complexity="1">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="142" origin="prim-lval" p-complexity="1">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="143" origin="prim-exp" p-complexity="6">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="144" origin="prim-exp" p-complexity="0">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="145" origin="prim-lval" p-complexity="1">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="146" origin="prim-lval" p-complexity="1">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="147" origin="prim-lval" p-complexity="1">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="148" origin="prim-lval" p-complexity="1">
     <location byte="192789" file="src/cache.c" line="360"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="149" origin="prim-exp" p-complexity="0">
     <location byte="192817" file="src/cache.c" line="361"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="150" origin="prim-exp" p-complexity="1">
     <location byte="192817" file="src/cache.c" line="361"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="151" origin="prim-exp" p-complexity="1">
     <location byte="192817" file="src/cache.c" line="361"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="152" origin="prim-exp" p-complexity="1">
     <location byte="192817" file="src/cache.c" line="361"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="153" origin="prim-exp" p-complexity="0">
     <location byte="192842" file="src/cache.c" line="362"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="154" origin="prim-exp" p-complexity="1">
     <location byte="192842" file="src/cache.c" line="362"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="155" origin="prim-exp" p-complexity="1">
     <location byte="192842" file="src/cache.c" line="362"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="156" origin="prim-exp" p-complexity="1">
     <location byte="192842" file="src/cache.c" line="362"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="154"/>
       <node name="if-then"/>
       <node name="stmt" num="151"/>
       <node name="if-then"/>
       <node name="stmt" num="150"/>
       <node name="if-else"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="if-then"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="157" origin="prim-exp" p-complexity="0">
     <location byte="192905" file="src/cache.c" line="379"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="156"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="158" origin="prim-lval" p-complexity="1">
     <location byte="192905" file="src/cache.c" line="379"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="156"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="159" origin="prim-lval" p-complexity="1">
     <location byte="192905" file="src/cache.c" line="379"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="156"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="160" origin="prim-lval" p-complexity="1">
     <location byte="192905" file="src/cache.c" line="379"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="156"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="161" origin="prim-lval" p-complexity="1">
     <location byte="192905" file="src/cache.c" line="379"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="156"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="162" origin="prim-exp" p-complexity="6">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="157"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="163" origin="prim-exp" p-complexity="0">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="157"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="164" origin="prim-lval" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="157"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="165" origin="prim-lval" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="157"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="166" origin="prim-lval" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="157"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="167" origin="prim-lval" p-complexity="1">
     <location byte="192146" file="src/cache.c" line="339"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="157"/>
       <node name="loop"/>
       <node name="stmt" num="133"/>
       <node name="if-then"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="168" origin="prim-exp" p-complexity="1">
     <location byte="192971" file="src/cache.c" line="386"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6002" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="158"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="169" origin="prim-exp" p-complexity="0">
     <location byte="192971" file="src/cache.c" line="386"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6002" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="158"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="170" origin="prim-op" p-complexity="0">
     <location byte="192971" file="src/cache.c" line="386"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="158"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="171" origin="prim-op" p-complexity="1">
     <location byte="192971" file="src/cache.c" line="386"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="158"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="172" origin="prim-exp" p-complexity="0">
     <location byte="192971" file="src/cache.c" line="386"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6015" vname="tmp___3"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="161"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="173" origin="prim-exp" p-complexity="0">
     <location byte="193022" file="src/cache.c" line="390"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6012" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="163"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="174" origin="prim-exp" p-complexity="0">
     <location byte="193022" file="src/cache.c" line="390"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5910" vname="hash_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="163"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="175" origin="prim-exp" p-complexity="8">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
         <exp1 etag="lval" xstr="hash_table">
          <lval>
           <lhost>
            <var vid="5902" vname="hash_table"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="i">
          <lval>
           <lhost>
            <var vid="6012" vname="i"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ttag="tptr">
           <typ ckey="196" ttag="tcomp"/>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="176" origin="prim-exp" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="hash_table"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="177" origin="prim-exp" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6012" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="178" origin="prim-op" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="179" origin="prim-op" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="180" origin="prim-op" p-complexity="3">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6012" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="181" origin="prim-op" p-complexity="2">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6012" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="182" origin="prim-lval" p-complexity="3">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6012" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="183" origin="prim-lval" p-complexity="3">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6012" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="184" origin="prim-lval" p-complexity="3">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6012" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="185" origin="prim-lval" p-complexity="3">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6012" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="186" origin="prim-exp" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="hash_table"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="187" origin="prim-exp" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6012" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="188" origin="prim-op" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="189" origin="prim-op" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="190" origin="prim-op" p-complexity="3">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6012" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="191" origin="prim-op" p-complexity="2">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6012" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="165"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="192" origin="prim-exp" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="193" origin="prim-exp" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="194" origin="prim-exp" p-complexity="6">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="195" origin="prim-exp" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="196" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="197" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="198" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="199" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="200" origin="prim-op" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="201" origin="prim-op" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="202" origin="prim-exp" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="169"/>
       <node name="if-else"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="203" origin="prim-exp" p-complexity="6">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="169"/>
       <node name="if-else"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="204" origin="prim-exp" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="169"/>
       <node name="if-else"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="205" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="169"/>
       <node name="if-else"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="206" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="169"/>
       <node name="if-else"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="207" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="169"/>
       <node name="if-else"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="208" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="169"/>
       <node name="if-else"/>
       <node name="stmt" num="168"/>
       <node name="if-then"/>
       <node name="stmt" num="167"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="209" origin="prim-exp" p-complexity="0">
     <location byte="193211" file="src/cache.c" line="394"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6001" vname="now"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="172"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="210" origin="prim-exp" p-complexity="0">
     <location byte="193211" file="src/cache.c" line="394"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="172"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="211" origin="prim-exp" p-complexity="1">
     <location byte="193211" file="src/cache.c" line="394"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="172"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="212" origin="prim-exp" p-complexity="1">
     <location byte="193211" file="src/cache.c" line="394"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="172"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="213" origin="prim-exp" p-complexity="1">
     <location byte="193211" file="src/cache.c" line="394"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="172"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="214" origin="prim-exp" p-complexity="0">
     <location byte="193211" file="src/cache.c" line="394"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6019" vname="tmp___5"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="215" origin="prim-exp" p-complexity="0">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6004" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="216" origin="prim-lval" p-complexity="1">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="217" origin="prim-lval" p-complexity="1">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="218" origin="prim-lval" p-complexity="1">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="219" origin="prim-lval" p-complexity="1">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="220" origin="prim-exp" p-complexity="6">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="221" origin="prim-exp" p-complexity="0">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="222" origin="prim-lval" p-complexity="1">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="223" origin="prim-lval" p-complexity="1">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="224" origin="prim-lval" p-complexity="1">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="225" origin="prim-lval" p-complexity="1">
     <location byte="193253" file="src/cache.c" line="396"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="174"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="226" origin="prim-exp" p-complexity="1">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="227" origin="prim-exp" p-complexity="6">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="228" origin="prim-exp" p-complexity="0">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="229" origin="prim-lval" p-complexity="1">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="230" origin="prim-lval" p-complexity="1">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="231" origin="prim-lval" p-complexity="1">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="232" origin="prim-lval" p-complexity="1">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="233" origin="prim-op" p-complexity="0">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="234" origin="prim-op" p-complexity="1">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="235" origin="prim-op" p-complexity="0">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="236" origin="prim-op" p-complexity="1">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="237" origin="prim-op" p-complexity="0">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="238" origin="prim-op" p-complexity="1">
     <location byte="193284" file="src/cache.c" line="397"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="239" origin="prim-exp" p-complexity="0">
     <location byte="193346" file="src/cache.c" line="399"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="176"/>
       <node name="if-then"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="240" origin="prim-exp" p-complexity="1">
     <location byte="193346" file="src/cache.c" line="399"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="176"/>
       <node name="if-then"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="241" origin="prim-exp" p-complexity="1">
     <location byte="193346" file="src/cache.c" line="399"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="176"/>
       <node name="if-then"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="242" origin="prim-exp" p-complexity="1">
     <location byte="193346" file="src/cache.c" line="399"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="176"/>
       <node name="if-then"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="243" origin="prim-exp" p-complexity="0">
     <location byte="193371" file="src/cache.c" line="400"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="176"/>
       <node name="if-then"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="244" origin="prim-exp" p-complexity="1">
     <location byte="193371" file="src/cache.c" line="400"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="176"/>
       <node name="if-then"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="245" origin="prim-exp" p-complexity="1">
     <location byte="193371" file="src/cache.c" line="400"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="176"/>
       <node name="if-then"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="246" origin="prim-exp" p-complexity="1">
     <location byte="193371" file="src/cache.c" line="400"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="176"/>
       <node name="if-then"/>
       <node name="stmt" num="175"/>
       <node name="if-then"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="247" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="248" origin="prim-exp" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="249" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="250" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="251" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="252" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="253" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="254" origin="prim-op" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="255" origin="prim-op" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="256" origin="prim-op" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="257" origin="prim-op" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="258" origin="prim-op" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="259" origin="prim-op" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="260" origin="prim-exp" p-complexity="2">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp binop="band" etag="binop" xstr="((caste (flags:int) &amp; caste (crecp-&gt;flags:int)):int">
       <exp1 etag="caste" xstr="caste (flags:int)">
        <typ ikind="iint" ttag="tint"/>
        <exp etag="lval" xstr="flags">
         <lval>
          <lhost>
           <var vid="6002" vname="flags"/>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="caste" xstr="caste (crecp-&gt;flags:int)">
        <typ ikind="iint" ttag="tint"/>
        <exp etag="lval" xstr="crecp-&gt;flags">
         <lval>
          <lhost>
           <mem etag="lval" xstr="crecp">
            <lval>
             <lhost>
              <var vid="6003" vname="crecp"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="196" fname="flags"/>
          </offset>
         </lval>
        </exp>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="261" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6002" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="262" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6002" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="263" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="264" origin="prim-exp" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="265" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="266" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="267" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="268" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="269" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="270" origin="prim-op" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="271" origin="prim-op" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="272" origin="prim-exp" p-complexity="2">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp binop="band" etag="binop" xstr="((caste (flags:int) &amp; caste (crecp-&gt;flags:int)):int">
       <exp1 etag="caste" xstr="caste (flags:int)">
        <typ ikind="iint" ttag="tint"/>
        <exp etag="lval" xstr="flags">
         <lval>
          <lhost>
           <var vid="6002" vname="flags"/>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="caste" xstr="caste (crecp-&gt;flags:int)">
        <typ ikind="iint" ttag="tint"/>
        <exp etag="lval" xstr="crecp-&gt;flags">
         <lval>
          <lhost>
           <mem etag="lval" xstr="crecp">
            <lval>
             <lhost>
              <var vid="6003" vname="crecp"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="196" fname="flags"/>
          </offset>
         </lval>
        </exp>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="273" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="flags">
       <lval>
        <lhost>
         <var vid="6002" vname="flags"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="274" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6002" vname="flags"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="275" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="crecp-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="276" origin="prim-exp" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="277" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="278" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="279" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="280" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="281" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="282" origin="prim-op" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="283" origin="prim-op" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="284" origin="prim-op" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="285" origin="prim-op" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" fname="memcmp" id="286" name="buffersize" origin="f-pre" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="n" nr="3" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="15" fname="memcmp" id="287" name="buffersize" origin="f-pre" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="n" nr="3" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="15" fname="memcmp" id="288" name="buffersize" origin="f-pre" p-complexity="8">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="n" nr="3" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="15" fname="memcmp" id="289" name="buffersize" origin="f-pre" p-complexity="7">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </base-exp>
      <len-exp etag="caste" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="n" nr="3" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="15" fname="memcmp" id="290" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="n" nr="3" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="15" fname="memcmp" id="291" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="n" nr="3" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="15" fname="memcmp" id="292" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="n" nr="3" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="15" fname="memcmp" id="293" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </base-exp>
      <len-exp etag="caste" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="n" nr="3" xstr="caste (addrlen:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="addrlen">
        <lval>
         <lhost>
          <var vid="6013" vname="addrlen"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="294" origin="prim-exp" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="crecp">
          <lval>
           <lhost>
            <var vid="6003" vname="crecp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="197" fname="addr"/>
         </offset>
         <field ckey="196" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="295" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="296" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="297" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="298" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="299" origin="prim-lval" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="300" origin="prim-exp" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="301" origin="prim-exp" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="302" origin="prim-exp" p-complexity="6">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (crecp-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (crecp-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="crecp">
           <lval>
            <lhost>
             <var vid="6003" vname="crecp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="197" fname="addr"/>
          </offset>
          <field ckey="196" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="303" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="176" ttag="tcomp"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6000" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="304" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6000" vname="addr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="305" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="306" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="307" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="addr">
        <lval>
         <lhost>
          <var vid="6000" vname="addr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="308" origin="prim-exp" p-complexity="1">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="lval" xstr="addrlen">
       <lval>
        <lhost>
         <var vid="6013" vname="addrlen"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="309" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6013" vname="addrlen"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="180"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="310" origin="prim-exp" p-complexity="0">
     <location byte="193409" file="src/cache.c" line="403"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6017" vname="tmp___4"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="311" origin="prim-exp" p-complexity="0">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6004" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="312" origin="prim-lval" p-complexity="1">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="313" origin="prim-lval" p-complexity="1">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="314" origin="prim-lval" p-complexity="1">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="315" origin="prim-lval" p-complexity="1">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6004" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="316" origin="prim-exp" p-complexity="6">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="317" origin="prim-exp" p-complexity="0">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="318" origin="prim-lval" p-complexity="1">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="319" origin="prim-lval" p-complexity="1">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="320" origin="prim-lval" p-complexity="1">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="321" origin="prim-lval" p-complexity="1">
     <location byte="193625" file="src/cache.c" line="408"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="322" origin="prim-exp" p-complexity="0">
     <location byte="193656" file="src/cache.c" line="409"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="323" origin="prim-exp" p-complexity="1">
     <location byte="193656" file="src/cache.c" line="409"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="324" origin="prim-exp" p-complexity="1">
     <location byte="193656" file="src/cache.c" line="409"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="325" origin="prim-exp" p-complexity="1">
     <location byte="193656" file="src/cache.c" line="409"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="326" origin="prim-exp" p-complexity="0">
     <location byte="193684" file="src/cache.c" line="410"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="327" origin="prim-exp" p-complexity="1">
     <location byte="193684" file="src/cache.c" line="410"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="328" origin="prim-exp" p-complexity="1">
     <location byte="193684" file="src/cache.c" line="410"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="329" origin="prim-exp" p-complexity="1">
     <location byte="193684" file="src/cache.c" line="410"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="182"/>
       <node name="if-then"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="330" origin="prim-exp" p-complexity="0">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="183"/>
       <node name="if-else"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="331" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="183"/>
       <node name="if-else"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="332" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="183"/>
       <node name="if-else"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="333" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="183"/>
       <node name="if-else"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="16" id="334" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="183"/>
       <node name="if-else"/>
       <node name="stmt" num="181"/>
       <node name="if-then"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="335" origin="prim-exp" p-complexity="0">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="184"/>
       <node name="if-else"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="336" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="184"/>
       <node name="if-else"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="337" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="184"/>
       <node name="if-else"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="338" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="184"/>
       <node name="if-else"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="15" id="339" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="184"/>
       <node name="if-else"/>
       <node name="stmt" num="179"/>
       <node name="if-then"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="340" origin="prim-exp" p-complexity="0">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="185"/>
       <node name="if-else"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="341" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="185"/>
       <node name="if-else"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="342" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="185"/>
       <node name="if-else"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="343" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="185"/>
       <node name="if-else"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="14" id="344" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="185"/>
       <node name="if-else"/>
       <node name="stmt" num="178"/>
       <node name="if-then"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="345" origin="prim-exp" p-complexity="0">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="186"/>
       <node name="if-else"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="346" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="186"/>
       <node name="if-else"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="347" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="186"/>
       <node name="if-else"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="348" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="186"/>
       <node name="if-else"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="349" origin="prim-lval" p-complexity="1">
     <location byte="193723" file="src/cache.c" line="413"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="186"/>
       <node name="if-else"/>
       <node name="stmt" num="177"/>
       <node name="if-else"/>
       <node name="stmt" num="173"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="350" origin="prim-exp" p-complexity="6">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="crecp">
         <lval>
          <lhost>
           <var vid="6003" vname="crecp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="187"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="351" origin="prim-exp" p-complexity="0">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6003" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="187"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="352" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="187"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="353" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="187"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="354" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="187"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="355" origin="prim-lval" p-complexity="1">
     <location byte="193055" file="src/cache.c" line="391"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="6003" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="187"/>
       <node name="loop"/>
       <node name="stmt" num="166"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="356" origin="prim-exp" p-complexity="0">
     <location byte="193022" file="src/cache.c" line="390"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6012" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="188"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="357" origin="prim-op" p-complexity="2">
     <location byte="193022" file="src/cache.c" line="390"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6012" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="188"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="358" origin="prim-op" p-complexity="2">
     <location byte="193022" file="src/cache.c" line="390"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6012" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="188"/>
       <node name="loop"/>
       <node name="stmt" num="162"/>
       <node name="if-else"/>
       <node name="stmt" num="131"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="359" origin="prim-exp" p-complexity="0">
     <location byte="193756" file="src/cache.c" line="416"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="189"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="360" origin="prim-exp" p-complexity="0">
     <location byte="193756" file="src/cache.c" line="416"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="189"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="361" origin="prim-exp" p-complexity="0">
     <location byte="193756" file="src/cache.c" line="416"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="189"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="362" origin="prim-exp" p-complexity="0">
     <location byte="193756" file="src/cache.c" line="416"/>
     <predicate tag="global-mem">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="189"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="363" origin="prim-exp" p-complexity="0">
     <location byte="193756" file="src/cache.c" line="416"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="189"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="364" origin="prim-exp" p-complexity="0">
     <location byte="193756" file="src/cache.c" line="416"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="189"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:35">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
