<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function cfilename="src/cache.c" gvid="47" name="cache_add_dhcp_entry" num-ppo="0">
   <statistics api-assumptions="7" callers="1" ds-assumptions="0" field-assignments="5" global-assignments="1" global-assumptions="22" rv-assumptions="9"/>
   <parameters>
    <param formal-vid="6260" index="1" vname="host_name"/>
    <param formal-vid="6261" index="2" vname="prot"/>
    <param formal-vid="6262" index="3" vname="host_address"/>
    <param formal-vid="6263" index="4" vname="ttd"/>
   </parameters>
   <callers>
    <caller cfilename="src/lease.c" fname="lease_update_dns" gvid="165" updated="01/09/2017 21:38:38" updated-f="1483997918.4">
     <call-site byte="197952" file="src/lease.c" line="493"/>
     <args>
      <arg/>
      <arg etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </arg>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="291"/>
      <node name="if-then"/>
      <node name="stmt" num="290"/>
      <node name="if-then"/>
      <node name="stmt" num="289"/>
      <node name="loop"/>
      <node name="stmt" num="286"/>
      <node name="if-then"/>
      <node name="stmt" num="284"/>
      <node name="if-else"/>
      <node name="stmt" num="282"/>
      <node name="if-else"/>
      <node name="stmt" num="280"/>
      <node name="loop"/>
      <node name="stmt" num="276"/>
      <node name="if-then"/>
      <node name="stmt" num="274"/>
      <node name="if-else"/>
      <node name="stmt" num="272"/>
      <node name="if-then"/>
      <node name="stmt" num="271"/>
     </calling-context>
    </caller>
   </callers>
   <api-assumptions>
    <api-assumption nr="1">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="caste" xstr="caste (host_address:(void*))">
         <typ ttag="tptr">
          <attributes>
           <attr attrname="restrict"/>
          </attributes>
          <typ ttag="tvoid">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
         <exp etag="lval" xstr="host_address">
          <lval>
           <lhost>
            <var vid="6262" vname="host_address"/>
           </lhost>
          </lval>
         </exp>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="15"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="2">
     <predicate tag="not-null">
      <exp etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="12"/>
      <po id="93"/>
      <po id="313"/>
      <po id="345"/>
      <po id="349"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="3">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="host_address">
       <lval>
        <lhost>
         <var vid="6262" vname="host_address"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="16">
       <constant ctag="cint64" ikind="iint" intValue="16"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="346"/>
      <po id="347"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="4">
     <predicate tag="not-null">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="360"/>
      <po id="361"/>
      <po id="382"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="5">
     <predicate tag="global-mem">
      <exp etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="366"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="6">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="385"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="7">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="host_name">
       <lval>
        <lhost>
         <var vid="6260" vname="host_name"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="389"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
   </api-assumptions>
   <rv-assumptions>
    <rv-assumption nr="1">
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="66" ttag="tcomp"/>
      <exp byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
       <arg etag="sizeof" xstr="sizeof (struct 66)">
        <typ ckey="66" ttag="tcomp"/>
       </arg>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="269"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="2">
     <predicate tag="global-mem">
      <exp byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
       <arg etag="sizeof" xstr="sizeof (struct 66)">
        <typ ckey="66" ttag="tcomp"/>
       </arg>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="369"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="3">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
         <arg etag="sizeof" xstr="sizeof (struct 66)">
          <typ ckey="66" ttag="tcomp"/>
         </arg>
         <fn etag="lval" xstr="whine_malloc">
          <lval>
           <lhost>
            <var vid="5" vname="whine_malloc"/>
           </lhost>
          </lval>
         </fn>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="67" fname="bname"/>
        </offset>
        <field ckey="66" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="365"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="4">
     <predicate tag="global-mem">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 1277[sizeof (struct 66)]).name.bname">
       <lval>
        <lhost>
         <mem byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
          <arg etag="sizeof" xstr="sizeof (struct 66)">
           <typ ckey="66" ttag="tcomp"/>
          </arg>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="363"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="5">
     <predicate tag="not-null">
      <exp etag="lval" xstr="*(fn(lval (whine_malloc))@ 1277[sizeof (struct 66)]).name.bname">
       <lval>
        <lhost>
         <mem byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
          <arg etag="sizeof" xstr="sizeof (struct 66)">
           <typ ckey="66" ttag="tcomp"/>
          </arg>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="364"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="6">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 1277[sizeof (struct 66)]).name.bname">
       <lval>
        <lhost>
         <mem byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
          <arg etag="sizeof" xstr="sizeof (struct 66)">
           <typ ckey="66" ttag="tcomp"/>
          </arg>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="383"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="7">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
       <arg etag="sizeof" xstr="sizeof (struct 66)">
        <typ ckey="66" ttag="tcomp"/>
       </arg>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 etag="const" xstr="256">
       <constant ctag="cint64" ikind="iint" intValue="256"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="384"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="8">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
       <arg etag="sizeof" xstr="sizeof (struct 66)">
        <typ ckey="66" ttag="tcomp"/>
       </arg>
       <fn etag="lval" xstr="whine_malloc">
        <lval>
         <lhost>
          <var vid="5" vname="whine_malloc"/>
         </lhost>
        </lval>
       </fn>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="391"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
    <rv-assumption nr="9">
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="*(fn(lval (whine_malloc))@ 1277[sizeof (struct 66)]).name.bname">
       <lval>
        <lhost>
         <mem byte="211879" etag="fnapp" file="src/cache.c" line="1277" xstr="fn(whine_malloc)@ 1277[sizeof (struct 66)]">
          <arg etag="sizeof" xstr="sizeof (struct 66)">
           <typ ckey="66" ttag="tcomp"/>
          </arg>
          <fn etag="lval" xstr="whine_malloc">
           <lval>
            <lhost>
             <var vid="5" vname="whine_malloc"/>
            </lhost>
           </lval>
          </fn>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="67" fname="bname"/>
         </offset>
         <field ckey="66" fname="name"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1024">
       <constant ctag="cint64" ikind="iint" intValue="1024"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="390"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </rv-assumption>
   </rv-assumptions>
   <ds-assumptions/>
   <global-assumptions>
    <global-assumption nr="1">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (46:unsigned int)">
       <typ ikind="iuint" ttag="tint"/>
       <exp etag="const" xstr="46">
        <constant ctag="cint64" ikind="iint" intValue="46"/>
       </exp>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="18"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="2">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="addrbuff"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="27"/>
      <po id="80"/>
      <po id="193"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="3">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="317" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="6" fname="namebuff"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="168"/>
      <po id="206"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="4">
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="317" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="29"/>
      <po id="82"/>
      <po id="170"/>
      <po id="195"/>
      <po id="208"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="5">
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="16"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="6">
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="176"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="7">
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (host_address:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="host_address">
        <lval>
         <lhost>
          <var vid="6262" vname="host_address"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="19"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="8">
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="17"/>
      <po id="34"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="9">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="addrbuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="86"/>
      <po id="199"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="10">
     <predicate tag="not-null">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="106" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="262"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="11">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="317" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="6" fname="namebuff"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="212"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="12">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="317" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="30"/>
      <po id="83"/>
      <po id="171"/>
      <po id="196"/>
      <po id="209"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="13">
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="33"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="14">
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="154"/>
      <po id="175"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="15">
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="153"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="16">
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="174"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="17">
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (addrof (fail_crec-&gt;addr.addr):(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (fail_crec-&gt;addr.addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="fail_crec">
           <lval>
            <lhost>
             <var vid="6265" vname="fail_crec"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <offset>
           <field ckey="68" fname="addr"/>
          </offset>
          <field ckey="66" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="156"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="18">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dhcp_spare-&gt;next">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dhcp_spare">
          <lval>
           <lhost>
            <var vid="106" vname="dhcp_spare"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="66" fname="next"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="268"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="19">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;namebuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;namebuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="namebuff"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (1025:unsigned int)">
       <typ ikind="iuint" ttag="tint"/>
       <exp etag="const" xstr="1025">
        <constant ctag="cint64" ikind="iint" intValue="1025"/>
       </exp>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="155"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="20">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dhcp_spare">
         <lval>
          <lhost>
           <var vid="106" vname="dhcp_spare"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="66" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="260"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="21">
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;addrbuff:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;addrbuff">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="317" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="6" fname="addrbuff"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="35"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
    <global-assumption nr="22">
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dhcp_spare">
       <lval>
        <lhost>
         <var vid="106" vname="dhcp_spare"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="263"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </global-assumption>
   </global-assumptions>
   <global-assignments>
    <global-assignment nr="1">
     <lhs>
      <lhost>
       <var vid="106" vname="dhcp_spare"/>
      </lhost>
     </lhs>
     <rhs etag="lval" xstr="dhcp_spare-&gt;next">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dhcp_spare">
         <lval>
          <lhost>
           <var vid="106" vname="dhcp_spare"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="66" fname="next"/>
       </offset>
      </lval>
     </rhs>
     <loc byte="211837" file="src/cache.c" line="1275"/>
    </global-assignment>
   </global-assignments>
   <field-assignments>
    <field-assignment ckey="66" field="flags" nr="1">
     <rhs etag="caste" xstr="caste (((((((caste (flags:unsigned int) | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 4):unsigned int):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int:unsigned short)">
      <typ ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((((((caste (flags:unsigned int) | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 4):unsigned int):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int">
       <exp1 binop="bor" etag="binop" xstr="((((caste (flags:unsigned int) | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 4):unsigned int):unsigned int">
        <exp1 binop="bor" etag="binop" xstr="((caste (flags:unsigned int) | ((1 &lt;&lt; 1):unsigned int):unsigned int">
         <exp1 etag="caste" xstr="caste (flags:unsigned int)">
          <typ ikind="iuint" ttag="tint"/>
          <exp etag="lval" xstr="flags">
           <lval>
            <lhost>
             <var vid="6266" vname="flags"/>
            </lhost>
           </lval>
          </exp>
         </exp1>
         <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 1):unsigned int">
          <exp1 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iuint" intValue="1"/>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iint" intValue="1"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 4):unsigned int">
         <exp1 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iuint" intValue="1"/>
         </exp1>
         <exp2 etag="const" xstr="4">
          <constant ctag="cint64" ikind="iint" intValue="4"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 3):unsigned int">
        <exp1 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp1>
        <exp2 etag="const" xstr="3">
         <constant ctag="cint64" ikind="iint" intValue="3"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </rhs>
     <loc byte="211946" file="src/cache.c" line="1281"/>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="646"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="68" field="addr" nr="4">
     <rhs etag="lval" xstr="(*host_address)">
      <lval>
       <lhost>
        <mem etag="lval" xstr="host_address">
         <lval>
          <lhost>
           <var vid="6262" vname="host_address"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </rhs>
     <loc byte="212077" file="src/cache.c" line="1286"/>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="67" field="namep" nr="5">
     <rhs etag="lval" xstr="host_name">
      <lval>
       <lhost>
        <var vid="6260" vname="host_name"/>
       </lhost>
      </lval>
     </rhs>
     <loc byte="212116" file="src/cache.c" line="1287"/>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="650"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="66" field="ttd" nr="3">
     <rhs etag="lval" xstr="ttd">
      <lval>
       <lhost>
        <var vid="6263" vname="ttd"/>
       </lhost>
      </lval>
     </rhs>
     <loc byte="212054" file="src/cache.c" line="1285"/>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="649"/>
       <node name="if-else"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
    <field-assignment ckey="66" field="flags" nr="2">
     <rhs etag="caste" xstr="caste (((caste (crec-&gt;flags:unsigned int) | 1):unsigned int:unsigned short)">
      <typ ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((caste (crec-&gt;flags:unsigned int) | 1):unsigned int">
       <exp1 etag="caste" xstr="caste (crec-&gt;flags:unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp etag="lval" xstr="crec-&gt;flags">
         <lval>
          <lhost>
           <mem etag="lval" xstr="crec">
            <lval>
             <lhost>
              <var vid="6264" vname="crec"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="196" fname="flags"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iuint" intValue="1"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </rhs>
     <loc byte="212018" file="src/cache.c" line="1283"/>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="648"/>
       <node name="if-then"/>
       <node name="stmt" num="647"/>
       <node name="if-then"/>
       <node name="stmt" num="645"/>
      </cfg-context>
      <exp-context/>
     </context>
    </field-assignment>
   </field-assignments>
  </function>
  <header time="01/10/2017 06:52:36">
   <application file="src/cache.c" name="application"/>
  </header>
 </c-analysis>
