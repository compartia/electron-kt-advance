<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="hash_bucket">
   <statistics avg-context-complexity="3.66" avg-predicate-complexity="2.18" context-complexity="227" predicate-complexity="135" size="62"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="189037" file="src/cache.c" line="152"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="239" ttag="tcomp">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tfrom>
      <tto ikind="iuchar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="startof" xstr="startof (typestr)">
       <lval>
        <lhost>
         <var vid="5911" vname="typestr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="45"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="2" origin="prim-exp" p-complexity="0">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5951" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="3" origin="prim-exp" p-complexity="0">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5951" vname="name"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="4" origin="prim-op" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="5951" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="5" origin="prim-op" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="5951" vname="name"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="6" origin="prim-op" p-complexity="2">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="5951" vname="name"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="7" origin="prim-op" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="name">
       <lval>
        <lhost>
         <var vid="5951" vname="name"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="8" origin="prim-exp" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="cast">
      <tfrom ikind="iuchar" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="caste" xstr="caste ((*tmp):unsigned char)">
       <typ ikind="iuchar" ttag="tint"/>
       <exp etag="lval" xstr="(*tmp)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="tmp">
           <lval>
            <lhost>
             <var vid="5955" vname="tmp"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="9" origin="prim-exp" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="iuchar" ttag="tint"/>
      <exp etag="lval" xstr="(*tmp)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="tmp">
          <lval>
           <lhost>
            <var vid="5955" vname="tmp"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="10" origin="prim-exp" p-complexity="6">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp">
         <lval>
          <lhost>
           <var vid="5955" vname="tmp"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="11" origin="prim-exp" p-complexity="0">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5955" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="12" origin="prim-lval" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="5955" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="13" origin="prim-lval" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="5955" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="14" origin="prim-lval" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="5955" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="15" origin="prim-lval" p-complexity="1">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="5955" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="47"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="16" origin="prim-exp" p-complexity="0">
     <location byte="189102" file="src/cache.c" line="154"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5952" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="48"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="17" origin="prim-exp" p-complexity="0">
     <location byte="189152" file="src/cache.c" line="157"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5952" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="50"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="18" origin="prim-exp" p-complexity="0">
     <location byte="189152" file="src/cache.c" line="157"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5952" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="51"/>
       <node name="if-then"/>
       <node name="stmt" num="50"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="19" origin="prim-exp" p-complexity="0">
     <location byte="189179" file="src/cache.c" line="158"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5952" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="52"/>
       <node name="if-then"/>
       <node name="stmt" num="51"/>
       <node name="if-then"/>
       <node name="stmt" num="50"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="20" origin="prim-op" p-complexity="2">
     <location byte="189179" file="src/cache.c" line="158"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="c">
       <lval>
        <lhost>
         <var vid="5952" vname="c"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="32">
       <constant ctag="cint64" ikind="iuint" intValue="32"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="52"/>
       <node name="if-then"/>
       <node name="stmt" num="51"/>
       <node name="if-then"/>
       <node name="stmt" num="50"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="21" origin="prim-op" p-complexity="2">
     <location byte="189179" file="src/cache.c" line="158"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="c">
       <lval>
        <lhost>
         <var vid="5952" vname="c"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="32">
       <constant ctag="cint64" ikind="iuint" intValue="32"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="52"/>
       <node name="if-then"/>
       <node name="stmt" num="51"/>
       <node name="if-then"/>
       <node name="stmt" num="50"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="22" origin="prim-exp" p-complexity="0">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5953" vname="val"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="23" origin="prim-op" p-complexity="0">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="24" origin="prim-op" p-complexity="1">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="25" origin="prim-exp" p-complexity="0">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5953" vname="val"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="26" origin="prim-op" p-complexity="0">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="25">
       <constant ctag="cint64" ikind="iint" intValue="25"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="27" origin="prim-op" p-complexity="1">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="25">
       <constant ctag="cint64" ikind="iint" intValue="25"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="28" origin="prim-exp" p-complexity="1">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="cast">
      <tfrom ikind="iuchar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tfrom>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="*(((lval (mix_tab) +i ((((lval (val) + lval (c)):unsigned int &amp; 63):unsigned int):(unsigned char*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((mix_tab +i ((((val + c):unsigned int &amp; 63):unsigned int):(unsigned char*)">
          <exp1 etag="lval" xstr="mix_tab">
           <lval>
            <lhost>
             <var vid="5954" vname="mix_tab"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
           <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
            <exp1 etag="lval" xstr="val">
             <lval>
              <lhost>
               <var vid="5953" vname="val"/>
              </lhost>
             </lval>
            </exp1>
            <exp2 etag="lval" xstr="c">
             <lval>
              <lhost>
               <var vid="5952" vname="c"/>
              </lhost>
             </lval>
            </exp2>
            <typ ikind="iuint" ttag="tint"/>
           </exp1>
           <exp2 etag="const" xstr="63">
            <constant ctag="cint64" ikind="iuint" intValue="63"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp2>
          <typ ttag="tptr">
           <typ ikind="iuchar" ttag="tint">
            <attributes>
             <attr attrname="const"/>
            </attributes>
           </typ>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="29" origin="prim-exp" p-complexity="10">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((mix_tab +i ((((val + c):unsigned int &amp; 63):unsigned int):(unsigned char*)">
         <exp1 etag="lval" xstr="mix_tab">
          <lval>
           <lhost>
            <var vid="5954" vname="mix_tab"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
          <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
           <exp1 etag="lval" xstr="val">
            <lval>
             <lhost>
              <var vid="5953" vname="val"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="c">
            <lval>
             <lhost>
              <var vid="5952" vname="c"/>
             </lhost>
            </lval>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp1>
          <exp2 etag="const" xstr="63">
           <constant ctag="cint64" ikind="iuint" intValue="63"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="iuchar" ttag="tint">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="30" origin="prim-exp" p-complexity="0">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5954" vname="mix_tab"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="31" origin="prim-exp" p-complexity="0">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5953" vname="val"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="32" origin="prim-exp" p-complexity="0">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5952" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="33" origin="prim-op" p-complexity="3">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="val">
       <lval>
        <lhost>
         <var vid="5953" vname="val"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="c">
       <lval>
        <lhost>
         <var vid="5952" vname="c"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="34" origin="prim-op" p-complexity="3">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="val">
       <lval>
        <lhost>
         <var vid="5953" vname="val"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="c">
       <lval>
        <lhost>
         <var vid="5952" vname="c"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="35" origin="prim-op" p-complexity="1">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="mix_tab">
       <lval>
        <lhost>
         <var vid="5954" vname="mix_tab"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="36" origin="prim-op" p-complexity="1">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="mix_tab">
       <lval>
        <lhost>
         <var vid="5954" vname="mix_tab"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="37" origin="prim-op" p-complexity="5">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuchar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="mix_tab">
       <lval>
        <lhost>
         <var vid="5954" vname="mix_tab"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
       <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
        <exp1 etag="lval" xstr="val">
         <lval>
          <lhost>
           <var vid="5953" vname="val"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="c">
         <lval>
          <lhost>
           <var vid="5952" vname="c"/>
          </lhost>
         </lval>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 etag="const" xstr="63">
        <constant ctag="cint64" ikind="iuint" intValue="63"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="38" origin="prim-op" p-complexity="4">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuchar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="mix_tab">
       <lval>
        <lhost>
         <var vid="5954" vname="mix_tab"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
       <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
        <exp1 etag="lval" xstr="val">
         <lval>
          <lhost>
           <var vid="5953" vname="val"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="c">
         <lval>
          <lhost>
           <var vid="5952" vname="c"/>
          </lhost>
         </lval>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 etag="const" xstr="63">
        <constant ctag="cint64" ikind="iuint" intValue="63"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="39" origin="prim-lval" p-complexity="5">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((mix_tab +i ((((val + c):unsigned int &amp; 63):unsigned int):(unsigned char*)">
       <exp1 etag="lval" xstr="mix_tab">
        <lval>
         <lhost>
          <var vid="5954" vname="mix_tab"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
        <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="c">
          <lval>
           <lhost>
            <var vid="5952" vname="c"/>
           </lhost>
          </lval>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="const" xstr="63">
         <constant ctag="cint64" ikind="iuint" intValue="63"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuchar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="40" origin="prim-lval" p-complexity="5">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((mix_tab +i ((((val + c):unsigned int &amp; 63):unsigned int):(unsigned char*)">
       <exp1 etag="lval" xstr="mix_tab">
        <lval>
         <lhost>
          <var vid="5954" vname="mix_tab"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
        <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="c">
          <lval>
           <lhost>
            <var vid="5952" vname="c"/>
           </lhost>
          </lval>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="const" xstr="63">
         <constant ctag="cint64" ikind="iuint" intValue="63"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuchar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="41" origin="prim-lval" p-complexity="5">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((mix_tab +i ((((val + c):unsigned int &amp; 63):unsigned int):(unsigned char*)">
       <exp1 etag="lval" xstr="mix_tab">
        <lval>
         <lhost>
          <var vid="5954" vname="mix_tab"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
        <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="c">
          <lval>
           <lhost>
            <var vid="5952" vname="c"/>
           </lhost>
          </lval>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="const" xstr="63">
         <constant ctag="cint64" ikind="iuint" intValue="63"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuchar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuchar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="42" origin="prim-lval" p-complexity="5">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((mix_tab +i ((((val + c):unsigned int &amp; 63):unsigned int):(unsigned char*)">
       <exp1 etag="lval" xstr="mix_tab">
        <lval>
         <lhost>
          <var vid="5954" vname="mix_tab"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
        <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="c">
          <lval>
           <lhost>
            <var vid="5952" vname="c"/>
           </lhost>
          </lval>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="const" xstr="63">
         <constant ctag="cint64" ikind="iuint" intValue="63"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuchar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuchar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="43" origin="prim-exp" p-complexity="0">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5952" vname="c"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="44" origin="prim-op" p-complexity="7">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 binop="bor" etag="binop" xstr="((((val &lt;&lt; 7):unsigned int | ((val &gt;&gt; 25):unsigned int):unsigned int">
       <exp1 binop="shiftlt" etag="binop" xstr="((val &lt;&lt; 7):unsigned int">
        <exp1 etag="lval" xstr="val">
         <lval>
          <lhost>
           <var vid="5953" vname="val"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="7">
         <constant ctag="cint64" ikind="iint" intValue="7"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 binop="shiftrt" etag="binop" xstr="((val &gt;&gt; 25):unsigned int">
        <exp1 etag="lval" xstr="val">
         <lval>
          <lhost>
           <var vid="5953" vname="val"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="25">
         <constant ctag="cint64" ikind="iint" intValue="25"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp1>
      <exp2 binop="bxor" etag="binop" xstr="((caste (*(((lval (mix_tab) +i ((((lval (val) + lval (c)):unsigned int &amp; 63):unsigned int):(unsigned char*)):unsigned int) ^ c):unsigned int">
       <exp1 etag="caste" xstr="caste (*(((lval (mix_tab) +i ((((lval (val) + lval (c)):unsigned int &amp; 63):unsigned int):(unsigned char*)):unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp etag="lval" xstr="*(((lval (mix_tab) +i ((((lval (val) + lval (c)):unsigned int &amp; 63):unsigned int):(unsigned char*))">
         <lval>
          <lhost>
           <mem binop="indexpi" etag="binop" xstr="((mix_tab +i ((((val + c):unsigned int &amp; 63):unsigned int):(unsigned char*)">
            <exp1 etag="lval" xstr="mix_tab">
             <lval>
              <lhost>
               <var vid="5954" vname="mix_tab"/>
              </lhost>
             </lval>
            </exp1>
            <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
             <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
              <exp1 etag="lval" xstr="val">
               <lval>
                <lhost>
                 <var vid="5953" vname="val"/>
                </lhost>
               </lval>
              </exp1>
              <exp2 etag="lval" xstr="c">
               <lval>
                <lhost>
                 <var vid="5952" vname="c"/>
                </lhost>
               </lval>
              </exp2>
              <typ ikind="iuint" ttag="tint"/>
             </exp1>
             <exp2 etag="const" xstr="63">
              <constant ctag="cint64" ikind="iuint" intValue="63"/>
             </exp2>
             <typ ikind="iuint" ttag="tint"/>
            </exp2>
            <typ ttag="tptr">
             <typ ikind="iuchar" ttag="tint">
              <attributes>
               <attr attrname="const"/>
              </attributes>
             </typ>
            </typ>
           </mem>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="lval" xstr="c">
        <lval>
         <lhost>
          <var vid="5952" vname="c"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="45" origin="prim-op" p-complexity="7">
     <location byte="189201" file="src/cache.c" line="159"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 binop="bor" etag="binop" xstr="((((val &lt;&lt; 7):unsigned int | ((val &gt;&gt; 25):unsigned int):unsigned int">
       <exp1 binop="shiftlt" etag="binop" xstr="((val &lt;&lt; 7):unsigned int">
        <exp1 etag="lval" xstr="val">
         <lval>
          <lhost>
           <var vid="5953" vname="val"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="7">
         <constant ctag="cint64" ikind="iint" intValue="7"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 binop="shiftrt" etag="binop" xstr="((val &gt;&gt; 25):unsigned int">
        <exp1 etag="lval" xstr="val">
         <lval>
          <lhost>
           <var vid="5953" vname="val"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="25">
         <constant ctag="cint64" ikind="iint" intValue="25"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp1>
      <exp2 binop="bxor" etag="binop" xstr="((caste (*(((lval (mix_tab) +i ((((lval (val) + lval (c)):unsigned int &amp; 63):unsigned int):(unsigned char*)):unsigned int) ^ c):unsigned int">
       <exp1 etag="caste" xstr="caste (*(((lval (mix_tab) +i ((((lval (val) + lval (c)):unsigned int &amp; 63):unsigned int):(unsigned char*)):unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp etag="lval" xstr="*(((lval (mix_tab) +i ((((lval (val) + lval (c)):unsigned int &amp; 63):unsigned int):(unsigned char*))">
         <lval>
          <lhost>
           <mem binop="indexpi" etag="binop" xstr="((mix_tab +i ((((val + c):unsigned int &amp; 63):unsigned int):(unsigned char*)">
            <exp1 etag="lval" xstr="mix_tab">
             <lval>
              <lhost>
               <var vid="5954" vname="mix_tab"/>
              </lhost>
             </lval>
            </exp1>
            <exp2 binop="band" etag="binop" xstr="((((val + c):unsigned int &amp; 63):unsigned int">
             <exp1 binop="plusa" etag="binop" xstr="((val + c):unsigned int">
              <exp1 etag="lval" xstr="val">
               <lval>
                <lhost>
                 <var vid="5953" vname="val"/>
                </lhost>
               </lval>
              </exp1>
              <exp2 etag="lval" xstr="c">
               <lval>
                <lhost>
                 <var vid="5952" vname="c"/>
                </lhost>
               </lval>
              </exp2>
              <typ ikind="iuint" ttag="tint"/>
             </exp1>
             <exp2 etag="const" xstr="63">
              <constant ctag="cint64" ikind="iuint" intValue="63"/>
             </exp2>
             <typ ikind="iuint" ttag="tint"/>
            </exp2>
            <typ ttag="tptr">
             <typ ikind="iuchar" ttag="tint">
              <attributes>
               <attr attrname="const"/>
              </attributes>
             </typ>
            </typ>
           </mem>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="lval" xstr="c">
        <lval>
         <lhost>
          <var vid="5952" vname="c"/>
         </lhost>
        </lval>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="53"/>
       <node name="loop"/>
       <node name="stmt" num="46"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="46" origin="prim-exp" p-complexity="0">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="hash_table"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="47" origin="prim-exp" p-complexity="0">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5953" vname="val"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="48" origin="prim-exp" p-complexity="0">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5953" vname="val"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="49" origin="prim-op" p-complexity="0">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="16">
       <constant ctag="cint64" ikind="iint" intValue="16"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="50" origin="prim-op" p-complexity="1">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="16">
       <constant ctag="cint64" ikind="iint" intValue="16"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="51" origin="prim-exp" p-complexity="2">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp binop="minusa" etag="binop" xstr="((hash_size - 1):int">
       <exp1 etag="lval" xstr="hash_size">
        <lval>
         <lhost>
          <var vid="5910" vname="hash_size"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ikind="iint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="52" origin="prim-exp" p-complexity="0">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5910" vname="hash_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="53" origin="prim-op" p-complexity="2">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate op="minusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="hash_size">
       <lval>
        <lhost>
         <var vid="5910" vname="hash_size"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="54" origin="prim-op" p-complexity="2">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate op="minusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="hash_size">
       <lval>
        <lhost>
         <var vid="5910" vname="hash_size"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="55" origin="prim-op" p-complexity="1">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="56" origin="prim-op" p-complexity="1">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="57" origin="prim-op" p-complexity="7">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="band" etag="binop" xstr="((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int">
       <exp1 binop="bxor" etag="binop" xstr="((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int">
        <exp1 etag="lval" xstr="val">
         <lval>
          <lhost>
           <var vid="5953" vname="val"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 binop="shiftrt" etag="binop" xstr="((val &gt;&gt; 16):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="16">
          <constant ctag="cint64" ikind="iint" intValue="16"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 etag="caste" xstr="caste (((hash_size - 1):int:unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp binop="minusa" etag="binop" xstr="((hash_size - 1):int">
         <exp1 etag="lval" xstr="hash_size">
          <lval>
           <lhost>
            <var vid="5910" vname="hash_size"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ikind="iint" ttag="tint"/>
        </exp>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="58" origin="prim-op" p-complexity="6">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="band" etag="binop" xstr="((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int">
       <exp1 binop="bxor" etag="binop" xstr="((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int">
        <exp1 etag="lval" xstr="val">
         <lval>
          <lhost>
           <var vid="5953" vname="val"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 binop="shiftrt" etag="binop" xstr="((val &gt;&gt; 16):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="16">
          <constant ctag="cint64" ikind="iint" intValue="16"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 etag="caste" xstr="caste (((hash_size - 1):int:unsigned int)">
        <typ ikind="iuint" ttag="tint"/>
        <exp binop="minusa" etag="binop" xstr="((hash_size - 1):int">
         <exp1 etag="lval" xstr="hash_size">
          <lval>
           <lhost>
            <var vid="5910" vname="hash_size"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ikind="iint" ttag="tint"/>
        </exp>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="59" origin="prim-exp" p-complexity="7">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="valid-mem">
      <exp binop="pluspi" etag="binop" xstr="((hash_table +i ((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="band" etag="binop" xstr="((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int">
        <exp1 binop="bxor" etag="binop" xstr="((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 binop="shiftrt" etag="binop" xstr="((val &gt;&gt; 16):unsigned int">
          <exp1 etag="lval" xstr="val">
           <lval>
            <lhost>
             <var vid="5953" vname="val"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="16">
           <constant ctag="cint64" ikind="iint" intValue="16"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="caste" xstr="caste (((hash_size - 1):int:unsigned int)">
         <typ ikind="iuint" ttag="tint"/>
         <exp binop="minusa" etag="binop" xstr="((hash_size - 1):int">
          <exp1 etag="lval" xstr="hash_size">
           <lval>
            <lhost>
             <var vid="5910" vname="hash_size"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iint" intValue="1"/>
          </exp2>
          <typ ikind="iint" ttag="tint"/>
         </exp>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="60" origin="prim-exp" p-complexity="7">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="global-mem">
      <exp binop="pluspi" etag="binop" xstr="((hash_table +i ((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="band" etag="binop" xstr="((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int">
        <exp1 binop="bxor" etag="binop" xstr="((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 binop="shiftrt" etag="binop" xstr="((val &gt;&gt; 16):unsigned int">
          <exp1 etag="lval" xstr="val">
           <lval>
            <lhost>
             <var vid="5953" vname="val"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="16">
           <constant ctag="cint64" ikind="iint" intValue="16"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="caste" xstr="caste (((hash_size - 1):int:unsigned int)">
         <typ ikind="iuint" ttag="tint"/>
         <exp binop="minusa" etag="binop" xstr="((hash_size - 1):int">
          <exp1 etag="lval" xstr="hash_size">
           <lval>
            <lhost>
             <var vid="5910" vname="hash_size"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iint" intValue="1"/>
          </exp2>
          <typ ikind="iint" ttag="tint"/>
         </exp>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="61" origin="prim-exp" p-complexity="7">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="lower-bound">
      <exp binop="pluspi" etag="binop" xstr="((hash_table +i ((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="band" etag="binop" xstr="((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int">
        <exp1 binop="bxor" etag="binop" xstr="((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 binop="shiftrt" etag="binop" xstr="((val &gt;&gt; 16):unsigned int">
          <exp1 etag="lval" xstr="val">
           <lval>
            <lhost>
             <var vid="5953" vname="val"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="16">
           <constant ctag="cint64" ikind="iint" intValue="16"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="caste" xstr="caste (((hash_size - 1):int:unsigned int)">
         <typ ikind="iuint" ttag="tint"/>
         <exp binop="minusa" etag="binop" xstr="((hash_size - 1):int">
          <exp1 etag="lval" xstr="hash_size">
           <lval>
            <lhost>
             <var vid="5910" vname="hash_size"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iint" intValue="1"/>
          </exp2>
          <typ ikind="iint" ttag="tint"/>
         </exp>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="62" origin="prim-exp" p-complexity="7">
     <location byte="189285" file="src/cache.c" line="163"/>
     <predicate tag="upper-bound">
      <exp binop="pluspi" etag="binop" xstr="((hash_table +i ((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="band" etag="binop" xstr="((((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int &amp; caste (((hash_size - 1):int:unsigned int)):unsigned int">
        <exp1 binop="bxor" etag="binop" xstr="((val ^ ((val &gt;&gt; 16):unsigned int):unsigned int">
         <exp1 etag="lval" xstr="val">
          <lval>
           <lhost>
            <var vid="5953" vname="val"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 binop="shiftrt" etag="binop" xstr="((val &gt;&gt; 16):unsigned int">
          <exp1 etag="lval" xstr="val">
           <lval>
            <lhost>
             <var vid="5953" vname="val"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="16">
           <constant ctag="cint64" ikind="iint" intValue="16"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="caste" xstr="caste (((hash_size - 1):int:unsigned int)">
         <typ ikind="iuint" ttag="tint"/>
         <exp binop="minusa" etag="binop" xstr="((hash_size - 1):int">
          <exp1 etag="lval" xstr="hash_size">
           <lval>
            <lhost>
             <var vid="5910" vname="hash_size"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iint" intValue="1"/>
          </exp2>
          <typ ikind="iint" ttag="tint"/>
         </exp>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="54"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:35">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
