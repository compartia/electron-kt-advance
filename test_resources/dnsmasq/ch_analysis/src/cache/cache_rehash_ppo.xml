<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="rehash">
   <statistics avg-context-complexity="4.59" avg-predicate-complexity="1.11" context-complexity="381" predicate-complexity="92" size="83"/>
   <unconstrained-external-functions>
    <efn name="dnsmasq/safe_malloc" num="1"/>
    <efn name="dnsmasq/whine_malloc" num="1"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="5" id="1" origin="prim-exp" p-complexity="0">
     <location byte="188391" file="src/cache.c" line="121"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5943" vname="new_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="16"/>
       <node name="loop"/>
       <node name="stmt" num="15"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="2" origin="prim-exp" p-complexity="0">
     <location byte="188391" file="src/cache.c" line="121"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5937" vname="size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="16"/>
       <node name="loop"/>
       <node name="stmt" num="15"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="3" origin="prim-op" p-complexity="2">
     <location byte="188391" file="src/cache.c" line="121"/>
     <predicate op="div" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="size">
       <lval>
        <lhost>
         <var vid="5937" vname="size"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="16"/>
       <node name="loop"/>
       <node name="stmt" num="15"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="4" origin="prim-op" p-complexity="2">
     <location byte="188391" file="src/cache.c" line="121"/>
     <predicate op="div" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="size">
       <lval>
        <lhost>
         <var vid="5937" vname="size"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="16"/>
       <node name="loop"/>
       <node name="stmt" num="15"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="5" origin="prim-op" p-complexity="0">
     <location byte="188391" file="src/cache.c" line="121"/>
     <predicate tag="not-zero">
      <exp etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="16"/>
       <node name="loop"/>
       <node name="stmt" num="15"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="6" origin="prim-exp" p-complexity="0">
     <location byte="188391" file="src/cache.c" line="121"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5943" vname="new_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="18"/>
       <node name="loop"/>
       <node name="stmt" num="15"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="7" origin="prim-op" p-complexity="0">
     <location byte="188391" file="src/cache.c" line="121"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="18"/>
       <node name="loop"/>
       <node name="stmt" num="15"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="8" origin="prim-op" p-complexity="1">
     <location byte="188391" file="src/cache.c" line="121"/>
     <predicate size="iint" tag="width-overflow">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="18"/>
       <node name="loop"/>
       <node name="stmt" num="15"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="9" origin="prim-exp" p-complexity="0">
     <location byte="188462" file="src/cache.c" line="124"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="hash_table"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="10" origin="prim-exp" p-complexity="1">
     <location byte="188483" file="src/cache.c" line="125"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="lval" xstr="new_size">
       <lval>
        <lhost>
         <var vid="5943" vname="new_size"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="20"/>
       <node name="if-then"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="11" origin="prim-exp" p-complexity="0">
     <location byte="188483" file="src/cache.c" line="125"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5943" vname="new_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="20"/>
       <node name="if-then"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="12" origin="prim-op" p-complexity="2">
     <location byte="188483" file="src/cache.c" line="125"/>
     <predicate op="mult" size="iulong" tag="int-underflow">
      <exp1 etag="caste" xstr="caste (new_size:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="new_size">
        <lval>
         <lhost>
          <var vid="5943" vname="new_size"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof ((struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="20"/>
       <node name="if-then"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="13" origin="prim-op" p-complexity="2">
     <location byte="188483" file="src/cache.c" line="125"/>
     <predicate op="mult" size="iulong" tag="int-overflow">
      <exp1 etag="caste" xstr="caste (new_size:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="new_size">
        <lval>
         <lhost>
          <var vid="5943" vname="new_size"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof ((struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="20"/>
       <node name="if-then"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="14" origin="prim-exp" p-complexity="1">
     <location byte="188483" file="src/cache.c" line="125"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </tto>
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="5946" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="20"/>
       <node name="if-then"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="15" origin="prim-exp" p-complexity="0">
     <location byte="188483" file="src/cache.c" line="125"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5946" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="20"/>
       <node name="if-then"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="16" origin="prim-exp" p-complexity="0">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5943" vname="new_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="17" origin="prim-exp" p-complexity="0">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5910" vname="hash_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="18" origin="prim-exp" p-complexity="1">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="lval" xstr="new_size">
       <lval>
        <lhost>
         <var vid="5943" vname="new_size"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="23"/>
       <node name="if-else"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="19" origin="prim-exp" p-complexity="0">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5943" vname="new_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="23"/>
       <node name="if-else"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="20" origin="prim-op" p-complexity="2">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate op="mult" size="iulong" tag="int-underflow">
      <exp1 etag="caste" xstr="caste (new_size:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="new_size">
        <lval>
         <lhost>
          <var vid="5943" vname="new_size"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof ((struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="23"/>
       <node name="if-else"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="21" origin="prim-op" p-complexity="2">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate op="mult" size="iulong" tag="int-overflow">
      <exp1 etag="caste" xstr="caste (new_size:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="new_size">
        <lval>
         <lhost>
          <var vid="5943" vname="new_size"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof ((struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="23"/>
       <node name="if-else"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="22" origin="prim-exp" p-complexity="1">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </tto>
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="5948" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="23"/>
       <node name="if-else"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="23" origin="prim-exp" p-complexity="0">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5948" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="23"/>
       <node name="if-else"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="24" origin="prim-exp" p-complexity="0">
     <location byte="188543" file="src/cache.c" line="126"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5938" vname="new"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="24"/>
       <node name="if-else"/>
       <node name="stmt" num="21"/>
       <node name="if-else"/>
       <node name="stmt" num="19"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="25" origin="prim-exp" p-complexity="0">
     <location byte="188644" file="src/cache.c" line="129"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5942" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="28"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="26" origin="prim-exp" p-complexity="0">
     <location byte="188644" file="src/cache.c" line="129"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5943" vname="new_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="28"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="27" origin="prim-exp" p-complexity="0">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5938" vname="new"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="28" origin="prim-exp" p-complexity="0">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5942" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="29" origin="prim-op" p-complexity="1">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="5938" vname="new"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="30" origin="prim-op" p-complexity="1">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="5938" vname="new"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="31" origin="prim-op" p-complexity="3">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="5938" vname="new"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5942" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="32" origin="prim-op" p-complexity="2">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="5938" vname="new"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5942" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="33" origin="prim-lval" p-complexity="3">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((new +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="5938" vname="new"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="5942" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="34" origin="prim-lval" p-complexity="3">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((new +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="5938" vname="new"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="5942" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="35" origin="prim-lval" p-complexity="3">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((new +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="5938" vname="new"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="5942" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="36" origin="prim-lval" p-complexity="3">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((new +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="5938" vname="new"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="5942" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="37" origin="prim-exp" p-complexity="0">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="38" origin="prim-exp" p-complexity="0">
     <location byte="188678" file="src/cache.c" line="130"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="39" origin="prim-exp" p-complexity="0">
     <location byte="188644" file="src/cache.c" line="129"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5942" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="40" origin="prim-op" p-complexity="2">
     <location byte="188644" file="src/cache.c" line="129"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5942" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="41" origin="prim-op" p-complexity="2">
     <location byte="188644" file="src/cache.c" line="129"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5942" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="30"/>
       <node name="loop"/>
       <node name="stmt" num="27"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="42" origin="prim-exp" p-complexity="0">
     <location byte="188703" file="src/cache.c" line="132"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="hash_table"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="31"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="43" origin="prim-exp" p-complexity="0">
     <location byte="188723" file="src/cache.c" line="133"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5910" vname="hash_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="31"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="44" origin="prim-exp" p-complexity="0">
     <location byte="188747" file="src/cache.c" line="134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5938" vname="new"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="31"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="45" origin="prim-exp" p-complexity="1">
     <location byte="188747" file="src/cache.c" line="134"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="5938" vname="new"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="31"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="46" origin="prim-exp" p-complexity="1">
     <location byte="188747" file="src/cache.c" line="134"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="5938" vname="new"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="31"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="47" origin="prim-exp" p-complexity="1">
     <location byte="188747" file="src/cache.c" line="134"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="5938" vname="new"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="31"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="48" origin="prim-exp" p-complexity="0">
     <location byte="188767" file="src/cache.c" line="135"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5943" vname="new_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="31"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="49" origin="prim-exp" p-complexity="0">
     <location byte="188792" file="src/cache.c" line="137"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5939" vname="old"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="50" origin="prim-exp" p-complexity="0">
     <location byte="188813" file="src/cache.c" line="139"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5942" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="35"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="51" origin="prim-exp" p-complexity="0">
     <location byte="188813" file="src/cache.c" line="139"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5944" vname="old_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="35"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="52" origin="prim-exp" p-complexity="8">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((old +i i):((struct 196*)*)">
         <exp1 etag="lval" xstr="old">
          <lval>
           <lhost>
            <var vid="5939" vname="old"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="i">
          <lval>
           <lhost>
            <var vid="5942" vname="i"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ttag="tptr">
           <typ ckey="196" ttag="tcomp"/>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="53" origin="prim-exp" p-complexity="0">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5939" vname="old"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="54" origin="prim-exp" p-complexity="0">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5942" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="55" origin="prim-op" p-complexity="1">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="old">
       <lval>
        <lhost>
         <var vid="5939" vname="old"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="56" origin="prim-op" p-complexity="1">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="old">
       <lval>
        <lhost>
         <var vid="5939" vname="old"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="57" origin="prim-op" p-complexity="3">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="old">
       <lval>
        <lhost>
         <var vid="5939" vname="old"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5942" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="58" origin="prim-op" p-complexity="2">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="old">
       <lval>
        <lhost>
         <var vid="5939" vname="old"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5942" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="59" origin="prim-lval" p-complexity="3">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((old +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="5942" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="60" origin="prim-lval" p-complexity="3">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((old +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="5942" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="61" origin="prim-lval" p-complexity="3">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((old +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="5942" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="62" origin="prim-lval" p-complexity="3">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((old +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="5942" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="37"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="63" origin="prim-exp" p-complexity="0">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5940" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="39"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="64" origin="prim-exp" p-complexity="6">
     <location byte="188885" file="src/cache.c" line="142"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="p">
         <lval>
          <lhost>
           <var vid="5940" vname="p"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="65" origin="prim-exp" p-complexity="0">
     <location byte="188885" file="src/cache.c" line="142"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5940" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="66" origin="prim-lval" p-complexity="1">
     <location byte="188885" file="src/cache.c" line="142"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5940" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="67" origin="prim-lval" p-complexity="1">
     <location byte="188885" file="src/cache.c" line="142"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5940" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="68" origin="prim-lval" p-complexity="1">
     <location byte="188885" file="src/cache.c" line="142"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5940" vname="p"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="69" origin="prim-lval" p-complexity="1">
     <location byte="188885" file="src/cache.c" line="142"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5940" vname="p"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="70" origin="prim-exp" p-complexity="0">
     <location byte="188910" file="src/cache.c" line="143"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5940" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="71" origin="prim-exp" p-complexity="1">
     <location byte="188910" file="src/cache.c" line="143"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5940" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="72" origin="prim-exp" p-complexity="1">
     <location byte="188910" file="src/cache.c" line="143"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5940" vname="p"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="73" origin="prim-exp" p-complexity="1">
     <location byte="188910" file="src/cache.c" line="143"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5940" vname="p"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="74" origin="prim-exp" p-complexity="0">
     <location byte="188845" file="src/cache.c" line="140"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5941" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="41"/>
       <node name="loop"/>
       <node name="stmt" num="38"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="75" origin="prim-exp" p-complexity="0">
     <location byte="188813" file="src/cache.c" line="139"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5942" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="42"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="76" origin="prim-op" p-complexity="2">
     <location byte="188813" file="src/cache.c" line="139"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5942" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="42"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="77" origin="prim-op" p-complexity="2">
     <location byte="188813" file="src/cache.c" line="139"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5942" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="42"/>
       <node name="loop"/>
       <node name="stmt" num="34"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="free" id="78" name="allocation-base" origin="f-pre" p-complexity="1">
     <location byte="188936" file="src/cache.c" line="145"/>
     <predicate tag="allocation-base">
      <exp etag="caste" xstr="caste (old:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="ptr" nr="1" xstr="caste (old:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="allocation-base">
      <math>
       <apply>
        <allocation-base/>
        <ci>ptr</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="79" origin="prim-exp" p-complexity="1">
     <location byte="188936" file="src/cache.c" line="145"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </tfrom>
      <tto ttag="tvoid"/>
      <exp etag="lval" xstr="old">
       <lval>
        <lhost>
         <var vid="5939" vname="old"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="80" origin="prim-exp" p-complexity="0">
     <location byte="188936" file="src/cache.c" line="145"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5939" vname="old"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="81" origin="prim-exp" p-complexity="1">
     <location byte="188936" file="src/cache.c" line="145"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (old:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="82" origin="prim-exp" p-complexity="1">
     <location byte="188936" file="src/cache.c" line="145"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (old:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="83" origin="prim-exp" p-complexity="1">
     <location byte="188936" file="src/cache.c" line="145"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (old:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="old">
        <lval>
         <lhost>
          <var vid="5939" vname="old"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-then"/>
       <node name="stmt" num="32"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:35">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
