<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="cache_reload">
   <statistics avg-context-complexity="8.56" avg-predicate-complexity="1.63" context-complexity="5652" predicate-complexity="1077" size="660"/>
   <unconstrained-external-functions>
    <efn name="dnsmasq/expand_filelist" num="1"/>
    <efn name="dnsmasq/my_syslog" num="1"/>
    <efn name="dnsmasq/hostname_isequal" num="1"/>
    <efn name="dnsmasq/set_dynamic_inotify" num="1"/>
    <efn name="dnsmasq/whine_malloc" num="3"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="6">
     <location byte="205313" file="src/cache.c" line="1019"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="496"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="205313" file="src/cache.c" line="1019"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="496"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-lval" p-complexity="1">
     <location byte="205313" file="src/cache.c" line="1019"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="496"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-lval" p-complexity="1">
     <location byte="205313" file="src/cache.c" line="1019"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="496"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-lval" p-complexity="1">
     <location byte="205313" file="src/cache.c" line="1019"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="496"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-lval" p-complexity="1">
     <location byte="205313" file="src/cache.c" line="1019"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="496"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="0">
     <location byte="205501" file="src/cache.c" line="1029"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5906" vname="cache_live_freed"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="496"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="8" origin="prim-exp" p-complexity="0">
     <location byte="205543" file="src/cache.c" line="1031"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6215" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="498"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="9" origin="prim-exp" p-complexity="0">
     <location byte="205543" file="src/cache.c" line="1031"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5910" vname="hash_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="498"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="10" origin="prim-exp" p-complexity="8">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
         <exp1 etag="lval" xstr="hash_table">
          <lval>
           <lhost>
            <var vid="5902" vname="hash_table"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="i">
          <lval>
           <lhost>
            <var vid="6215" vname="i"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ttag="tptr">
           <typ ckey="196" ttag="tcomp"/>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="11" origin="prim-exp" p-complexity="0">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="hash_table"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="12" origin="prim-exp" p-complexity="0">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6215" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="13" origin="prim-op" p-complexity="1">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="14" origin="prim-op" p-complexity="1">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="15" origin="prim-op" p-complexity="3">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6215" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="16" origin="prim-op" p-complexity="2">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6215" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="17" origin="prim-lval" p-complexity="3">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6215" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="18" origin="prim-lval" p-complexity="3">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6215" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="19" origin="prim-lval" p-complexity="3">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6215" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="20" origin="prim-lval" p-complexity="3">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((hash_table +i i):((struct 196*)*)">
       <exp1 etag="lval" xstr="hash_table">
        <lval>
         <lhost>
          <var vid="5902" vname="hash_table"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="6215" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="21" origin="prim-exp" p-complexity="0">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="hash_table"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="22" origin="prim-exp" p-complexity="0">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6215" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="23" origin="prim-op" p-complexity="1">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="24" origin="prim-op" p-complexity="1">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="25" origin="prim-op" p-complexity="3">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6215" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="26" origin="prim-op" p-complexity="2">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
      <exp1 etag="lval" xstr="hash_table">
       <lval>
        <lhost>
         <var vid="5902" vname="hash_table"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6215" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="500"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="27" origin="prim-exp" p-complexity="0">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="502"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="28" origin="prim-exp" p-complexity="6">
     <location byte="205656" file="src/cache.c" line="1037"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6211" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="504"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="29" origin="prim-exp" p-complexity="0">
     <location byte="205656" file="src/cache.c" line="1037"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="504"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="30" origin="prim-lval" p-complexity="1">
     <location byte="205656" file="src/cache.c" line="1037"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="504"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="31" origin="prim-lval" p-complexity="1">
     <location byte="205656" file="src/cache.c" line="1037"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="504"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="32" origin="prim-lval" p-complexity="1">
     <location byte="205656" file="src/cache.c" line="1037"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="504"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="33" origin="prim-lval" p-complexity="1">
     <location byte="205656" file="src/cache.c" line="1037"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="504"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="34" origin="prim-exp" p-complexity="1">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="35" origin="prim-exp" p-complexity="6">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6211" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="36" origin="prim-exp" p-complexity="0">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="37" origin="prim-lval" p-complexity="1">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="38" origin="prim-lval" p-complexity="1">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="39" origin="prim-lval" p-complexity="1">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="40" origin="prim-lval" p-complexity="1">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="41" origin="prim-op" p-complexity="0">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="42" origin="prim-op" p-complexity="1">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="43" origin="prim-op" p-complexity="0">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="44" origin="prim-op" p-complexity="1">
     <location byte="205681" file="src/cache.c" line="1038"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="45" origin="prim-exp" p-complexity="0">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6212" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="46" origin="prim-lval" p-complexity="1">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6212" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="47" origin="prim-lval" p-complexity="1">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6212" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="48" origin="prim-lval" p-complexity="1">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6212" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="49" origin="prim-lval" p-complexity="1">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6212" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="50" origin="prim-exp" p-complexity="6">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6211" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="51" origin="prim-exp" p-complexity="0">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="52" origin="prim-lval" p-complexity="1">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="53" origin="prim-lval" p-complexity="1">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="54" origin="prim-lval" p-complexity="1">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="55" origin="prim-lval" p-complexity="1">
     <location byte="205732" file="src/cache.c" line="1040"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" fname="free" id="56" name="allocation-base" origin="f-pre" p-complexity="1">
     <location byte="205761" file="src/cache.c" line="1041"/>
     <predicate tag="allocation-base">
      <exp etag="caste" xstr="caste (cache___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="cache___0">
        <lval>
         <lhost>
          <var vid="6211" vname="cache___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="ptr" nr="1" xstr="caste (cache___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="cache___0">
        <lval>
         <lhost>
          <var vid="6211" vname="cache___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="allocation-base">
      <math>
       <apply>
        <allocation-base/>
        <ci>ptr</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="57" origin="prim-exp" p-complexity="1">
     <location byte="205761" file="src/cache.c" line="1041"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="196" ttag="tcomp"/>
      <tto ttag="tvoid"/>
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="58" origin="prim-exp" p-complexity="0">
     <location byte="205761" file="src/cache.c" line="1041"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="59" origin="prim-exp" p-complexity="1">
     <location byte="205761" file="src/cache.c" line="1041"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (cache___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="cache___0">
        <lval>
         <lhost>
          <var vid="6211" vname="cache___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="60" origin="prim-exp" p-complexity="1">
     <location byte="205761" file="src/cache.c" line="1041"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (cache___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="cache___0">
        <lval>
         <lhost>
          <var vid="6211" vname="cache___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="61" origin="prim-exp" p-complexity="1">
     <location byte="205761" file="src/cache.c" line="1041"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (cache___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="cache___0">
        <lval>
         <lhost>
          <var vid="6211" vname="cache___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="506"/>
       <node name="if-then"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="62" origin="prim-exp" p-complexity="1">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="63" origin="prim-exp" p-complexity="6">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6211" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="64" origin="prim-exp" p-complexity="0">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="65" origin="prim-lval" p-complexity="1">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="66" origin="prim-lval" p-complexity="1">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="67" origin="prim-lval" p-complexity="1">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="68" origin="prim-lval" p-complexity="1">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="69" origin="prim-op" p-complexity="0">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="70" origin="prim-op" p-complexity="1">
     <location byte="205785" file="src/cache.c" line="1043"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="71" origin="prim-exp" p-complexity="0">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6212" vname="up"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="72" origin="prim-lval" p-complexity="1">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6212" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="73" origin="prim-lval" p-complexity="1">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6212" vname="up"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="74" origin="prim-lval" p-complexity="1">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6212" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="75" origin="prim-lval" p-complexity="1">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="up">
       <lval>
        <lhost>
         <var vid="6212" vname="up"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="76" origin="prim-exp" p-complexity="6">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6211" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="hash_next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="77" origin="prim-exp" p-complexity="0">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="78" origin="prim-lval" p-complexity="1">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="79" origin="prim-lval" p-complexity="1">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="80" origin="prim-lval" p-complexity="1">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="81" origin="prim-lval" p-complexity="1">
     <location byte="205826" file="src/cache.c" line="1045"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="508"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="82" origin="prim-exp" p-complexity="1">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate tag="cast">
      <tfrom ikind="iushort" ttag="tint"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="cache___0-&gt;flags">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="196" fname="flags"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="83" origin="prim-exp" p-complexity="6">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6211" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="196" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="84" origin="prim-exp" p-complexity="0">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="85" origin="prim-lval" p-complexity="1">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="86" origin="prim-lval" p-complexity="1">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="87" origin="prim-lval" p-complexity="1">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="88" origin="prim-lval" p-complexity="1">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="89" origin="prim-op" p-complexity="0">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="9">
       <constant ctag="cint64" ikind="iint" intValue="9"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="90" origin="prim-op" p-complexity="1">
     <location byte="205855" file="src/cache.c" line="1046"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="9">
       <constant ctag="cint64" ikind="iint" intValue="9"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="91" origin="prim-exp" p-complexity="6">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6211" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="202" fname="bname"/>
        </offset>
        <field ckey="196" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="92" origin="prim-exp" p-complexity="0">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="93" origin="prim-lval" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="94" origin="prim-lval" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="95" origin="prim-lval" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="96" origin="prim-lval" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="97" origin="prim-lval" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0-&gt;name.bname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="202" fname="bname"/>
         </offset>
         <field ckey="196" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="98" origin="prim-lval" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0-&gt;name.bname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="202" fname="bname"/>
         </offset>
         <field ckey="196" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="99" origin="prim-lval" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0-&gt;name.bname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="202" fname="bname"/>
         </offset>
         <field ckey="196" fname="name"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="194" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="100" origin="prim-lval" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0-&gt;name.bname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="202" fname="bname"/>
         </offset>
         <field ckey="196" fname="name"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="194" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="101" origin="prim-exp" p-complexity="0">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5908" vname="big_free"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="102" origin="prim-exp" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="big_free">
       <lval>
        <lhost>
         <var vid="5908" vname="big_free"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="194" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="103" origin="prim-exp" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="big_free">
       <lval>
        <lhost>
         <var vid="5908" vname="big_free"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="194" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="104" origin="prim-exp" p-complexity="1">
     <location byte="205894" file="src/cache.c" line="1048"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="big_free">
       <lval>
        <lhost>
         <var vid="5908" vname="big_free"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="105" origin="prim-exp" p-complexity="6">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="cache___0">
         <lval>
          <lhost>
           <var vid="6211" vname="cache___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="202" fname="bname"/>
        </offset>
        <field ckey="196" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="106" origin="prim-exp" p-complexity="0">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="107" origin="prim-lval" p-complexity="1">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="108" origin="prim-lval" p-complexity="1">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="109" origin="prim-lval" p-complexity="1">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="110" origin="prim-lval" p-complexity="1">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="111" origin="prim-exp" p-complexity="1">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0-&gt;name.bname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="202" fname="bname"/>
         </offset>
         <field ckey="196" fname="name"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="194" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="112" origin="prim-exp" p-complexity="1">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0-&gt;name.bname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="202" fname="bname"/>
         </offset>
         <field ckey="196" fname="name"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="194" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="113" origin="prim-exp" p-complexity="1">
     <location byte="205932" file="src/cache.c" line="1049"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0-&gt;name.bname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="cache___0">
          <lval>
           <lhost>
            <var vid="6211" vname="cache___0"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="202" fname="bname"/>
         </offset>
         <field ckey="196" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="510"/>
       <node name="if-then"/>
       <node name="stmt" num="509"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="114" origin="prim-exp" p-complexity="0">
     <location byte="205976" file="src/cache.c" line="1051"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="511"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="115" origin="prim-lval" p-complexity="1">
     <location byte="205976" file="src/cache.c" line="1051"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="511"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="116" origin="prim-lval" p-complexity="1">
     <location byte="205976" file="src/cache.c" line="1051"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="511"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="117" origin="prim-lval" p-complexity="1">
     <location byte="205976" file="src/cache.c" line="1051"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="511"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="118" origin="prim-lval" p-complexity="1">
     <location byte="205976" file="src/cache.c" line="1051"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="511"/>
       <node name="if-then"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="119" origin="prim-exp" p-complexity="0">
     <location byte="206008" file="src/cache.c" line="1054"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="512"/>
       <node name="if-else"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="120" origin="prim-lval" p-complexity="1">
     <location byte="206008" file="src/cache.c" line="1054"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="512"/>
       <node name="if-else"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="121" origin="prim-lval" p-complexity="1">
     <location byte="206008" file="src/cache.c" line="1054"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="512"/>
       <node name="if-else"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="122" origin="prim-lval" p-complexity="1">
     <location byte="206008" file="src/cache.c" line="1054"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="512"/>
       <node name="if-else"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="123" origin="prim-lval" p-complexity="1">
     <location byte="206008" file="src/cache.c" line="1054"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="512"/>
       <node name="if-else"/>
       <node name="stmt" num="507"/>
       <node name="if-else"/>
       <node name="stmt" num="505"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="124" origin="prim-exp" p-complexity="0">
     <location byte="205575" file="src/cache.c" line="1032"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6213" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="513"/>
       <node name="loop"/>
       <node name="stmt" num="501"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="125" origin="prim-exp" p-complexity="0">
     <location byte="205543" file="src/cache.c" line="1031"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6215" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="514"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="126" origin="prim-op" p-complexity="2">
     <location byte="205543" file="src/cache.c" line="1031"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6215" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="514"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="127" origin="prim-op" p-complexity="2">
     <location byte="205543" file="src/cache.c" line="1031"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="6215" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="514"/>
       <node name="loop"/>
       <node name="stmt" num="497"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="128" origin="prim-exp" p-complexity="6">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cnames"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="515"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="129" origin="prim-exp" p-complexity="0">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="515"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="130" origin="prim-lval" p-complexity="1">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="515"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="131" origin="prim-lval" p-complexity="1">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="515"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="132" origin="prim-lval" p-complexity="1">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="515"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="133" origin="prim-lval" p-complexity="1">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="515"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="134" origin="prim-exp" p-complexity="0">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6220" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="517"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="135" origin="prim-exp" p-complexity="6">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="int_names"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="519"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="136" origin="prim-exp" p-complexity="0">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="519"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="137" origin="prim-lval" p-complexity="1">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="519"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="138" origin="prim-lval" p-complexity="1">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="519"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="139" origin="prim-lval" p-complexity="1">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="519"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="140" origin="prim-lval" p-complexity="1">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="519"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="141" origin="prim-exp" p-complexity="0">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6221" vname="intr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="521"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="142" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="iint" ttag="tint"/>
      <exp etag="lval" xstr="*(((lval (*(lval (a)).alias) +i 1):(char*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
          <exp1 etag="lval" xstr="a-&gt;alias">
           <lval>
            <lhost>
             <mem etag="lval" xstr="a">
              <lval>
               <lhost>
                <var vid="6220" vname="a"/>
               </lhost>
              </lval>
             </mem>
            </lhost>
            <offset>
             <field ckey="186" fname="alias"/>
            </offset>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iint" intValue="1"/>
          </exp2>
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="143" origin="prim-exp" p-complexity="7">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
         <exp1 etag="lval" xstr="a-&gt;alias">
          <lval>
           <lhost>
            <mem etag="lval" xstr="a">
             <lval>
              <lhost>
               <var vid="6220" vname="a"/>
              </lhost>
             </lval>
            </mem>
           </lhost>
           <offset>
            <field ckey="186" fname="alias"/>
           </offset>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="ichar" ttag="tint"/>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="144" origin="prim-exp" p-complexity="6">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6220" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="alias"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="145" origin="prim-exp" p-complexity="0">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6220" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="146" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="147" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="148" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="149" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="150" origin="prim-op" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="151" origin="prim-op" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="152" origin="prim-op" p-complexity="2">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="153" origin="prim-op" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="154" origin="prim-lval" p-complexity="2">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
       <exp1 etag="lval" xstr="a-&gt;alias">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6220" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="alias"/>
         </offset>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="155" origin="prim-lval" p-complexity="2">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
       <exp1 etag="lval" xstr="a-&gt;alias">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6220" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="alias"/>
         </offset>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="156" origin="prim-lval" p-complexity="2">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
       <exp1 etag="lval" xstr="a-&gt;alias">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6220" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="alias"/>
         </offset>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="157" origin="prim-lval" p-complexity="2">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((a-&gt;alias +i 1):(char*)">
       <exp1 etag="lval" xstr="a-&gt;alias">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6220" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="alias"/>
         </offset>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="158" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="a-&gt;target">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="target"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="159" origin="prim-exp" p-complexity="6">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6220" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="target"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="160" origin="prim-exp" p-complexity="0">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6220" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="161" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="162" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="163" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="164" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="165" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (a-&gt;target:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="a-&gt;target">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6220" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="target"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="166" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (a-&gt;target:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="a-&gt;target">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6220" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="target"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="167" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (a-&gt;target:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="a-&gt;target">
        <lval>
         <lhost>
          <mem etag="lval" xstr="a">
           <lval>
            <lhost>
             <var vid="6220" vname="a"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="186" fname="target"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="168" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="intr-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="intr">
          <lval>
           <lhost>
            <var vid="6221" vname="intr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="193" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="169" origin="prim-exp" p-complexity="6">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="intr">
         <lval>
          <lhost>
           <var vid="6221" vname="intr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="193" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="170" origin="prim-exp" p-complexity="0">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6221" vname="intr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="171" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="172" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="173" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="193" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="174" origin="prim-lval" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="193" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="175" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (intr-&gt;name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="intr-&gt;name">
        <lval>
         <lhost>
          <mem etag="lval" xstr="intr">
           <lval>
            <lhost>
             <var vid="6221" vname="intr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="193" fname="name"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="176" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (intr-&gt;name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="intr-&gt;name">
        <lval>
         <lhost>
          <mem etag="lval" xstr="intr">
           <lval>
            <lhost>
             <var vid="6221" vname="intr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="193" fname="name"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="177" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (intr-&gt;name:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="intr-&gt;name">
        <lval>
         <lhost>
          <mem etag="lval" xstr="intr">
           <lval>
            <lhost>
             <var vid="6221" vname="intr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="193" fname="name"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="524"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="178" origin="prim-exp" p-complexity="0">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6223" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="179" origin="prim-exp" p-complexity="1">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6225" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="526"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="180" origin="prim-exp" p-complexity="0">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6225" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="526"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="181" origin="prim-exp" p-complexity="0">
     <location byte="206167" file="src/cache.c" line="1060"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="182" origin="prim-exp" p-complexity="0">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="183" origin="prim-lval" p-complexity="1">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="184" origin="prim-lval" p-complexity="1">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="185" origin="prim-lval" p-complexity="1">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="186" origin="prim-lval" p-complexity="1">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="187" origin="prim-exp" p-complexity="4">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((((((((((1 &lt;&lt; 3):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 11):unsigned int):unsigned int | 1):unsigned int | ((1 &lt;&lt; 13):unsigned int):unsigned int">
       <exp1 binop="bor" etag="binop" xstr="((((((((1 &lt;&lt; 3):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 11):unsigned int):unsigned int | 1):unsigned int">
        <exp1 binop="bor" etag="binop" xstr="((((((1 &lt;&lt; 3):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 11):unsigned int):unsigned int">
         <exp1 binop="bor" etag="binop" xstr="((((1 &lt;&lt; 3):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int">
          <exp1 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 3):unsigned int">
           <exp1 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iuint" intValue="1"/>
           </exp1>
           <exp2 etag="const" xstr="3">
            <constant ctag="cint64" ikind="iint" intValue="3"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp1>
          <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 1):unsigned int">
           <exp1 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iuint" intValue="1"/>
           </exp1>
           <exp2 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iint" intValue="1"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp1>
         <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 11):unsigned int">
          <exp1 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iuint" intValue="1"/>
          </exp1>
          <exp2 etag="const" xstr="11">
           <constant ctag="cint64" ikind="iint" intValue="11"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 13):unsigned int">
        <exp1 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp1>
        <exp2 etag="const" xstr="13">
         <constant ctag="cint64" ikind="iint" intValue="13"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="188" origin="prim-op" p-complexity="0">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="189" origin="prim-op" p-complexity="1">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="190" origin="prim-op" p-complexity="0">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="191" origin="prim-op" p-complexity="1">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="192" origin="prim-op" p-complexity="0">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="193" origin="prim-op" p-complexity="1">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="11">
       <constant ctag="cint64" ikind="iint" intValue="11"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="194" origin="prim-op" p-complexity="0">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="195" origin="prim-op" p-complexity="1">
     <location byte="206295" file="src/cache.c" line="1064"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="196" origin="prim-exp" p-complexity="0">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="197" origin="prim-lval" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="198" origin="prim-lval" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="199" origin="prim-lval" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="200" origin="prim-lval" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="201" origin="prim-exp" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="lval" xstr="a-&gt;ttl">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="ttl"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="202" origin="prim-exp" p-complexity="6">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6220" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="ttl"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="203" origin="prim-exp" p-complexity="0">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6220" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="204" origin="prim-lval" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="205" origin="prim-lval" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="206" origin="prim-lval" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="207" origin="prim-lval" p-complexity="1">
     <location byte="206364" file="src/cache.c" line="1065"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="208" origin="prim-exp" p-complexity="0">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="209" origin="prim-lval" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="210" origin="prim-lval" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="211" origin="prim-lval" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="212" origin="prim-lval" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="213" origin="prim-exp" p-complexity="6">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6220" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="alias"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="214" origin="prim-exp" p-complexity="0">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6220" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="215" origin="prim-lval" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="216" origin="prim-lval" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="217" origin="prim-lval" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="218" origin="prim-lval" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="219" origin="prim-exp" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="220" origin="prim-exp" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="221" origin="prim-exp" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="222" origin="prim-exp" p-complexity="1">
     <location byte="206388" file="src/cache.c" line="1066"/>
     <predicate tag="null-terminated">
      <exp etag="lval" xstr="a-&gt;alias">
       <lval>
        <lhost>
         <mem etag="lval" xstr="a">
          <lval>
           <lhost>
            <var vid="6220" vname="a"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="186" fname="alias"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="223" origin="prim-exp" p-complexity="0">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="224" origin="prim-lval" p-complexity="1">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="225" origin="prim-lval" p-complexity="1">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="226" origin="prim-lval" p-complexity="1">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="227" origin="prim-lval" p-complexity="1">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="228" origin="prim-exp" p-complexity="0">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6221" vname="intr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="229" origin="prim-exp" p-complexity="1">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="193" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="230" origin="prim-exp" p-complexity="1">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="193" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="231" origin="prim-exp" p-complexity="1">
     <location byte="206421" file="src/cache.c" line="1067"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="232" origin="prim-exp" p-complexity="0">
     <location byte="206466" file="src/cache.c" line="1068"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="233" origin="prim-lval" p-complexity="1">
     <location byte="206466" file="src/cache.c" line="1068"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="234" origin="prim-lval" p-complexity="1">
     <location byte="206466" file="src/cache.c" line="1068"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="235" origin="prim-lval" p-complexity="1">
     <location byte="206466" file="src/cache.c" line="1068"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="236" origin="prim-lval" p-complexity="1">
     <location byte="206466" file="src/cache.c" line="1068"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="237" origin="prim-exp" p-complexity="0">
     <location byte="206496" file="src/cache.c" line="1069"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="238" origin="prim-lval" p-complexity="1">
     <location byte="206496" file="src/cache.c" line="1069"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="239" origin="prim-lval" p-complexity="1">
     <location byte="206496" file="src/cache.c" line="1069"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="240" origin="prim-lval" p-complexity="1">
     <location byte="206496" file="src/cache.c" line="1069"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="241" origin="prim-lval" p-complexity="1">
     <location byte="206496" file="src/cache.c" line="1069"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="5"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="242" origin="prim-exp" p-complexity="0">
     <location byte="206524" file="src/cache.c" line="1070"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="6"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="243" origin="prim-exp" p-complexity="1">
     <location byte="206524" file="src/cache.c" line="1070"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="6"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="244" origin="prim-exp" p-complexity="1">
     <location byte="206524" file="src/cache.c" line="1070"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="6"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="245" origin="prim-exp" p-complexity="1">
     <location byte="206524" file="src/cache.c" line="1070"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="6"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="246" origin="prim-exp" p-complexity="0">
     <location byte="206546" file="src/cache.c" line="1071"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="7"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="247" origin="prim-exp" p-complexity="1">
     <location byte="206546" file="src/cache.c" line="1071"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="7"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="248" origin="prim-exp" p-complexity="1">
     <location byte="206546" file="src/cache.c" line="1071"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="7"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="249" origin="prim-exp" p-complexity="1">
     <location byte="206546" file="src/cache.c" line="1071"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="7"/>
       <node name="stmt" num="528"/>
       <node name="if-then"/>
       <node name="stmt" num="527"/>
       <node name="if-then"/>
       <node name="stmt" num="525"/>
       <node name="if-then"/>
       <node name="stmt" num="523"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="250" origin="prim-exp" p-complexity="6">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="intr">
         <lval>
          <lhost>
           <var vid="6221" vname="intr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="193" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="529"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="251" origin="prim-exp" p-complexity="0">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6221" vname="intr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="529"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="252" origin="prim-lval" p-complexity="1">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="529"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="253" origin="prim-lval" p-complexity="1">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="529"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="254" origin="prim-lval" p-complexity="1">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="193" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="529"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="255" origin="prim-lval" p-complexity="1">
     <location byte="206097" file="src/cache.c" line="1059"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="intr">
       <lval>
        <lhost>
         <var vid="6221" vname="intr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="193" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="529"/>
       <node name="loop"/>
       <node name="stmt" num="520"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="256" origin="prim-exp" p-complexity="6">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="a">
         <lval>
          <lhost>
           <var vid="6220" vname="a"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="186" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="530"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="257" origin="prim-exp" p-complexity="0">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6220" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="530"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="258" origin="prim-lval" p-complexity="1">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="530"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="259" origin="prim-lval" p-complexity="1">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="530"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="260" origin="prim-lval" p-complexity="1">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="530"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="261" origin="prim-lval" p-complexity="1">
     <location byte="206044" file="src/cache.c" line="1058"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="6220" vname="a"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="186" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="530"/>
       <node name="loop"/>
       <node name="stmt" num="516"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="memset" id="262" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="len" nr="3" xstr="caste (dnsmasq_daemon-&gt;packet_buff_sz:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet_buff_sz"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s" nr="1" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <ci>len</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="memset" id="263" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="len" nr="3" xstr="caste (dnsmasq_daemon-&gt;packet_buff_sz:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet_buff_sz"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s" nr="1" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <ci>len</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" fname="memset" id="264" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid"/>
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet_buff_sz:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet_buff_sz"/>
         </offset>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="len" nr="3" xstr="caste (dnsmasq_daemon-&gt;packet_buff_sz:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet_buff_sz"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s" nr="1" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s</ci>
        <apply>
         <index-size/>
         <ci>len</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="265" origin="prim-exp" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ttag="tvoid"/>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="packet"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="266" origin="prim-exp" p-complexity="6">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="packet"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="267" origin="prim-exp" p-complexity="0">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="268" origin="prim-lval" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="269" origin="prim-lval" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="270" origin="prim-lval" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="271" origin="prim-lval" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="272" origin="prim-exp" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="273" origin="prim-exp" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="274" origin="prim-exp" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="275" origin="prim-exp" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="packet_buff_sz"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="276" origin="prim-exp" p-complexity="6">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="packet_buff_sz"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="277" origin="prim-exp" p-complexity="0">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="278" origin="prim-lval" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="279" origin="prim-lval" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="280" origin="prim-lval" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="281" origin="prim-lval" p-complexity="1">
     <location byte="206592" file="src/cache.c" line="1092"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="282" origin="prim-exp" p-complexity="2">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate from="iulong" tag="unsigned-to-signed-cast" to="iint">
      <exp binop="div" etag="binop" xstr="((caste (dnsmasq_daemon-&gt;packet_buff_sz:unsigned long) / sizeof ((struct 196*))):unsigned long">
       <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet_buff_sz:unsigned long)">
        <typ ikind="iulong" ttag="tint"/>
        <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
         <lval>
          <lhost>
           <mem etag="lval" xstr="dnsmasq_daemon">
            <lval>
             <lhost>
              <var vid="4341" vname="dnsmasq_daemon"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="238" fname="packet_buff_sz"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="sizeof" xstr="sizeof ((struct 196*))">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </exp2>
       <typ ikind="iulong" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="283" origin="prim-exp" p-complexity="1">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="packet_buff_sz"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="284" origin="prim-exp" p-complexity="6">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="packet_buff_sz"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="285" origin="prim-exp" p-complexity="0">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="286" origin="prim-lval" p-complexity="1">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="287" origin="prim-lval" p-complexity="1">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="288" origin="prim-lval" p-complexity="1">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="289" origin="prim-lval" p-complexity="1">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="290" origin="prim-op" p-complexity="2">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate op="div" size="iulong" tag="int-underflow">
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet_buff_sz:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet_buff_sz"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof ((struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="291" origin="prim-op" p-complexity="2">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate op="div" size="iulong" tag="int-overflow">
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet_buff_sz:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet_buff_sz">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet_buff_sz"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof ((struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="292" origin="prim-op" p-complexity="0">
     <location byte="206661" file="src/cache.c" line="1093"/>
     <predicate tag="not-zero">
      <exp etag="sizeof" xstr="sizeof ((struct 196*))">
       <typ ttag="tptr">
        <typ ckey="196" ttag="tcomp"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="293" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="294" origin="prim-lval" p-complexity="1">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="295" origin="prim-lval" p-complexity="1">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="296" origin="prim-lval" p-complexity="1">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="297" origin="prim-lval" p-complexity="1">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="298" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="206" ttag="tcomp"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="299" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="300" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 206*))">
       <typ ttag="tptr">
        <typ ckey="206" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="301" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 206*))">
       <typ ttag="tptr">
        <typ ckey="206" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="302" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 206*))">
       <typ ttag="tptr">
        <typ ckey="206" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="303" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 206*))">
       <typ ttag="tptr">
        <typ ckey="206" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="304" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 206*))">
       <typ ttag="tptr">
        <typ ckey="206" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="206" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="305" origin="prim-exp" p-complexity="0">
     <location byte="206732" file="src/cache.c" line="1095"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 206*))">
       <typ ttag="tptr">
        <typ ckey="206" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="306" origin="prim-exp" p-complexity="6">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="host_records"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="307" origin="prim-exp" p-complexity="0">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="308" origin="prim-lval" p-complexity="1">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="309" origin="prim-lval" p-complexity="1">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="310" origin="prim-lval" p-complexity="1">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="311" origin="prim-lval" p-complexity="1">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="531"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="312" origin="prim-exp" p-complexity="0">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="533"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="313" origin="prim-exp" p-complexity="6">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="hr">
         <lval>
          <lhost>
           <var vid="6218" vname="hr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="191" fname="names"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="535"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="314" origin="prim-exp" p-complexity="0">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="535"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="315" origin="prim-lval" p-complexity="1">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="535"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="316" origin="prim-lval" p-complexity="1">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="535"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="317" origin="prim-lval" p-complexity="1">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="535"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="318" origin="prim-lval" p-complexity="1">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="535"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="319" origin="prim-exp" p-complexity="0">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6219" vname="nl"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="537"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="320" origin="prim-exp" p-complexity="6">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="hr">
         <lval>
          <lhost>
           <var vid="6218" vname="hr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="42" fname="s_addr"/>
        </offset>
        <field ckey="191" fname="addr"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="321" origin="prim-exp" p-complexity="0">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="322" origin="prim-lval" p-complexity="1">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="323" origin="prim-lval" p-complexity="1">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="324" origin="prim-lval" p-complexity="1">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="325" origin="prim-lval" p-complexity="1">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="326" origin="prim-exp" p-complexity="1">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6227" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="540"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="327" origin="prim-exp" p-complexity="0">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6227" vname="tmp___2"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="540"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="328" origin="prim-exp" p-complexity="0">
     <location byte="206888" file="src/cache.c" line="1101"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="329" origin="prim-exp" p-complexity="0">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="330" origin="prim-lval" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="331" origin="prim-lval" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="332" origin="prim-lval" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="333" origin="prim-lval" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="334" origin="prim-exp" p-complexity="6">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="nl">
         <lval>
          <lhost>
           <var vid="6219" vname="nl"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="192" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="335" origin="prim-exp" p-complexity="0">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6219" vname="nl"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="336" origin="prim-lval" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="337" origin="prim-lval" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="338" origin="prim-lval" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="192" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="339" origin="prim-lval" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="192" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="340" origin="prim-exp" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="nl-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="nl">
          <lval>
           <lhost>
            <var vid="6219" vname="nl"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="192" fname="name"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="341" origin="prim-exp" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="nl-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="nl">
          <lval>
           <lhost>
            <var vid="6219" vname="nl"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="192" fname="name"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="342" origin="prim-exp" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="nl-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="nl">
          <lval>
           <lhost>
            <var vid="6219" vname="nl"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="192" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="343" origin="prim-exp" p-complexity="1">
     <location byte="206976" file="src/cache.c" line="1104"/>
     <predicate tag="null-terminated">
      <exp etag="lval" xstr="nl-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="nl">
          <lval>
           <lhost>
            <var vid="6219" vname="nl"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="192" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="344" origin="prim-exp" p-complexity="0">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="345" origin="prim-lval" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="346" origin="prim-lval" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="347" origin="prim-lval" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="348" origin="prim-lval" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="349" origin="prim-exp" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="lval" xstr="hr-&gt;ttl">
       <lval>
        <lhost>
         <mem etag="lval" xstr="hr">
          <lval>
           <lhost>
            <var vid="6218" vname="hr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="191" fname="ttl"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="350" origin="prim-exp" p-complexity="6">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="hr">
         <lval>
          <lhost>
           <var vid="6218" vname="hr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="191" fname="ttl"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="351" origin="prim-exp" p-complexity="0">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="352" origin="prim-lval" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="353" origin="prim-lval" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="354" origin="prim-lval" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="355" origin="prim-lval" p-complexity="1">
     <location byte="207011" file="src/cache.c" line="1105"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="356" origin="prim-exp" p-complexity="0">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="357" origin="prim-lval" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="358" origin="prim-lval" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="359" origin="prim-lval" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="360" origin="prim-lval" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="361" origin="prim-exp" p-complexity="6">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((((((((((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int | ((1 &lt;&lt; 2):unsigned int):unsigned int | ((1 &lt;&lt; 7):unsigned int):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 13):unsigned int):unsigned int">
       <exp1 binop="bor" etag="binop" xstr="((((((((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int | ((1 &lt;&lt; 2):unsigned int):unsigned int | ((1 &lt;&lt; 7):unsigned int):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int">
        <exp1 binop="bor" etag="binop" xstr="((((((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int | ((1 &lt;&lt; 2):unsigned int):unsigned int | ((1 &lt;&lt; 7):unsigned int):unsigned int">
         <exp1 binop="bor" etag="binop" xstr="((((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int | ((1 &lt;&lt; 2):unsigned int):unsigned int">
          <exp1 binop="bor" etag="binop" xstr="((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int">
           <exp1 binop="bor" etag="binop" xstr="((((1 &lt;&lt; 6):unsigned int | 1):unsigned int">
            <exp1 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 6):unsigned int">
             <exp1 etag="const" xstr="1">
              <constant ctag="cint64" ikind="iuint" intValue="1"/>
             </exp1>
             <exp2 etag="const" xstr="6">
              <constant ctag="cint64" ikind="iint" intValue="6"/>
             </exp2>
             <typ ikind="iuint" ttag="tint"/>
            </exp1>
            <exp2 etag="const" xstr="1">
             <constant ctag="cint64" ikind="iuint" intValue="1"/>
            </exp2>
            <typ ikind="iuint" ttag="tint"/>
           </exp1>
           <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 3):unsigned int">
            <exp1 etag="const" xstr="1">
             <constant ctag="cint64" ikind="iuint" intValue="1"/>
            </exp1>
            <exp2 etag="const" xstr="3">
             <constant ctag="cint64" ikind="iint" intValue="3"/>
            </exp2>
            <typ ikind="iuint" ttag="tint"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp1>
          <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 2):unsigned int">
           <exp1 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iuint" intValue="1"/>
           </exp1>
           <exp2 etag="const" xstr="2">
            <constant ctag="cint64" ikind="iint" intValue="2"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp1>
         <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 7):unsigned int">
          <exp1 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iuint" intValue="1"/>
          </exp1>
          <exp2 etag="const" xstr="7">
           <constant ctag="cint64" ikind="iint" intValue="7"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 1):unsigned int">
         <exp1 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iuint" intValue="1"/>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 13):unsigned int">
        <exp1 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp1>
        <exp2 etag="const" xstr="13">
         <constant ctag="cint64" ikind="iint" intValue="13"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="362" origin="prim-op" p-complexity="0">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="363" origin="prim-op" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="364" origin="prim-op" p-complexity="0">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="365" origin="prim-op" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="366" origin="prim-op" p-complexity="0">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="367" origin="prim-op" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="368" origin="prim-op" p-complexity="0">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="369" origin="prim-op" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="7">
       <constant ctag="cint64" ikind="iint" intValue="7"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="370" origin="prim-op" p-complexity="0">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="371" origin="prim-op" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="372" origin="prim-op" p-complexity="0">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="373" origin="prim-op" p-complexity="1">
     <location byte="207038" file="src/cache.c" line="1106"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="374" origin="prim-exp" p-complexity="0">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="375" origin="prim-exp" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="376" origin="prim-exp" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="377" origin="prim-exp" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="378" origin="prim-exp" p-complexity="6">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="42" ttag="tcomp"/>
      <tto ckey="176" ttag="tcomp"/>
      <exp etag="addrof" xstr="addrof (hr-&gt;addr)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="hr">
          <lval>
           <lhost>
            <var vid="6218" vname="hr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="191" fname="addr"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="379" origin="prim-exp" p-complexity="0">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="380" origin="prim-lval" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="381" origin="prim-lval" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="382" origin="prim-lval" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="383" origin="prim-lval" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="384" origin="prim-exp" p-complexity="6">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="385" origin="prim-exp" p-complexity="6">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="386" origin="prim-exp" p-complexity="6">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="387" origin="prim-exp" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </tto>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="packet"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="388" origin="prim-exp" p-complexity="6">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="packet"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="389" origin="prim-exp" p-complexity="0">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="390" origin="prim-lval" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="391" origin="prim-lval" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="392" origin="prim-lval" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="393" origin="prim-lval" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="394" origin="prim-exp" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="395" origin="prim-exp" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="396" origin="prim-exp" p-complexity="1">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="397" origin="prim-exp" p-complexity="0">
     <location byte="207128" file="src/cache.c" line="1107"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6214" vname="revhashsz"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="542"/>
       <node name="if-then"/>
       <node name="stmt" num="541"/>
       <node name="if-then"/>
       <node name="stmt" num="539"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="398" origin="prim-exp" p-complexity="12">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 0):(uint32_t*)">
         <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
          <typ ttag="tptr">
           <typ tname="uint32_t" ttag="tnamed">
            <attributes>
             <attr attrname="const"/>
            </attributes>
           </typ>
          </typ>
          <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
           <lval>
            <lhost>
             <mem etag="lval" xstr="hr">
              <lval>
               <lhost>
                <var vid="6218" vname="hr"/>
               </lhost>
              </lval>
             </mem>
            </lhost>
            <offset>
             <field ckey="191" fname="addr6"/>
            </offset>
           </lval>
          </exp>
         </exp1>
         <exp2 etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </exp2>
         <typ ttag="tptr">
          <typ tname="uint32_t" ttag="tnamed">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="399" origin="prim-exp" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="46" ttag="tcomp"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="hr">
          <lval>
           <lhost>
            <var vid="6218" vname="hr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="191" fname="addr6"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="400" origin="prim-exp" p-complexity="0">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="401" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="402" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="403" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="404" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="405" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="406" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="407" origin="prim-op" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="408" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="409" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 0):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="410" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 0):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="411" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 0):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="412" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 0):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="413" origin="prim-exp" p-complexity="12">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 1):(uint32_t*)">
         <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
          <typ ttag="tptr">
           <typ tname="uint32_t" ttag="tnamed">
            <attributes>
             <attr attrname="const"/>
            </attributes>
           </typ>
          </typ>
          <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
           <lval>
            <lhost>
             <mem etag="lval" xstr="hr">
              <lval>
               <lhost>
                <var vid="6218" vname="hr"/>
               </lhost>
              </lval>
             </mem>
            </lhost>
            <offset>
             <field ckey="191" fname="addr6"/>
            </offset>
           </lval>
          </exp>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ttag="tptr">
          <typ tname="uint32_t" ttag="tnamed">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="414" origin="prim-exp" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="46" ttag="tcomp"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="hr">
          <lval>
           <lhost>
            <var vid="6218" vname="hr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="191" fname="addr6"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="415" origin="prim-exp" p-complexity="0">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="416" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="417" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="418" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="419" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="420" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="421" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="422" origin="prim-op" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="423" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="424" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 1):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="425" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 1):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="426" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 1):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="427" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 1):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iint" intValue="1"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="428" origin="prim-exp" p-complexity="12">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 2):(uint32_t*)">
         <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
          <typ ttag="tptr">
           <typ tname="uint32_t" ttag="tnamed">
            <attributes>
             <attr attrname="const"/>
            </attributes>
           </typ>
          </typ>
          <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
           <lval>
            <lhost>
             <mem etag="lval" xstr="hr">
              <lval>
               <lhost>
                <var vid="6218" vname="hr"/>
               </lhost>
              </lval>
             </mem>
            </lhost>
            <offset>
             <field ckey="191" fname="addr6"/>
            </offset>
           </lval>
          </exp>
         </exp1>
         <exp2 etag="const" xstr="2">
          <constant ctag="cint64" ikind="iint" intValue="2"/>
         </exp2>
         <typ ttag="tptr">
          <typ tname="uint32_t" ttag="tnamed">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="429" origin="prim-exp" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="46" ttag="tcomp"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="hr">
          <lval>
           <lhost>
            <var vid="6218" vname="hr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="191" fname="addr6"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="430" origin="prim-exp" p-complexity="0">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="431" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="432" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="433" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="434" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="435" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="436" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="437" origin="prim-op" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="438" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="439" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 2):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="2">
        <constant ctag="cint64" ikind="iint" intValue="2"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="440" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 2):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="2">
        <constant ctag="cint64" ikind="iint" intValue="2"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="441" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 2):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="2">
        <constant ctag="cint64" ikind="iint" intValue="2"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="442" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 2):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="2">
        <constant ctag="cint64" ikind="iint" intValue="2"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="443" origin="prim-exp" p-complexity="12">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 3):(uint32_t*)">
         <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
          <typ ttag="tptr">
           <typ tname="uint32_t" ttag="tnamed">
            <attributes>
             <attr attrname="const"/>
            </attributes>
           </typ>
          </typ>
          <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
           <lval>
            <lhost>
             <mem etag="lval" xstr="hr">
              <lval>
               <lhost>
                <var vid="6218" vname="hr"/>
               </lhost>
              </lval>
             </mem>
            </lhost>
            <offset>
             <field ckey="191" fname="addr6"/>
            </offset>
           </lval>
          </exp>
         </exp1>
         <exp2 etag="const" xstr="3">
          <constant ctag="cint64" ikind="iint" intValue="3"/>
         </exp2>
         <typ ttag="tptr">
          <typ tname="uint32_t" ttag="tnamed">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="444" origin="prim-exp" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="46" ttag="tcomp"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="hr">
          <lval>
           <lhost>
            <var vid="6218" vname="hr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="191" fname="addr6"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="445" origin="prim-exp" p-complexity="0">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="446" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="447" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="448" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="449" origin="prim-lval" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="450" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="451" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="452" origin="prim-op" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="453" origin="prim-op" p-complexity="6">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="454" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 3):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="3">
        <constant ctag="cint64" ikind="iint" intValue="3"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="455" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 3):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="3">
        <constant ctag="cint64" ikind="iint" intValue="3"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="456" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 3):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="3">
        <constant ctag="cint64" ikind="iint" intValue="3"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="13" id="457" origin="prim-lval" p-complexity="7">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((caste (addrof (hr-&gt;addr6):(uint32_t*)) +i 3):(uint32_t*)">
       <exp1 etag="caste" xstr="caste (addrof (hr-&gt;addr6):(uint32_t*))">
        <typ ttag="tptr">
         <typ tname="uint32_t" ttag="tnamed">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
         <lval>
          <lhost>
           <mem etag="lval" xstr="hr">
            <lval>
             <lhost>
              <var vid="6218" vname="hr"/>
             </lhost>
            </lval>
           </mem>
          </lhost>
          <offset>
           <field ckey="191" fname="addr6"/>
          </offset>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="const" xstr="3">
        <constant ctag="cint64" ikind="iint" intValue="3"/>
       </exp2>
       <typ ttag="tptr">
        <typ tname="uint32_t" ttag="tnamed">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="546"/>
       <node name="if-then"/>
       <node name="stmt" num="545"/>
       <node name="if-then"/>
       <node name="stmt" num="544"/>
       <node name="if-then"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="458" origin="prim-exp" p-complexity="1">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="lval" xstr="tmp___3">
       <lval>
        <lhost>
         <var vid="6229" vname="tmp___3"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="550"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="459" origin="prim-exp" p-complexity="0">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6229" vname="tmp___3"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="550"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="460" origin="prim-exp" p-complexity="0">
     <location byte="207246" file="src/cache.c" line="1110"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="461" origin="prim-exp" p-complexity="0">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="462" origin="prim-lval" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="463" origin="prim-lval" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="464" origin="prim-lval" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="465" origin="prim-lval" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="466" origin="prim-exp" p-complexity="6">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="nl">
         <lval>
          <lhost>
           <var vid="6219" vname="nl"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="192" fname="name"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="467" origin="prim-exp" p-complexity="0">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6219" vname="nl"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="468" origin="prim-lval" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="469" origin="prim-lval" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="470" origin="prim-lval" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="192" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="471" origin="prim-lval" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="192" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="472" origin="prim-exp" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="nl-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="nl">
          <lval>
           <lhost>
            <var vid="6219" vname="nl"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="192" fname="name"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="473" origin="prim-exp" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="nl-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="nl">
          <lval>
           <lhost>
            <var vid="6219" vname="nl"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="192" fname="name"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="474" origin="prim-exp" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="nl-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="nl">
          <lval>
           <lhost>
            <var vid="6219" vname="nl"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="192" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="475" origin="prim-exp" p-complexity="1">
     <location byte="207501" file="src/cache.c" line="1113"/>
     <predicate tag="null-terminated">
      <exp etag="lval" xstr="nl-&gt;name">
       <lval>
        <lhost>
         <mem etag="lval" xstr="nl">
          <lval>
           <lhost>
            <var vid="6219" vname="nl"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="192" fname="name"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="476" origin="prim-exp" p-complexity="0">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="477" origin="prim-lval" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="478" origin="prim-lval" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="479" origin="prim-lval" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="480" origin="prim-lval" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="481" origin="prim-exp" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="lval" xstr="hr-&gt;ttl">
       <lval>
        <lhost>
         <mem etag="lval" xstr="hr">
          <lval>
           <lhost>
            <var vid="6218" vname="hr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="191" fname="ttl"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="482" origin="prim-exp" p-complexity="6">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="hr">
         <lval>
          <lhost>
           <var vid="6218" vname="hr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="191" fname="ttl"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="483" origin="prim-exp" p-complexity="0">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="484" origin="prim-lval" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="485" origin="prim-lval" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="486" origin="prim-lval" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="487" origin="prim-lval" p-complexity="1">
     <location byte="207536" file="src/cache.c" line="1114"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="488" origin="prim-exp" p-complexity="0">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="489" origin="prim-lval" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="490" origin="prim-lval" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="491" origin="prim-lval" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="492" origin="prim-lval" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="493" origin="prim-exp" p-complexity="6">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp binop="bor" etag="binop" xstr="((((((((((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int | ((1 &lt;&lt; 2):unsigned int):unsigned int | ((1 &lt;&lt; 8):unsigned int):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int | ((1 &lt;&lt; 13):unsigned int):unsigned int">
       <exp1 binop="bor" etag="binop" xstr="((((((((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int | ((1 &lt;&lt; 2):unsigned int):unsigned int | ((1 &lt;&lt; 8):unsigned int):unsigned int | ((1 &lt;&lt; 1):unsigned int):unsigned int">
        <exp1 binop="bor" etag="binop" xstr="((((((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int | ((1 &lt;&lt; 2):unsigned int):unsigned int | ((1 &lt;&lt; 8):unsigned int):unsigned int">
         <exp1 binop="bor" etag="binop" xstr="((((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int | ((1 &lt;&lt; 2):unsigned int):unsigned int">
          <exp1 binop="bor" etag="binop" xstr="((((((1 &lt;&lt; 6):unsigned int | 1):unsigned int | ((1 &lt;&lt; 3):unsigned int):unsigned int">
           <exp1 binop="bor" etag="binop" xstr="((((1 &lt;&lt; 6):unsigned int | 1):unsigned int">
            <exp1 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 6):unsigned int">
             <exp1 etag="const" xstr="1">
              <constant ctag="cint64" ikind="iuint" intValue="1"/>
             </exp1>
             <exp2 etag="const" xstr="6">
              <constant ctag="cint64" ikind="iint" intValue="6"/>
             </exp2>
             <typ ikind="iuint" ttag="tint"/>
            </exp1>
            <exp2 etag="const" xstr="1">
             <constant ctag="cint64" ikind="iuint" intValue="1"/>
            </exp2>
            <typ ikind="iuint" ttag="tint"/>
           </exp1>
           <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 3):unsigned int">
            <exp1 etag="const" xstr="1">
             <constant ctag="cint64" ikind="iuint" intValue="1"/>
            </exp1>
            <exp2 etag="const" xstr="3">
             <constant ctag="cint64" ikind="iint" intValue="3"/>
            </exp2>
            <typ ikind="iuint" ttag="tint"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp1>
          <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 2):unsigned int">
           <exp1 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iuint" intValue="1"/>
           </exp1>
           <exp2 etag="const" xstr="2">
            <constant ctag="cint64" ikind="iint" intValue="2"/>
           </exp2>
           <typ ikind="iuint" ttag="tint"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp1>
         <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 8):unsigned int">
          <exp1 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iuint" intValue="1"/>
          </exp1>
          <exp2 etag="const" xstr="8">
           <constant ctag="cint64" ikind="iint" intValue="8"/>
          </exp2>
          <typ ikind="iuint" ttag="tint"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp1>
        <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 1):unsigned int">
         <exp1 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iuint" intValue="1"/>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ikind="iuint" ttag="tint"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp1>
       <exp2 binop="shiftlt" etag="binop" xstr="((1 &lt;&lt; 13):unsigned int">
        <exp1 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iuint" intValue="1"/>
        </exp1>
        <exp2 etag="const" xstr="13">
         <constant ctag="cint64" ikind="iint" intValue="13"/>
        </exp2>
        <typ ikind="iuint" ttag="tint"/>
       </exp2>
       <typ ikind="iuint" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="494" origin="prim-op" p-complexity="0">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="495" origin="prim-op" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="6">
       <constant ctag="cint64" ikind="iint" intValue="6"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="496" origin="prim-op" p-complexity="0">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="497" origin="prim-op" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="498" origin="prim-op" p-complexity="0">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="499" origin="prim-op" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="500" origin="prim-op" p-complexity="0">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="501" origin="prim-op" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="502" origin="prim-op" p-complexity="0">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="503" origin="prim-op" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="504" origin="prim-op" p-complexity="0">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="505" origin="prim-op" p-complexity="1">
     <location byte="207563" file="src/cache.c" line="1115"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="13">
       <constant ctag="cint64" ikind="iint" intValue="13"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="506" origin="prim-exp" p-complexity="0">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6211" vname="cache___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="507" origin="prim-exp" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="508" origin="prim-exp" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="509" origin="prim-exp" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cache___0">
       <lval>
        <lhost>
         <var vid="6211" vname="cache___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="510" origin="prim-exp" p-complexity="6">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="46" ttag="tcomp"/>
      <tto ckey="176" ttag="tcomp"/>
      <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="hr">
          <lval>
           <lhost>
            <var vid="6218" vname="hr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="191" fname="addr6"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="511" origin="prim-exp" p-complexity="0">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="512" origin="prim-lval" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="513" origin="prim-lval" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="514" origin="prim-lval" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="515" origin="prim-lval" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="addrof"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="516" origin="prim-exp" p-complexity="6">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="517" origin="prim-exp" p-complexity="6">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="518" origin="prim-exp" p-complexity="6">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (hr-&gt;addr6):(struct 176*))">
       <typ ttag="tptr">
        <typ ckey="176" ttag="tcomp"/>
       </typ>
       <exp etag="addrof" xstr="addrof (hr-&gt;addr6)">
        <lval>
         <lhost>
          <mem etag="lval" xstr="hr">
           <lval>
            <lhost>
             <var vid="6218" vname="hr"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="191" fname="addr6"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ckey="176" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="519" origin="prim-exp" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </tto>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="packet"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="520" origin="prim-exp" p-complexity="6">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="packet"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="521" origin="prim-exp" p-complexity="0">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="522" origin="prim-lval" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="523" origin="prim-lval" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="524" origin="prim-lval" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="525" origin="prim-lval" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="526" origin="prim-exp" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="527" origin="prim-exp" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="528" origin="prim-exp" p-complexity="1">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="529" origin="prim-exp" p-complexity="0">
     <location byte="207653" file="src/cache.c" line="1116"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6214" vname="revhashsz"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="552"/>
       <node name="if-then"/>
       <node name="stmt" num="551"/>
       <node name="if-else"/>
       <node name="stmt" num="543"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="5"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="530" origin="prim-exp" p-complexity="6">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="nl">
         <lval>
          <lhost>
           <var vid="6219" vname="nl"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="192" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="553"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="531" origin="prim-exp" p-complexity="0">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6219" vname="nl"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="553"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="532" origin="prim-lval" p-complexity="1">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="553"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="533" origin="prim-lval" p-complexity="1">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="553"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="534" origin="prim-lval" p-complexity="1">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="192" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="553"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="535" origin="prim-lval" p-complexity="1">
     <location byte="206839" file="src/cache.c" line="1099"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="nl">
       <lval>
        <lhost>
         <var vid="6219" vname="nl"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="192" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="553"/>
       <node name="loop"/>
       <node name="stmt" num="536"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="536" origin="prim-exp" p-complexity="6">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="hr">
         <lval>
          <lhost>
           <var vid="6218" vname="hr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="191" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="554"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="537" origin="prim-exp" p-complexity="0">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6218" vname="hr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="554"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="538" origin="prim-lval" p-complexity="1">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="554"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="539" origin="prim-lval" p-complexity="1">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="554"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="540" origin="prim-lval" p-complexity="1">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="554"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="541" origin="prim-lval" p-complexity="1">
     <location byte="206776" file="src/cache.c" line="1098"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="hr">
       <lval>
        <lhost>
         <var vid="6218" vname="hr"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="191" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="554"/>
       <node name="loop"/>
       <node name="stmt" num="532"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="542" origin="prim-exp" p-complexity="6">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="options"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="543" origin="prim-exp" p-complexity="0">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="544" origin="prim-lval" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="545" origin="prim-lval" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="546" origin="prim-lval" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="547" origin="prim-lval" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="548" origin="prim-op" p-complexity="0">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="549" origin="prim-op" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="550" origin="prim-exp" p-complexity="6">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addn_hosts"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="551" origin="prim-exp" p-complexity="0">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="552" origin="prim-lval" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="553" origin="prim-lval" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="554" origin="prim-lval" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="555" origin="prim-lval" p-complexity="1">
     <location byte="207783" file="src/cache.c" line="1121"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="556" origin="prim-exp" p-complexity="6">
     <location byte="207932" file="src/cache.c" line="1123"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="557" origin="prim-exp" p-complexity="0">
     <location byte="207932" file="src/cache.c" line="1123"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="558" origin="prim-lval" p-complexity="1">
     <location byte="207932" file="src/cache.c" line="1123"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="559" origin="prim-lval" p-complexity="1">
     <location byte="207932" file="src/cache.c" line="1123"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="560" origin="prim-lval" p-complexity="1">
     <location byte="207932" file="src/cache.c" line="1123"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="561" origin="prim-lval" p-complexity="1">
     <location byte="207932" file="src/cache.c" line="1123"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="562" origin="prim-exp" p-complexity="0">
     <location byte="207968" file="src/cache.c" line="1124"/>
     <predicate tag="valid-mem">
      <exp etag="const" xstr="&quot;cleared cache&quot;">
       <constant ctag="cstr" strValue="cleared cache"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="558"/>
       <node name="if-then"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="563" origin="prim-exp" p-complexity="0">
     <location byte="207968" file="src/cache.c" line="1124"/>
     <predicate tag="lower-bound">
      <exp etag="const" xstr="&quot;cleared cache&quot;">
       <constant ctag="cstr" strValue="cleared cache"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="558"/>
       <node name="if-then"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="564" origin="prim-exp" p-complexity="0">
     <location byte="207968" file="src/cache.c" line="1124"/>
     <predicate tag="upper-bound">
      <exp etag="const" xstr="&quot;cleared cache&quot;">
       <constant ctag="cstr" strValue="cleared cache"/>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="558"/>
       <node name="if-then"/>
       <node name="stmt" num="557"/>
       <node name="if-then"/>
       <node name="stmt" num="556"/>
       <node name="if-then"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="565" origin="prim-exp" p-complexity="6">
     <location byte="208026" file="src/cache.c" line="1128"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="options"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="566" origin="prim-exp" p-complexity="0">
     <location byte="208026" file="src/cache.c" line="1128"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="567" origin="prim-lval" p-complexity="1">
     <location byte="208026" file="src/cache.c" line="1128"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="568" origin="prim-lval" p-complexity="1">
     <location byte="208026" file="src/cache.c" line="1128"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="569" origin="prim-lval" p-complexity="1">
     <location byte="208026" file="src/cache.c" line="1128"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="570" origin="prim-lval" p-complexity="1">
     <location byte="208026" file="src/cache.c" line="1128"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="571" origin="prim-op" p-complexity="0">
     <location byte="208026" file="src/cache.c" line="1128"/>
     <predicate tag="non-negative">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="572" origin="prim-op" p-complexity="1">
     <location byte="208026" file="src/cache.c" line="1128"/>
     <predicate size="iuint" tag="width-overflow">
      <exp etag="const" xstr="4">
       <constant ctag="cint64" ikind="iint" intValue="4"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="573" origin="prim-exp" p-complexity="0">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="const" xstr="&quot;/etc/hosts&quot;">
       <constant ctag="cstr" strValue="/etc/hosts"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="574" origin="prim-exp" p-complexity="0">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (&quot;/etc/hosts&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;/etc/hosts&quot;">
        <constant ctag="cstr" strValue="/etc/hosts"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="575" origin="prim-exp" p-complexity="0">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (&quot;/etc/hosts&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;/etc/hosts&quot;">
        <constant ctag="cstr" strValue="/etc/hosts"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="576" origin="prim-exp" p-complexity="0">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (&quot;/etc/hosts&quot;:(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="const" xstr="&quot;/etc/hosts&quot;">
        <constant ctag="cstr" strValue="/etc/hosts"/>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="577" origin="prim-exp" p-complexity="0">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6216" vname="total_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="578" origin="prim-exp" p-complexity="1">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </tto>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="packet"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="579" origin="prim-exp" p-complexity="6">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="packet"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="580" origin="prim-exp" p-complexity="0">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="581" origin="prim-lval" p-complexity="1">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="582" origin="prim-lval" p-complexity="1">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="583" origin="prim-lval" p-complexity="1">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="584" origin="prim-lval" p-complexity="1">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="585" origin="prim-exp" p-complexity="1">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="586" origin="prim-exp" p-complexity="1">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="587" origin="prim-exp" p-complexity="1">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="588" origin="prim-exp" p-complexity="0">
     <location byte="208134" file="src/cache.c" line="1129"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6214" vname="revhashsz"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="561"/>
       <node name="if-then"/>
       <node name="stmt" num="560"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="589" origin="prim-exp" p-complexity="0">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="590" origin="prim-lval" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="591" origin="prim-lval" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="592" origin="prim-lval" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="593" origin="prim-lval" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="594" origin="prim-exp" p-complexity="6">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addn_hosts"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="595" origin="prim-exp" p-complexity="0">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="596" origin="prim-lval" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="597" origin="prim-lval" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="598" origin="prim-lval" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="599" origin="prim-lval" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="600" origin="prim-exp" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addn_hosts">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addn_hosts"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="601" origin="prim-exp" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addn_hosts">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addn_hosts"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="602" origin="prim-exp" p-complexity="1">
     <location byte="208250" file="src/cache.c" line="1131"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;addn_hosts">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="addn_hosts"/>
        </offset>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="603" origin="prim-exp" p-complexity="6">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="addn_hosts"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="604" origin="prim-exp" p-complexity="0">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="605" origin="prim-lval" p-complexity="1">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="606" origin="prim-lval" p-complexity="1">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="607" origin="prim-lval" p-complexity="1">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="608" origin="prim-lval" p-complexity="1">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="562"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="609" origin="prim-exp" p-complexity="0">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6217" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="564"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="610" origin="prim-exp" p-complexity="6">
     <location byte="208388" file="src/cache.c" line="1133"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6217" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="flags"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="611" origin="prim-exp" p-complexity="0">
     <location byte="208388" file="src/cache.c" line="1133"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6217" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="612" origin="prim-lval" p-complexity="1">
     <location byte="208388" file="src/cache.c" line="1133"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="613" origin="prim-lval" p-complexity="1">
     <location byte="208388" file="src/cache.c" line="1133"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="614" origin="prim-lval" p-complexity="1">
     <location byte="208388" file="src/cache.c" line="1133"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="615" origin="prim-lval" p-complexity="1">
     <location byte="208388" file="src/cache.c" line="1133"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="616" origin="prim-exp" p-complexity="6">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6217" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="fname"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="617" origin="prim-exp" p-complexity="0">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6217" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="618" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="619" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="620" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="621" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="622" origin="prim-exp" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6217" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="623" origin="prim-exp" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6217" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="624" origin="prim-exp" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah-&gt;fname">
       <lval>
        <lhost>
         <mem etag="lval" xstr="ah">
          <lval>
           <lhost>
            <var vid="6217" vname="ah"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="213" fname="fname"/>
        </offset>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="625" origin="prim-exp" p-complexity="6">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6217" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="index"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="626" origin="prim-exp" p-complexity="0">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6217" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="627" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="628" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="629" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="630" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="631" origin="prim-exp" p-complexity="0">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6216" vname="total_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="632" origin="prim-exp" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </tto>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="packet"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="633" origin="prim-exp" p-complexity="6">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="packet"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="634" origin="prim-exp" p-complexity="0">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="635" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="636" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="637" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="638" origin="prim-lval" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="639" origin="prim-exp" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="640" origin="prim-exp" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="641" origin="prim-exp" p-complexity="1">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="642" origin="prim-exp" p-complexity="0">
     <location byte="208413" file="src/cache.c" line="1134"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6214" vname="revhashsz"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="567"/>
       <node name="if-then"/>
       <node name="stmt" num="566"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="4"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="643" origin="prim-exp" p-complexity="6">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="ah">
         <lval>
          <lhost>
           <var vid="6217" vname="ah"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="213" fname="next"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="568"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="644" origin="prim-exp" p-complexity="0">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6217" vname="ah"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="568"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="645" origin="prim-lval" p-complexity="1">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="568"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="646" origin="prim-lval" p-complexity="1">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="568"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="647" origin="prim-lval" p-complexity="1">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="568"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="648" origin="prim-lval" p-complexity="1">
     <location byte="208330" file="src/cache.c" line="1132"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="ah">
       <lval>
        <lhost>
         <var vid="6217" vname="ah"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="213" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="568"/>
       <node name="loop"/>
       <node name="stmt" num="563"/>
       <node name="if-else"/>
       <node name="stmt" num="555"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="649" origin="prim-exp" p-complexity="0">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6216" vname="total_size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="650" origin="prim-exp" p-complexity="1">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </tto>
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="packet"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="651" origin="prim-exp" p-complexity="6">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="packet"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="652" origin="prim-exp" p-complexity="0">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="653" origin="prim-lval" p-complexity="1">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="654" origin="prim-lval" p-complexity="1">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="655" origin="prim-lval" p-complexity="1">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="656" origin="prim-lval" p-complexity="1">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="657" origin="prim-exp" p-complexity="1">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="658" origin="prim-exp" p-complexity="1">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="659" origin="prim-exp" p-complexity="1">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (dnsmasq_daemon-&gt;packet:((struct 196*)*))">
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ckey="196" ttag="tcomp"/>
        </typ>
       </typ>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;packet">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="packet"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tptr">
       <typ ckey="196" ttag="tcomp"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="660" origin="prim-exp" p-complexity="0">
     <location byte="208537" file="src/cache.c" line="1138"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6214" vname="revhashsz"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="569"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="3"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:34">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
