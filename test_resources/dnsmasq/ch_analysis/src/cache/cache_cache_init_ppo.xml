<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="cache_init">
   <statistics avg-context-complexity="3.03" avg-predicate-complexity="1.31" context-complexity="185" predicate-complexity="80" size="61"/>
   <unconstrained-external-functions>
    <efn name="dnsmasq/safe_malloc" num="1"/>
   </unconstrained-external-functions>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="6">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-lval" p-complexity="1">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-lval" p-complexity="1">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-lval" p-complexity="1">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-lval" p-complexity="1">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-op" p-complexity="2">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate op="div" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="dnsmasq_daemon-&gt;cachesize">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="cachesize"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-op" p-complexity="2">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate op="div" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="dnsmasq_daemon-&gt;cachesize">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="cachesize"/>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="9" origin="prim-op" p-complexity="0">
     <location byte="187934" file="src/cache.c" line="93"/>
     <predicate tag="not-zero">
      <exp etag="const" xstr="10">
       <constant ctag="cint64" ikind="iint" intValue="10"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="5"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="10" origin="prim-exp" p-complexity="6">
     <location byte="187983" file="src/cache.c" line="95"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="11" origin="prim-exp" p-complexity="0">
     <location byte="187983" file="src/cache.c" line="95"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="12" origin="prim-lval" p-complexity="1">
     <location byte="187983" file="src/cache.c" line="95"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="13" origin="prim-lval" p-complexity="1">
     <location byte="187983" file="src/cache.c" line="95"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="14" origin="prim-lval" p-complexity="1">
     <location byte="187983" file="src/cache.c" line="95"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="15" origin="prim-lval" p-complexity="1">
     <location byte="187983" file="src/cache.c" line="95"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="16" origin="prim-exp" p-complexity="1">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="lval" xstr="dnsmasq_daemon-&gt;cachesize">
       <lval>
        <lhost>
         <mem etag="lval" xstr="dnsmasq_daemon">
          <lval>
           <lhost>
            <var vid="4341" vname="dnsmasq_daemon"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="238" fname="cachesize"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="17" origin="prim-exp" p-complexity="6">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="18" origin="prim-exp" p-complexity="0">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="19" origin="prim-lval" p-complexity="1">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="20" origin="prim-lval" p-complexity="1">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="21" origin="prim-lval" p-complexity="1">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="22" origin="prim-lval" p-complexity="1">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="23" origin="prim-op" p-complexity="2">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate op="mult" size="iulong" tag="int-underflow">
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;cachesize:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;cachesize">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="cachesize"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof (struct 196)">
       <typ ckey="196" ttag="tcomp"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="24" origin="prim-op" p-complexity="2">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate op="mult" size="iulong" tag="int-overflow">
      <exp1 etag="caste" xstr="caste (dnsmasq_daemon-&gt;cachesize:unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
       <exp etag="lval" xstr="dnsmasq_daemon-&gt;cachesize">
        <lval>
         <lhost>
          <mem etag="lval" xstr="dnsmasq_daemon">
           <lval>
            <lhost>
             <var vid="4341" vname="dnsmasq_daemon"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="238" fname="cachesize"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof (struct 196)">
       <typ ckey="196" ttag="tcomp"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="25" origin="prim-exp" p-complexity="1">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="196" ttag="tcomp"/>
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="5934" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="26" origin="prim-exp" p-complexity="0">
     <location byte="188030" file="src/cache.c" line="97"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5934" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="7"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="27" origin="prim-exp" p-complexity="0">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5933" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="9"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="28" origin="prim-exp" p-complexity="6">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="9"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="29" origin="prim-exp" p-complexity="0">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="9"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="30" origin="prim-lval" p-complexity="1">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="9"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="31" origin="prim-lval" p-complexity="1">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="9"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="32" origin="prim-lval" p-complexity="1">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="9"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="33" origin="prim-lval" p-complexity="1">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="9"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="34" origin="prim-exp" p-complexity="0">
     <location byte="188166" file="src/cache.c" line="101"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5932" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="35" origin="prim-exp" p-complexity="1">
     <location byte="188166" file="src/cache.c" line="101"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="36" origin="prim-exp" p-complexity="1">
     <location byte="188166" file="src/cache.c" line="101"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="37" origin="prim-exp" p-complexity="1">
     <location byte="188166" file="src/cache.c" line="101"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="38" origin="prim-exp" p-complexity="0">
     <location byte="188188" file="src/cache.c" line="102"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5932" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="39" origin="prim-lval" p-complexity="1">
     <location byte="188188" file="src/cache.c" line="102"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="40" origin="prim-lval" p-complexity="1">
     <location byte="188188" file="src/cache.c" line="102"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="41" origin="prim-lval" p-complexity="1">
     <location byte="188188" file="src/cache.c" line="102"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="42" origin="prim-lval" p-complexity="1">
     <location byte="188188" file="src/cache.c" line="102"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="43" origin="prim-exp" p-complexity="0">
     <location byte="188209" file="src/cache.c" line="103"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5932" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="44" origin="prim-lval" p-complexity="1">
     <location byte="188209" file="src/cache.c" line="103"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="45" origin="prim-lval" p-complexity="1">
     <location byte="188209" file="src/cache.c" line="103"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="46" origin="prim-lval" p-complexity="1">
     <location byte="188209" file="src/cache.c" line="103"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="47" origin="prim-lval" p-complexity="1">
     <location byte="188209" file="src/cache.c" line="103"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="196" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="48" origin="prim-exp" p-complexity="0">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5933" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="49" origin="prim-op" p-complexity="2">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5933" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="50" origin="prim-op" p-complexity="2">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="5933" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="51" origin="prim-exp" p-complexity="0">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5932" vname="crecp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="52" origin="prim-op" p-complexity="1">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="53" origin="prim-op" p-complexity="1">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="54" origin="prim-op" p-complexity="2">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ckey="196" ttag="tcomp"/>
      <exp1 etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="55" origin="prim-op" p-complexity="1">
     <location byte="188105" file="src/cache.c" line="99"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ckey="196" ttag="tcomp"/>
      <exp1 etag="lval" xstr="crecp">
       <lval>
        <lhost>
         <var vid="5932" vname="crecp"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="11"/>
       <node name="loop"/>
       <node name="stmt" num="8"/>
       <node name="if-then"/>
       <node name="stmt" num="6"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="56" origin="prim-exp" p-complexity="6">
     <location byte="188247" file="src/cache.c" line="108"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="dnsmasq_daemon">
         <lval>
          <lhost>
           <var vid="4341" vname="dnsmasq_daemon"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="238" fname="cachesize"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="12"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="57" origin="prim-exp" p-complexity="0">
     <location byte="188247" file="src/cache.c" line="108"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4341" vname="dnsmasq_daemon"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="12"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="58" origin="prim-lval" p-complexity="1">
     <location byte="188247" file="src/cache.c" line="108"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="12"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="59" origin="prim-lval" p-complexity="1">
     <location byte="188247" file="src/cache.c" line="108"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="12"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="60" origin="prim-lval" p-complexity="1">
     <location byte="188247" file="src/cache.c" line="108"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="12"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="61" origin="prim-lval" p-complexity="1">
     <location byte="188247" file="src/cache.c" line="108"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="dnsmasq_daemon">
       <lval>
        <lhost>
         <var vid="4341" vname="dnsmasq_daemon"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="238" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="12"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:35">
   <application file="src/cache.xml" name="application"/>
  </header>
 </c-analysis>
