<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="retry_send">
   <statistics avg-context-complexity="1.18" avg-predicate-complexity="0.96" context-complexity="53" predicate-complexity="43" size="45"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="197019" file="src/util.c" line="585"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6130" vname="rc"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="349"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="2" origin="prim-exp" p-complexity="0">
     <location byte="197065" file="src/util.c" line="588"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6133" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="350"/>
       <node name="if-then"/>
       <node name="stmt" num="349"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="3" origin="prim-lval" p-complexity="1">
     <location byte="197065" file="src/util.c" line="588"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6133" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="350"/>
       <node name="if-then"/>
       <node name="stmt" num="349"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="4" origin="prim-lval" p-complexity="1">
     <location byte="197065" file="src/util.c" line="588"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6133" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="350"/>
       <node name="if-then"/>
       <node name="stmt" num="349"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="5" origin="prim-lval" p-complexity="1">
     <location byte="197065" file="src/util.c" line="588"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6133" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="350"/>
       <node name="if-then"/>
       <node name="stmt" num="349"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="6" origin="prim-lval" p-complexity="1">
     <location byte="197065" file="src/util.c" line="588"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6133" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="350"/>
       <node name="if-then"/>
       <node name="stmt" num="349"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="6">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp___1">
         <lval>
          <lhost>
           <var vid="6137" vname="tmp___1"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="0">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6137" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="9" origin="prim-lval" p-complexity="1">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6137" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="10" origin="prim-lval" p-complexity="1">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6137" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="11" origin="prim-lval" p-complexity="1">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6137" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="12" origin="prim-lval" p-complexity="1">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6137" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="13" origin="prim-exp" p-complexity="6">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp___2">
         <lval>
          <lhost>
           <var vid="6139" vname="tmp___2"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="14" origin="prim-exp" p-complexity="0">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6139" vname="tmp___2"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="15" origin="prim-lval" p-complexity="1">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6139" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="16" origin="prim-lval" p-complexity="1">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6139" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="17" origin="prim-lval" p-complexity="1">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6139" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="18" origin="prim-lval" p-complexity="1">
     <location byte="197122" file="src/util.c" line="597"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6139" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="19" origin="prim-exp" p-complexity="0">
     <location byte="197202" file="src/util.c" line="599"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="nanosleep" id="20" name="deref-write-null" origin="f-pre" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="3" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="rmtp" nr="2" xstr="caste (caste (0:(void*)):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </args>
     <precondition name="deref-write-null">
      <math>
       <apply>
        <deref-write-null/>
        <ci>rmtp</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="nanosleep" id="21" name="deref-write-null" origin="f-pre" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="3" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="rmtp" nr="2" xstr="caste (caste (0:(void*)):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </args>
     <precondition name="deref-write-null">
      <math>
       <apply>
        <deref-write-null/>
        <ci>rmtp</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="nanosleep" id="22" name="deref-read" origin="f-pre" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="rqtp" nr="1" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>rqtp</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="nanosleep" id="23" name="deref-read" origin="f-pre" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ckey="3" ttag="tcomp">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="rqtp" nr="1" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>rqtp</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="nanosleep" id="24" name="deref-read" origin="f-pre" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ckey="3" ttag="tcomp">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="rqtp" nr="1" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>rqtp</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" fname="nanosleep" id="25" name="deref-read" origin="f-pre" p-complexity="5">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="caste" xstr="caste (addrof (waiter):(struct 3*))">
         <typ ttag="tptr">
          <typ ckey="3" ttag="tcomp">
           <attributes>
            <attr attrname="const"/>
           </attributes>
          </typ>
         </typ>
         <exp etag="addrof" xstr="addrof (waiter)">
          <lval>
           <lhost>
            <var vid="6132" vname="waiter"/>
           </lhost>
          </lval>
         </exp>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="rqtp" nr="1" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read">
      <math>
       <apply>
        <deref-read/>
        <ci>rqtp</ci>
        <apply>
         <index-size/>
         <cn>1</cn>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="26" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="pointer-cast">
      <tfrom ckey="3" ttag="tcomp"/>
      <tto ckey="3" ttag="tcomp">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="addrof" xstr="addrof (waiter)">
       <lval>
        <lhost>
         <var vid="6132" vname="waiter"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="27" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="28" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ckey="3" ttag="tcomp">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="29" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (addrof (waiter):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="addrof" xstr="addrof (waiter)">
        <lval>
         <lhost>
          <var vid="6132" vname="waiter"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ckey="3" ttag="tcomp">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="30" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ckey="3" ttag="tcomp"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="31" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="32" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="33" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="3" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="34" origin="prim-exp" p-complexity="0">
     <location byte="197259" file="src/util.c" line="601"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (caste (0:(void*)):(struct 3*))">
       <typ ttag="tptr">
        <typ ckey="3" ttag="tcomp"/>
       </typ>
       <exp etag="caste" xstr="caste (0:(void*))">
        <typ ttag="tptr">
         <typ ttag="tvoid"/>
        </typ>
        <exp etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp>
       </exp>
      </exp>
      <typ ckey="3" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="35" origin="prim-exp" p-complexity="0">
     <location byte="197299" file="src/util.c" line="602"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6131" vname="retries"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="36" origin="prim-exp" p-complexity="0">
     <location byte="197299" file="src/util.c" line="602"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6131" vname="retries"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="37" origin="prim-op" p-complexity="2">
     <location byte="197299" file="src/util.c" line="602"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="retries">
       <lval>
        <lhost>
         <var vid="6131" vname="retries"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="38" origin="prim-op" p-complexity="2">
     <location byte="197299" file="src/util.c" line="602"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="retries">
       <lval>
        <lhost>
         <var vid="6131" vname="retries"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="357"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="39" origin="prim-exp" p-complexity="0">
     <location byte="197299" file="src/util.c" line="602"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6135" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="358"/>
       <node name="if-then"/>
       <node name="stmt" num="356"/>
       <node name="if-else"/>
       <node name="stmt" num="353"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="40" origin="prim-exp" p-complexity="6">
     <location byte="197359" file="src/util.c" line="608"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp___3">
         <lval>
          <lhost>
           <var vid="6141" vname="tmp___3"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="361"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="41" origin="prim-exp" p-complexity="0">
     <location byte="197359" file="src/util.c" line="608"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6141" vname="tmp___3"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="361"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="42" origin="prim-lval" p-complexity="1">
     <location byte="197359" file="src/util.c" line="608"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp___3">
       <lval>
        <lhost>
         <var vid="6141" vname="tmp___3"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="361"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="43" origin="prim-lval" p-complexity="1">
     <location byte="197359" file="src/util.c" line="608"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___3">
       <lval>
        <lhost>
         <var vid="6141" vname="tmp___3"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="361"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="44" origin="prim-lval" p-complexity="1">
     <location byte="197359" file="src/util.c" line="608"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___3">
       <lval>
        <lhost>
         <var vid="6141" vname="tmp___3"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="361"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="45" origin="prim-lval" p-complexity="1">
     <location byte="197359" file="src/util.c" line="608"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___3">
       <lval>
        <lhost>
         <var vid="6141" vname="tmp___3"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="361"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:51">
   <application file="src/util.xml" name="application"/>
  </header>
 </c-analysis>
