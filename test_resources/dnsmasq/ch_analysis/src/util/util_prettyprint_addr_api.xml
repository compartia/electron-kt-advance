<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function cfilename="src/util.c" gvid="74" name="prettyprint_addr" num-ppo="0">
   <statistics api-assumptions="12" callers="9" ds-assumptions="0" field-assignments="0" global-assignments="0" global-assumptions="0" rv-assumptions="0"/>
   <parameters>
    <param formal-vid="6041" index="1" vname="addr"/>
    <param formal-vid="6042" index="2" vname="buf"/>
   </parameters>
   <callers>
    <caller cfilename="src/cache.c" fname="cache_make_stat" gvid="46" updated="01/09/2017 21:38:34" updated-f="1483997914.63">
     <call-site byte="213628" file="src/cache.c" line="1359"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="689"/>
      <node name="if-then"/>
      <node name="stmt" num="679"/>
      <node name="loop"/>
      <node name="stmt" num="676"/>
      <node name="stmt" num="657"/>
     </calling-context>
    </caller>
    <caller cfilename="src/cache.c" fname="dump_cache" gvid="44" updated="01/09/2017 21:38:34" updated-f="1483997914.55">
     <call-site byte="215882" file="src/cache.c" line="1444"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="730"/>
      <node name="if-then"/>
      <node name="stmt" num="720"/>
      <node name="loop"/>
      <node name="stmt" num="717"/>
     </calling-context>
    </caller>
    <caller cfilename="src/cache.c" fname="log_query" gvid="34" updated="01/09/2017 21:38:34" updated-f="1483997914.49">
     <call-site byte="220952" file="src/cache.c" line="1676"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="893"/>
      <node name="if-then"/>
      <node name="stmt" num="892"/>
     </calling-context>
    </caller>
    <caller cfilename="src/forward.c" fname="process_reply" gvid="346" updated="01/09/2017 21:38:37" updated-f="1483997917.5">
     <call-site byte="200887" file="src/forward.c" line="648"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="266"/>
      <node name="if-then"/>
      <node name="stmt" num="265"/>
      <node name="if-then"/>
      <node name="stmt" num="264"/>
      <node name="if-then"/>
      <node name="stmt" num="263"/>
      <node name="if-then"/>
      <node name="stmt" num="262"/>
     </calling-context>
    </caller>
    <caller cfilename="src/network.c" fname="check_servers" gvid="256" updated="01/09/2017 21:38:39" updated-f="1483997919.09">
     <call-site byte="220109" file="src/network.c" line="1488"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="741"/>
      <node name="if-then"/>
      <node name="stmt" num="738"/>
      <node name="loop"/>
      <node name="stmt" num="735"/>
     </calling-context>
    </caller>
    <caller cfilename="src/network.c" fname="make_sock" gvid="481" updated="01/09/2017 21:38:39" updated-f="1483997919.42">
     <call-site byte="202028" file="src/network.c" line="713"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="2"/>
      <node name="stmt" num="355"/>
      <node name="if-then"/>
      <node name="stmt" num="345"/>
     </calling-context>
    </caller>
    <caller cfilename="src/network.c" fname="pre_allocate_sfds" gvid="258" updated="01/09/2017 21:38:39" updated-f="1483997919.16">
     <call-site byte="217039" file="src/network.c" line="1303"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="653"/>
      <node name="if-then"/>
      <node name="stmt" num="652"/>
      <node name="if-then"/>
      <node name="stmt" num="651"/>
      <node name="if-else"/>
      <node name="stmt" num="649"/>
      <node name="if-then"/>
      <node name="stmt" num="647"/>
      <node name="loop"/>
      <node name="stmt" num="644"/>
     </calling-context>
    </caller>
    <caller cfilename="src/tftp.c" fname="check_tftp_listeners" gvid="232" updated="01/09/2017 21:38:50" updated-f="1483997930.85">
     <call-site byte="199928" file="src/tftp.c" line="530"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="1"/>
      <node name="stmt" num="277"/>
      <node name="loop"/>
      <node name="stmt" num="274"/>
     </calling-context>
    </caller>
    <caller cfilename="src/tftp.c" fname="tftp_request" gvid="233" updated="01/09/2017 21:38:50" updated-f="1483997930.96">
     <call-site byte="192844" file="src/tftp.c" line="296"/>
     <args>
      <arg/>
      <arg/>
     </args>
     <calling-context>
      <node name="instr" num="13"/>
      <node name="stmt" num="107"/>
     </calling-context>
    </caller>
   </callers>
   <api-assumptions>
    <api-assumption nr="1">
     <predicate tag="not-null">
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="6041" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="4"/>
      <po id="8"/>
      <po id="18"/>
      <po id="33"/>
      <po id="42"/>
      <po id="46"/>
      <po id="56"/>
      <po id="71"/>
      <po id="77"/>
      <po id="152"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="2">
     <predicate tag="not-null">
      <exp etag="lval" xstr="buf">
       <lval>
        <lhost>
         <var vid="6042" vname="buf"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="12"/>
      <po id="50"/>
      <po id="85"/>
      <po id="115"/>
      <po id="135"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="3">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="buf">
       <lval>
        <lhost>
         <var vid="6042" vname="buf"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="46">
       <constant ctag="cint64" ikind="iint" intValue="46"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="14"/>
      <po id="52"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="4">
     <predicate tag="initialized-range">
      <base-exp etag="lval" xstr="buf">
       <lval>
        <lhost>
         <var vid="6042" vname="buf"/>
        </lhost>
       </lval>
      </base-exp>
      <len-exp etag="lval" xstr="buf">
       <lval>
        <lhost>
         <var vid="6042" vname="buf"/>
        </lhost>
       </lval>
      </len-exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="89"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="5">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="addr">
         <lval>
          <lhost>
           <var vid="6041" vname="addr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="60" fname="sin_port"/>
        </offset>
        <field ckey="39" fname="in"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="31"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="6">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="addr">
         <lval>
          <lhost>
           <var vid="6041" vname="addr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="59" fname="sin6_scope_id"/>
        </offset>
        <field ckey="39" fname="in6"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="69"/>
      <po id="75"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="7">
     <predicate from="iushort" tag="unsigned-to-signed-cast" to="iint">
      <exp etag="lval" xstr="addr-&gt;sa.sa_family">
       <lval>
        <lhost>
         <mem etag="lval" xstr="addr">
          <lval>
           <lhost>
            <var vid="6041" vname="addr"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <offset>
          <field ckey="64" fname="sa_family"/>
         </offset>
         <field ckey="39" fname="sa"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="1"/>
      <po id="39"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="8">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="addr">
         <lval>
          <lhost>
           <var vid="6041" vname="addr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="64" fname="sa_family"/>
        </offset>
        <field ckey="39" fname="sa"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="2"/>
      <po id="40"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="9">
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (buf:(char*))]">
       <arg etag="caste" xstr="caste (buf:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="buf">
         <lval>
          <lhost>
           <var vid="6042" vname="buf"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%&quot;">
         <constant ctag="cstr" strValue="%"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="117"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="10">
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="addr">
         <lval>
          <lhost>
           <var vid="6041" vname="addr"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <offset>
         <field ckey="59" fname="sin6_port"/>
        </offset>
        <field ckey="39" fname="in6"/>
       </offset>
      </lval>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="150"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="11">
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (buf:(char*))]">
       <arg etag="caste" xstr="caste (buf:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="buf">
         <lval>
          <lhost>
           <var vid="6042" vname="buf"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (&quot;%&quot;:(char*))]">
       <arg etag="caste" xstr="caste (&quot;%&quot;:(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="const" xstr="&quot;%&quot;">
         <constant ctag="cstr" strValue="%"/>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="116"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
    <api-assumption nr="12">
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="buf">
       <lval>
        <lhost>
         <var vid="6042" vname="buf"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (buf:(char*))]">
       <arg etag="caste" xstr="caste (buf:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="buf">
         <lval>
          <lhost>
           <var vid="6042" vname="buf"/>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <dependent-primary-proof-obligations>
      <po id="88"/>
     </dependent-primary-proof-obligations>
     <dependent-secondary-proof-obligations/>
    </api-assumption>
   </api-assumptions>
   <rv-assumptions/>
   <ds-assumptions/>
   <global-assumptions/>
   <global-assignments/>
   <field-assignments/>
  </function>
  <header time="01/10/2017 06:57:09">
   <application file="src/util.c" name="application"/>
  </header>
 </c-analysis>
