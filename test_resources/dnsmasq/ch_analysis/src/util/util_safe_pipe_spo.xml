<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="safe_pipe">
   <secondary-proof-obligations max-spo-id="65" num-ppo="59">
    <indirect-calls/>
    <callsite-obligations>
     <callsite-obligation api-max-id="2" fname="die" fvid="4904">
      <location byte="190647" file="src/util.c" line="260"/>
      <args>
       <arg etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
         <constant ctag="cstr" strValue="cannot create pipe: %s"/>
        </exp>
       </arg>
       <arg etag="caste" xstr="caste (caste (0:(void*)):(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="caste" xstr="caste (0:(void*))">
         <typ ttag="tptr">
          <typ ttag="tvoid"/>
         </typ>
         <exp etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </exp>
        </exp>
       </arg>
       <arg etag="const" xstr="5">
        <constant ctag="cint64" ikind="iint" intValue="5"/>
       </arg>
      </args>
      <obligations>
       <obligation api-id="2" id="65">
        <predicate tag="not-null">
         <exp etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
           <constant ctag="cstr" strValue="cannot create pipe: %s"/>
          </exp>
         </exp>
        </predicate>
       </obligation>
       <obligation api-id="1" id="64">
        <predicate op="pluspi" tag="ptr-upper-bound">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
         <exp1 etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
           <constant ctag="cstr" strValue="cannot create pipe: %s"/>
          </exp>
         </exp1>
         <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*)):(char*))]">
          <arg etag="caste" xstr="caste (caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*)):(char*))">
           <typ ttag="tptr">
            <attributes>
             <attr attrname="restrict"/>
            </attributes>
            <typ ikind="ichar" ttag="tint">
             <attributes>
              <attr attrname="const"/>
             </attributes>
            </typ>
           </typ>
           <exp etag="caste" xstr="caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*))">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint">
              <attributes>
               <attr attrname="const"/>
              </attributes>
             </typ>
            </typ>
            <exp etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
             <typ ttag="tptr">
              <typ ikind="ichar" ttag="tint"/>
             </typ>
             <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
              <constant ctag="cstr" strValue="cannot create pipe: %s"/>
             </exp>
            </exp>
           </exp>
          </arg>
          <typ ikind="iint" ttag="tint"/>
         </exp2>
        </predicate>
       </obligation>
      </obligations>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="170"/>
        <node name="if-else"/>
        <node name="stmt" num="165"/>
        <node name="if-else"/>
        <node name="stmt" num="162"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="2" fname="die" fvid="4904">
      <location byte="190647" file="src/util.c" line="260"/>
      <args>
       <arg etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
         <constant ctag="cstr" strValue="cannot create pipe: %s"/>
        </exp>
       </arg>
       <arg etag="caste" xstr="caste (caste (0:(void*)):(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="caste" xstr="caste (0:(void*))">
         <typ ttag="tptr">
          <typ ttag="tvoid"/>
         </typ>
         <exp etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </exp>
        </exp>
       </arg>
       <arg etag="const" xstr="5">
        <constant ctag="cint64" ikind="iint" intValue="5"/>
       </arg>
      </args>
      <obligations>
       <obligation api-id="2" id="63">
        <predicate tag="not-null">
         <exp etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
           <constant ctag="cstr" strValue="cannot create pipe: %s"/>
          </exp>
         </exp>
        </predicate>
       </obligation>
       <obligation api-id="1" id="62">
        <predicate op="pluspi" tag="ptr-upper-bound">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
         <exp1 etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
           <constant ctag="cstr" strValue="cannot create pipe: %s"/>
          </exp>
         </exp1>
         <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*)):(char*))]">
          <arg etag="caste" xstr="caste (caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*)):(char*))">
           <typ ttag="tptr">
            <attributes>
             <attr attrname="restrict"/>
            </attributes>
            <typ ikind="ichar" ttag="tint">
             <attributes>
              <attr attrname="const"/>
             </attributes>
            </typ>
           </typ>
           <exp etag="caste" xstr="caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*))">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint">
              <attributes>
               <attr attrname="const"/>
              </attributes>
             </typ>
            </typ>
            <exp etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
             <typ ttag="tptr">
              <typ ikind="ichar" ttag="tint"/>
             </typ>
             <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
              <constant ctag="cstr" strValue="cannot create pipe: %s"/>
             </exp>
            </exp>
           </exp>
          </arg>
          <typ ikind="iint" ttag="tint"/>
         </exp2>
        </predicate>
       </obligation>
      </obligations>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="169"/>
        <node name="if-else"/>
        <node name="stmt" num="168"/>
        <node name="if-then"/>
        <node name="stmt" num="166"/>
        <node name="if-then"/>
        <node name="stmt" num="165"/>
        <node name="if-else"/>
        <node name="stmt" num="162"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="0" fname="fix_fd" fvid="5123">
      <location byte="190557" file="src/util.c" line="257"/>
      <args>
       <arg etag="lval" xstr="*(((lval (fd) +i 0):(int*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((fd +i 0):(int*)">
           <exp1 etag="lval" xstr="fd">
            <lval>
             <lhost>
              <var vid="5973" vname="fd"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="const" xstr="0">
            <constant ctag="cint64" ikind="iint" intValue="0"/>
           </exp2>
           <typ ttag="tptr">
            <typ ikind="iint" ttag="tint"/>
           </typ>
          </mem>
         </lhost>
        </lval>
       </arg>
      </args>
      <obligations/>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="167"/>
        <node name="if-then"/>
        <node name="stmt" num="166"/>
        <node name="if-then"/>
        <node name="stmt" num="165"/>
        <node name="if-else"/>
        <node name="stmt" num="162"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="0" fname="fix_fd" fvid="5123">
      <location byte="190557" file="src/util.c" line="257"/>
      <args>
       <arg etag="lval" xstr="*(((lval (fd) +i 1):(int*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((fd +i 1):(int*)">
           <exp1 etag="lval" xstr="fd">
            <lval>
             <lhost>
              <var vid="5973" vname="fd"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iint" intValue="1"/>
           </exp2>
           <typ ttag="tptr">
            <typ ikind="iint" ttag="tint"/>
           </typ>
          </mem>
         </lhost>
        </lval>
       </arg>
      </args>
      <obligations/>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="164"/>
        <node name="if-else"/>
        <node name="stmt" num="162"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
     <callsite-obligation api-max-id="2" fname="die" fvid="4904">
      <location byte="190647" file="src/util.c" line="260"/>
      <args>
       <arg etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
         <constant ctag="cstr" strValue="cannot create pipe: %s"/>
        </exp>
       </arg>
       <arg etag="caste" xstr="caste (caste (0:(void*)):(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="caste" xstr="caste (0:(void*))">
         <typ ttag="tptr">
          <typ ttag="tvoid"/>
         </typ>
         <exp etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </exp>
        </exp>
       </arg>
       <arg etag="const" xstr="5">
        <constant ctag="cint64" ikind="iint" intValue="5"/>
       </arg>
      </args>
      <obligations>
       <obligation api-id="2" id="61">
        <predicate tag="not-null">
         <exp etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
           <constant ctag="cstr" strValue="cannot create pipe: %s"/>
          </exp>
         </exp>
        </predicate>
       </obligation>
       <obligation api-id="1" id="60">
        <predicate op="pluspi" tag="ptr-upper-bound">
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
         <exp1 etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
          <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
           <constant ctag="cstr" strValue="cannot create pipe: %s"/>
          </exp>
         </exp1>
         <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*)):(char*))]">
          <arg etag="caste" xstr="caste (caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*)):(char*))">
           <typ ttag="tptr">
            <attributes>
             <attr attrname="restrict"/>
            </attributes>
            <typ ikind="ichar" ttag="tint">
             <attributes>
              <attr attrname="const"/>
             </attributes>
            </typ>
           </typ>
           <exp etag="caste" xstr="caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*))">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint">
              <attributes>
               <attr attrname="const"/>
              </attributes>
             </typ>
            </typ>
            <exp etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
             <typ ttag="tptr">
              <typ ikind="ichar" ttag="tint"/>
             </typ>
             <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
              <constant ctag="cstr" strValue="cannot create pipe: %s"/>
             </exp>
            </exp>
           </exp>
          </arg>
          <typ ikind="iint" ttag="tint"/>
         </exp2>
        </predicate>
       </obligation>
      </obligations>
      <context>
       <cfg-context>
        <node name="instr" num="0"/>
        <node name="stmt" num="163"/>
        <node name="if-then"/>
        <node name="stmt" num="162"/>
       </cfg-context>
       <exp-context/>
      </context>
     </callsite-obligation>
    </callsite-obligations>
    <return-sites/>
    <post-expectations/>
    <ds-expectations/>
   </secondary-proof-obligations>
  </function>
  <header time="01/10/2017 05:33:38">
   <application file="src/util.c" name="application"/>
  </header>
 </c-analysis>
