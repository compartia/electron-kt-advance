<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="rand_init" stable="yes">
   <program-locations>
    <program-location>
     <locations>
      <loc byte="186614" file="src/util.c" line="40"/>
     </locations>
     <cfg-context>
      <node name="instr" num="1"/>
      <node name="stmt" num="1"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="0" pv="26"/>
      <inv nrv="11" pv="26"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186614" file="src/util.c" line="40"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="1"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="28"/>
      <inv nrv="14" pv="27"/>
      <inv nrv="4" pv="9"/>
      <inv nrv="17" pv="31"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186652" file="src/util.c" line="42"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="6"/>
      <node name="if-then"/>
      <node name="stmt" num="5"/>
      <node name="if-else"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="16" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="13" pv="5"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="0" pv="16"/>
      <inv nrv="10" pv="16"/>
      <inv nrv="5" pv="14"/>
      <inv nrv="6" pv="15"/>
      <inv nrv="5" pv="17"/>
      <inv nrv="5" pv="36"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186652" file="src/util.c" line="42"/>
     </locations>
     <cfg-context>
      <node name="if-expr"/>
      <node name="stmt" num="7"/>
      <node name="if-then"/>
      <node name="stmt" num="5"/>
      <node name="if-else"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="16" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="13" pv="5"/>
      <inv nrv="15" pv="4"/>
      <inv nrv="1" pv="4"/>
      <inv nrv="13" pv="4"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="15" pv="18"/>
      <inv nrv="1" pv="18"/>
      <inv nrv="13" pv="18"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186652" file="src/util.c" line="42"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="4"/>
      <node name="if-else"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="0" pv="24"/>
      <inv nrv="10" pv="24"/>
      <inv nrv="8" pv="25"/>
      <inv nrv="9" pv="23"/>
      <inv nrv="8" pv="22"/>
      <inv nrv="8" pv="37"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186652" file="src/util.c" line="42"/>
     </locations>
     <cfg-context>
      <node name="if-expr"/>
      <node name="stmt" num="5"/>
      <node name="if-else"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="16" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="13" pv="5"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="16" pv="10"/>
      <inv nrv="2" pv="10"/>
      <inv nrv="13" pv="10"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186652" file="src/util.c" line="42"/>
     </locations>
     <cfg-context>
      <node name="if-expr"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="0" pv="2"/>
      <inv nrv="10" pv="2"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186798" file="src/util.c" line="45"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="8"/>
      <node name="if-else"/>
      <node name="stmt" num="7"/>
      <node name="if-then"/>
      <node name="stmt" num="5"/>
      <node name="if-else"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="16" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="13" pv="5"/>
      <inv nrv="15" pv="4"/>
      <inv nrv="1" pv="4"/>
      <inv nrv="13" pv="4"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="17" pv="30"/>
      <inv nrv="3" pv="7"/>
      <inv nrv="3" pv="8"/>
      <inv nrv="18" pv="38"/>
      <inv nrv="17" pv="29"/>
      <inv nrv="3" pv="6"/>
      <inv nrv="17" pv="41"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186798" file="src/util.c" line="45"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="9"/>
      <node name="if-else"/>
      <node name="stmt" num="5"/>
      <node name="if-else"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="16" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="13" pv="5"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="17" pv="33"/>
      <inv nrv="3" pv="13"/>
      <inv nrv="3" pv="12"/>
      <inv nrv="18" pv="39"/>
      <inv nrv="17" pv="32"/>
      <inv nrv="3" pv="11"/>
      <inv nrv="17" pv="42"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186798" file="src/util.c" line="45"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="3"/>
      <node name="if-then"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="7" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="7" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="17" pv="35"/>
      <inv nrv="3" pv="20"/>
      <inv nrv="3" pv="21"/>
      <inv nrv="18" pv="40"/>
      <inv nrv="17" pv="34"/>
      <inv nrv="3" pv="19"/>
      <inv nrv="17" pv="43"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="186874" file="src/util.c" line="47"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="10"/>
     </cfg-context>
     <invariants>
      <inv nrv="0" pv="0"/>
      <inv nrv="10" pv="0"/>
      <inv nrv="0" pv="1"/>
      <inv nrv="11" pv="1"/>
      <inv nrv="12" pv="28"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="0" pv="3"/>
      <inv nrv="10" pv="3"/>
     </invariants>
    </program-location>
   </program-locations>
   <program-value-table size="44">
    <pvals index="0">
     <pval>
      <lhost>
       <var vid="5905" vname="fd"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="1">
     <pval>
      <lhost>
       <var vid="5906" vname="tmp"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="2">
     <pval arg="1" id="10"/>
    </pvals>
    <pvals index="3">
     <pval arg="1" id="52"/>
    </pvals>
    <pvals index="4">
     <pval>
      <lhost>
       <var vid="5910" vname="tmp___1"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="5">
     <pval>
      <lhost>
       <var vid="5908" vname="tmp___0"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="6">
     <pval arg="1" id="40"/>
     <pval arg="2" id="41"/>
     <pval arg="2" id="42"/>
    </pvals>
    <pvals index="7">
     <pval arg="3" id="38"/>
    </pvals>
    <pvals index="8">
     <pval arg="3" id="39"/>
    </pvals>
    <pvals index="9">
     <pval arg="4" id="4"/>
     <pval arg="2" id="5"/>
    </pvals>
    <pvals index="10">
     <pval arg="1" id="26"/>
    </pvals>
    <pvals index="11">
     <pval arg="1" id="49"/>
     <pval arg="2" id="50"/>
     <pval arg="2" id="51"/>
    </pvals>
    <pvals index="12">
     <pval arg="3" id="48"/>
    </pvals>
    <pvals index="13">
     <pval arg="3" id="47"/>
    </pvals>
    <pvals index="14">
     <pval arg="3" id="28"/>
    </pvals>
    <pvals index="15">
     <pval arg="3" id="32"/>
    </pvals>
    <pvals index="16">
     <pval arg="1" id="27"/>
    </pvals>
    <pvals index="17">
     <pval arg="1" id="29"/>
     <pval arg="2" id="30"/>
     <pval arg="2" id="31"/>
    </pvals>
    <pvals index="18">
     <pval arg="1" id="33"/>
    </pvals>
    <pvals index="19">
     <pval arg="1" id="17"/>
     <pval arg="2" id="18"/>
     <pval arg="2" id="19"/>
    </pvals>
    <pvals index="20">
     <pval arg="3" id="15"/>
    </pvals>
    <pvals index="21">
     <pval arg="3" id="16"/>
    </pvals>
    <pvals index="22">
     <pval arg="1" id="22"/>
     <pval arg="2" id="23"/>
     <pval arg="2" id="24"/>
    </pvals>
    <pvals index="23">
     <pval arg="3" id="25"/>
    </pvals>
    <pvals index="24">
     <pval arg="1" id="20"/>
    </pvals>
    <pvals index="25">
     <pval arg="3" id="21"/>
    </pvals>
    <pvals index="26">
     <pval arg="1" id="9"/>
    </pvals>
    <pvals index="27">
     <pval etag="addrof" external="yes" property="vm" xstr="addrof (seed)">
      <lval>
       <lhost>
        <var vid="5900" vname="seed"/>
       </lhost>
      </lval>
     </pval>
    </pvals>
    <pvals index="28">
     <pval etag="addrof" external="yes" property="vm" xstr="addrof (in)">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
      </lval>
     </pval>
    </pvals>
    <pvals index="29">
     <pval arg="1" id="35"/>
     <pval arg="2" id="36"/>
     <pval arg="2" id="37"/>
    </pvals>
    <pvals index="30">
     <pval arg="3" id="34"/>
    </pvals>
    <pvals index="31">
     <pval arg="1" id="1"/>
     <pval arg="1" id="2"/>
     <pval arg="2" id="3"/>
     <pval arg="3" id="4"/>
     <pval arg="1" id="5"/>
     <pval arg="1" id="6"/>
     <pval arg="2" id="7"/>
     <pval arg="2" id="8"/>
    </pvals>
    <pvals index="32">
     <pval arg="1" id="44"/>
     <pval arg="2" id="45"/>
     <pval arg="2" id="46"/>
    </pvals>
    <pvals index="33">
     <pval arg="3" id="43"/>
    </pvals>
    <pvals index="34">
     <pval arg="1" id="12"/>
     <pval arg="2" id="13"/>
     <pval arg="2" id="14"/>
    </pvals>
    <pvals index="35">
     <pval arg="3" id="11"/>
    </pvals>
    <pvals index="36">
     <pval arg="1" id="29"/>
     <pval arg="2" id="30"/>
     <pval arg="2" id="31"/>
     <pval arg="1" id="53"/>
    </pvals>
    <pvals index="37">
     <pval arg="1" id="22"/>
     <pval arg="2" id="23"/>
     <pval arg="2" id="24"/>
     <pval arg="1" id="54"/>
    </pvals>
    <pvals index="38">
     <pval arg="4" id="57"/>
    </pvals>
    <pvals index="39">
     <pval arg="4" id="59"/>
    </pvals>
    <pvals index="40">
     <pval arg="4" id="55"/>
    </pvals>
    <pvals index="41">
     <pval arg="1" id="35"/>
     <pval arg="2" id="36"/>
     <pval arg="2" id="37"/>
     <pval arg="3" id="57"/>
     <pval arg="1" id="58"/>
    </pvals>
    <pvals index="42">
     <pval arg="1" id="44"/>
     <pval arg="2" id="45"/>
     <pval arg="2" id="46"/>
     <pval arg="3" id="59"/>
     <pval arg="1" id="60"/>
    </pvals>
    <pvals index="43">
     <pval arg="1" id="12"/>
     <pval arg="2" id="13"/>
     <pval arg="2" id="14"/>
     <pval arg="3" id="55"/>
     <pval arg="1" id="56"/>
    </pvals>
   </program-value-table>
   <non-relational-value-table size="19">
    <nrv byte="186614" etag="fnapp" file="src/util.c" index="0" line="40" tag="fv" xstr="fn(open)@ 40[&quot;/dev/urandom&quot;, 0]">
     <arg etag="const" xstr="&quot;/dev/urandom&quot;">
      <constant ctag="cstr" strValue="/dev/urandom"/>
     </arg>
     <arg etag="const" xstr="0">
      <constant ctag="cint64" ikind="iint" intValue="0"/>
     </arg>
     <fn etag="lval" xstr="open">
      <lval>
       <lhost>
        <var vid="3644" vname="open"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv byte="186652" etag="fnapp" file="src/util.c" index="1" line="42" tag="fv" xstr="fn(read_write)@ 42[_, _, caste (sizeof(in):int), 1]">
     <arg/>
     <arg/>
     <arg etag="caste" xstr="caste (sizeof(in):int)">
      <typ ikind="iint" ttag="tint"/>
      <exp etag="sizeofe" xstr="sizeof(in)">
       <exp etag="lval" xstr="in">
        <lval>
         <lhost>
          <var vid="5901" vname="in"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </arg>
     <arg etag="const" xstr="1">
      <constant ctag="cint64" ikind="iint" intValue="1"/>
     </arg>
     <fn etag="lval" xstr="read_write">
      <lval>
       <lhost>
        <var vid="4885" vname="read_write"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv byte="186652" etag="fnapp" file="src/util.c" index="2" line="42" tag="fv" xstr="fn(read_write)@ 42[_, _, caste (sizeof(seed):int), 1]">
     <arg/>
     <arg/>
     <arg etag="caste" xstr="caste (sizeof(seed):int)">
      <typ ikind="iint" ttag="tint"/>
      <exp etag="sizeofe" xstr="sizeof(seed)">
       <exp etag="lval" xstr="seed">
        <lval>
         <lhost>
          <var vid="5900" vname="seed"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </arg>
     <arg etag="const" xstr="1">
      <constant ctag="cint64" ikind="iint" intValue="1"/>
     </arg>
     <fn etag="lval" xstr="read_write">
      <lval>
       <lhost>
        <var vid="4885" vname="read_write"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv index="3" tag="range" value="0"/>
    <nrv cn="null-terminator-pos" etag="cnapp" index="4" tag="fv" xstr="null-terminator-pos[&quot;/dev/urandom&quot;]">
     <arg etag="const" xstr="&quot;/dev/urandom&quot;">
      <constant ctag="cstr" strValue="/dev/urandom"/>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
    <nrv etag="addrof" index="5" tag="fv" xstr="addrof (in)">
     <lval>
      <lhost>
       <var vid="5901" vname="in"/>
      </lhost>
     </lval>
    </nrv>
    <nrv etag="sizeofe" index="6" tag="fv" xstr="sizeof(in)">
     <exp etag="lval" xstr="in">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
      </lval>
     </exp>
    </nrv>
    <nrv index="7" tag="range" value="-1"/>
    <nrv etag="addrof" index="8" tag="fv" xstr="addrof (seed)">
     <lval>
      <lhost>
       <var vid="5900" vname="seed"/>
      </lhost>
     </lval>
    </nrv>
    <nrv etag="sizeofe" index="9" tag="fv" xstr="sizeof(seed)">
     <exp etag="lval" xstr="seed">
      <lval>
       <lhost>
        <var vid="5900" vname="seed"/>
       </lhost>
      </lval>
     </exp>
    </nrv>
    <nrv index="10" tag="ss">
     <sym name="assignedAt#40"/>
    </nrv>
    <nrv index="11" tag="ss">
     <sym name="assignedAt#40">
      <attr value="return-value"/>
      <attr value="open"/>
     </sym>
    </nrv>
    <nrv index="12" tag="ss">
     <sym name="invalid"/>
    </nrv>
    <nrv index="13" tag="ss">
     <sym name="assignedAt#42">
      <attr value="return-value"/>
      <attr value="read_write"/>
     </sym>
    </nrv>
    <nrv index="14" tag="ss">
     <sym name="valid"/>
    </nrv>
    <nrv byte="186652" etag="fnapp" file="src/util.c" index="15" line="42" tag="fv" xstr="fn(read_write)@ 42[fn(open)@ 40[&quot;/dev/urandom&quot;, 0], _, caste (sizeof(in):int), 1]">
     <arg byte="186614" etag="fnapp" file="src/util.c" line="40" xstr="fn(open)@ 40[&quot;/dev/urandom&quot;, 0]">
      <arg etag="const" xstr="&quot;/dev/urandom&quot;">
       <constant ctag="cstr" strValue="/dev/urandom"/>
      </arg>
      <arg etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </arg>
      <fn etag="lval" xstr="open">
       <lval>
        <lhost>
         <var vid="3644" vname="open"/>
        </lhost>
       </lval>
      </fn>
     </arg>
     <arg/>
     <arg etag="caste" xstr="caste (sizeof(in):int)">
      <typ ikind="iint" ttag="tint"/>
      <exp etag="sizeofe" xstr="sizeof(in)">
       <exp etag="lval" xstr="in">
        <lval>
         <lhost>
          <var vid="5901" vname="in"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </arg>
     <arg etag="const" xstr="1">
      <constant ctag="cint64" ikind="iint" intValue="1"/>
     </arg>
     <fn etag="lval" xstr="read_write">
      <lval>
       <lhost>
        <var vid="4885" vname="read_write"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv byte="186652" etag="fnapp" file="src/util.c" index="16" line="42" tag="fv" xstr="fn(read_write)@ 42[fn(open)@ 40[&quot;/dev/urandom&quot;, 0], _, caste (sizeof(seed):int), 1]">
     <arg byte="186614" etag="fnapp" file="src/util.c" line="40" xstr="fn(open)@ 40[&quot;/dev/urandom&quot;, 0]">
      <arg etag="const" xstr="&quot;/dev/urandom&quot;">
       <constant ctag="cstr" strValue="/dev/urandom"/>
      </arg>
      <arg etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </arg>
      <fn etag="lval" xstr="open">
       <lval>
        <lhost>
         <var vid="3644" vname="open"/>
        </lhost>
       </lval>
      </fn>
     </arg>
     <arg/>
     <arg etag="caste" xstr="caste (sizeof(seed):int)">
      <typ ikind="iint" ttag="tint"/>
      <exp etag="sizeofe" xstr="sizeof(seed)">
       <exp etag="lval" xstr="seed">
        <lval>
         <lhost>
          <var vid="5900" vname="seed"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </arg>
     <arg etag="const" xstr="1">
      <constant ctag="cint64" ikind="iint" intValue="1"/>
     </arg>
     <fn etag="lval" xstr="read_write">
      <lval>
       <lhost>
        <var vid="4885" vname="read_write"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv index="17" lb="1" tag="range"/>
    <nrv cn="null-terminator-pos" etag="cnapp" index="18" tag="fv" xstr="null-terminator-pos[caste (caste (caste (&quot;failed to seed the random number generator: %s&quot;:(char*)):(char*)):(char*))]">
     <arg etag="caste" xstr="caste (caste (caste (&quot;failed to seed the random number generator: %s&quot;:(char*)):(char*)):(char*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="restrict"/>
       </attributes>
       <typ ikind="ichar" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
      <exp etag="caste" xstr="caste (caste (&quot;failed to seed the random number generator: %s&quot;:(char*)):(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="caste" xstr="caste (&quot;failed to seed the random number generator: %s&quot;:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="const" xstr="&quot;failed to seed the random number generator: %s&quot;">
         <constant ctag="cstr" strValue="failed to seed the random number generator: %s"/>
        </exp>
       </exp>
      </exp>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
   </non-relational-value-table>
  </function>
  <header time="01/10/2017 03:38:54">
   <application file="src/util.c" name="application"/>
  </header>
 </c-analysis>
