<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="expand_buf">
   <statistics avg-context-complexity="0.59" avg-predicate-complexity="1.23" context-complexity="44" predicate-complexity="91" size="74"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="196360" file="src/util.c" line="542"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6113" vname="size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="327"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="6">
     <location byte="196360" file="src/util.c" line="542"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="iov">
         <lval>
          <lhost>
           <var vid="6112" vname="iov"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="19" fname="iov_len"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="327"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-exp" p-complexity="0">
     <location byte="196360" file="src/util.c" line="542"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6112" vname="iov"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="327"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-lval" p-complexity="1">
     <location byte="196360" file="src/util.c" line="542"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="327"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-lval" p-complexity="1">
     <location byte="196360" file="src/util.c" line="542"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="327"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-lval" p-complexity="1">
     <location byte="196360" file="src/util.c" line="542"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="327"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-lval" p-complexity="1">
     <location byte="196360" file="src/util.c" line="542"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="327"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="0">
     <location byte="196411" file="src/util.c" line="545"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6113" vname="size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="329"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="9" origin="prim-exp" p-complexity="0">
     <location byte="196411" file="src/util.c" line="545"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6114" vname="new"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="330"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="10" origin="prim-exp" p-complexity="0">
     <location byte="196457" file="src/util.c" line="547"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6115" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="331"/>
       <node name="if-else"/>
       <node name="stmt" num="330"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="11" origin="prim-lval" p-complexity="1">
     <location byte="196457" file="src/util.c" line="547"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6115" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="331"/>
       <node name="if-else"/>
       <node name="stmt" num="330"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="12" origin="prim-lval" p-complexity="1">
     <location byte="196457" file="src/util.c" line="547"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6115" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="331"/>
       <node name="if-else"/>
       <node name="stmt" num="330"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="13" origin="prim-lval" p-complexity="1">
     <location byte="196457" file="src/util.c" line="547"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6115" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="331"/>
       <node name="if-else"/>
       <node name="stmt" num="330"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="14" origin="prim-lval" p-complexity="1">
     <location byte="196457" file="src/util.c" line="547"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="6115" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="331"/>
       <node name="if-else"/>
       <node name="stmt" num="330"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="15" origin="prim-exp" p-complexity="6">
     <location byte="196510" file="src/util.c" line="551"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="iov">
         <lval>
          <lhost>
           <var vid="6112" vname="iov"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="19" fname="iov_base"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="16" origin="prim-exp" p-complexity="0">
     <location byte="196510" file="src/util.c" line="551"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6112" vname="iov"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="17" origin="prim-lval" p-complexity="1">
     <location byte="196510" file="src/util.c" line="551"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="18" origin="prim-lval" p-complexity="1">
     <location byte="196510" file="src/util.c" line="551"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="19" origin="prim-lval" p-complexity="1">
     <location byte="196510" file="src/util.c" line="551"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="20" origin="prim-lval" p-complexity="1">
     <location byte="196510" file="src/util.c" line="551"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="memcpy" id="21" name="no-overlap" origin="f-pre" p-complexity="2">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="s2" nr="2" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="no-overlap">
      <math>
       <apply>
        <no-overlap/>
        <ci>s1</ci>
        <ci>s2</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="memcpy" id="22" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="memcpy" id="23" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="memcpy" id="24" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid"/>
      <exp1 etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="lval" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp>
      <exp etag="caste" name="s1" nr="1" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>s1</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="memcpy" id="25" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="memcpy" id="26" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="memcpy" id="27" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="lval" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="memcpy" id="28" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </base-exp>
      <len-exp etag="lval" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="n" nr="3" xstr="iov-&gt;iov_len">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_len"/>
        </offset>
       </lval>
      </exp>
      <exp etag="caste" name="s2" nr="2" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>s2</ci>
        <apply>
         <index-size/>
         <ci>n</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="29" origin="prim-exp" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ttag="tvoid"/>
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="6114" vname="new"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="30" origin="prim-exp" p-complexity="0">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6114" vname="new"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="31" origin="prim-exp" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="32" origin="prim-exp" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="33" origin="prim-exp" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (new:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="new">
        <lval>
         <lhost>
          <var vid="6114" vname="new"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="34" origin="prim-exp" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="iov-&gt;iov_base">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_base"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="35" origin="prim-exp" p-complexity="6">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="iov">
         <lval>
          <lhost>
           <var vid="6112" vname="iov"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="19" fname="iov_base"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="36" origin="prim-exp" p-complexity="0">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6112" vname="iov"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="37" origin="prim-lval" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="38" origin="prim-lval" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="39" origin="prim-lval" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="40" origin="prim-lval" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="41" origin="prim-exp" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="42" origin="prim-exp" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="43" origin="prim-exp" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (iov-&gt;iov_base:(void*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="iov-&gt;iov_base">
        <lval>
         <lhost>
          <mem etag="lval" xstr="iov">
           <lval>
            <lhost>
             <var vid="6112" vname="iov"/>
            </lhost>
           </lval>
          </mem>
         </lhost>
         <offset>
          <field ckey="19" fname="iov_base"/>
         </offset>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="44" origin="prim-exp" p-complexity="6">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="iov">
         <lval>
          <lhost>
           <var vid="6112" vname="iov"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="19" fname="iov_len"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="45" origin="prim-exp" p-complexity="0">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6112" vname="iov"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="46" origin="prim-lval" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="47" origin="prim-lval" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="48" origin="prim-lval" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="49" origin="prim-lval" p-complexity="1">
     <location byte="196541" file="src/util.c" line="553"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="free" id="50" name="allocation-base" origin="f-pre" p-complexity="1">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="allocation-base">
      <exp etag="lval" xstr="iov-&gt;iov_base">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_base"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="lval" name="ptr" nr="1" xstr="iov-&gt;iov_base">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_base"/>
        </offset>
       </lval>
      </exp>
     </args>
     <precondition name="allocation-base">
      <math>
       <apply>
        <allocation-base/>
        <ci>ptr</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="51" origin="prim-exp" p-complexity="6">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="iov">
         <lval>
          <lhost>
           <var vid="6112" vname="iov"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
       <offset>
        <field ckey="19" fname="iov_base"/>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="52" origin="prim-exp" p-complexity="0">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6112" vname="iov"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="53" origin="prim-lval" p-complexity="1">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="54" origin="prim-lval" p-complexity="1">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="55" origin="prim-lval" p-complexity="1">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="56" origin="prim-lval" p-complexity="1">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="57" origin="prim-exp" p-complexity="1">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="iov-&gt;iov_base">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_base"/>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="58" origin="prim-exp" p-complexity="1">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="iov-&gt;iov_base">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_base"/>
        </offset>
       </lval>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="59" origin="prim-exp" p-complexity="1">
     <location byte="196589" file="src/util.c" line="554"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="iov-&gt;iov_base">
       <lval>
        <lhost>
         <mem etag="lval" xstr="iov">
          <lval>
           <lhost>
            <var vid="6112" vname="iov"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
        <offset>
         <field ckey="19" fname="iov_base"/>
        </offset>
       </lval>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="334"/>
       <node name="if-then"/>
       <node name="stmt" num="333"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="60" origin="prim-exp" p-complexity="0">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6112" vname="iov"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="61" origin="prim-lval" p-complexity="1">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="62" origin="prim-lval" p-complexity="1">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="63" origin="prim-lval" p-complexity="1">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="64" origin="prim-lval" p-complexity="1">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="65" origin="prim-exp" p-complexity="0">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6114" vname="new"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="66" origin="prim-exp" p-complexity="1">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="6114" vname="new"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="67" origin="prim-exp" p-complexity="1">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="6114" vname="new"/>
        </lhost>
       </lval>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="68" origin="prim-exp" p-complexity="1">
     <location byte="196619" file="src/util.c" line="557"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="new">
       <lval>
        <lhost>
         <var vid="6114" vname="new"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="69" origin="prim-exp" p-complexity="0">
     <location byte="196642" file="src/util.c" line="558"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6112" vname="iov"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="70" origin="prim-lval" p-complexity="1">
     <location byte="196642" file="src/util.c" line="558"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="71" origin="prim-lval" p-complexity="1">
     <location byte="196642" file="src/util.c" line="558"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="72" origin="prim-lval" p-complexity="1">
     <location byte="196642" file="src/util.c" line="558"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="73" origin="prim-lval" p-complexity="1">
     <location byte="196642" file="src/util.c" line="558"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="iov">
       <lval>
        <lhost>
         <var vid="6112" vname="iov"/>
        </lhost>
       </lval>
      </exp>
      <typ ckey="19" ttag="tcomp"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="74" origin="prim-exp" p-complexity="0">
     <location byte="196642" file="src/util.c" line="558"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6113" vname="size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="335"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:51">
   <application file="src/util.xml" name="application"/>
  </header>
 </c-analysis>
