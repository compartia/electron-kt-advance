<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="rand16">
   <statistics avg-context-complexity="1.91" avg-predicate-complexity="0.52" context-complexity="88" predicate-complexity="24" size="46"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="188210" file="src/util.c" line="74"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5903" vname="outleft"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="op"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="2" origin="prim-offset" p-complexity="0">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="39"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="3" origin="prim-offset" p-complexity="0">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="39"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="4" origin="prim-exp" p-complexity="0">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
       <offset>
        <index etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </index>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="39"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="5" origin="prim-offset" p-complexity="0">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="39"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="6" origin="prim-offset" p-complexity="0">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="39"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="7" origin="prim-op" p-complexity="2">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="in[0]">
       <lval>
        <lhost>
         <var vid="5901" vname="in"/>
        </lhost>
        <offset>
         <index etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </index>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iuint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="39"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="8" origin="prim-op" p-complexity="2">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="in[0]">
       <lval>
        <lhost>
         <var vid="5901" vname="in"/>
        </lhost>
        <offset>
         <index etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </index>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iuint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="39"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="9" origin="prim-exp" p-complexity="0">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
       <offset>
        <index etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </index>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="10" origin="prim-offset" p-complexity="0">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="11" origin="prim-offset" p-complexity="0">
     <location byte="188236" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="12" origin="prim-offset" p-complexity="0">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="13" origin="prim-offset" p-complexity="0">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="14" origin="prim-exp" p-complexity="0">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
       <offset>
        <index etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </index>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="15" origin="prim-offset" p-complexity="0">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="16" origin="prim-offset" p-complexity="0">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="17" origin="prim-op" p-complexity="2">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="in[1]">
       <lval>
        <lhost>
         <var vid="5901" vname="in"/>
        </lhost>
        <offset>
         <index etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </index>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iuint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="18" origin="prim-op" p-complexity="2">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="in[1]">
       <lval>
        <lhost>
         <var vid="5901" vname="in"/>
        </lhost>
        <offset>
         <index etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </index>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iuint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="41"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="19" origin="prim-exp" p-complexity="0">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
       <offset>
        <index etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </index>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="20" origin="prim-offset" p-complexity="0">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="2" id="21" origin="prim-offset" p-complexity="0">
     <location byte="188250" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="22" origin="prim-offset" p-complexity="0">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="23" origin="prim-offset" p-complexity="0">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="24" origin="prim-exp" p-complexity="0">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
       <offset>
        <index etag="const" xstr="2">
         <constant ctag="cint64" ikind="iint" intValue="2"/>
        </index>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="25" origin="prim-offset" p-complexity="0">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="26" origin="prim-offset" p-complexity="0">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="27" origin="prim-op" p-complexity="2">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="in[2]">
       <lval>
        <lhost>
         <var vid="5901" vname="in"/>
        </lhost>
        <offset>
         <index etag="const" xstr="2">
          <constant ctag="cint64" ikind="iint" intValue="2"/>
         </index>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iuint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="28" origin="prim-op" p-complexity="2">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="in[2]">
       <lval>
        <lhost>
         <var vid="5901" vname="in"/>
        </lhost>
        <offset>
         <index etag="const" xstr="2">
          <constant ctag="cint64" ikind="iint" intValue="2"/>
         </index>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iuint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="43"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="29" origin="prim-exp" p-complexity="0">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
       <offset>
        <index etag="const" xstr="2">
         <constant ctag="cint64" ikind="iint" intValue="2"/>
        </index>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="30" origin="prim-offset" p-complexity="0">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="3" id="31" origin="prim-offset" p-complexity="0">
     <location byte="188264" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="2">
       <constant ctag="cint64" ikind="iint" intValue="2"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="32" origin="prim-offset" p-complexity="0">
     <location byte="188278" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="45"/>
       <node name="if-else"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="33" origin="prim-offset" p-complexity="0">
     <location byte="188278" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="45"/>
       <node name="if-else"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="34" origin="prim-exp" p-complexity="0">
     <location byte="188278" file="src/util.c" line="76"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5901" vname="in"/>
       </lhost>
       <offset>
        <index etag="const" xstr="3">
         <constant ctag="cint64" ikind="iint" intValue="3"/>
        </index>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="45"/>
       <node name="if-else"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="35" origin="prim-offset" p-complexity="0">
     <location byte="188278" file="src/util.c" line="76"/>
     <predicate tag="index-lower-bound">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="45"/>
       <node name="if-else"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="36" origin="prim-offset" p-complexity="0">
     <location byte="188278" file="src/util.c" line="76"/>
     <predicate tag="index-upper-bound">
      <exp etag="const" xstr="3">
       <constant ctag="cint64" ikind="iint" intValue="3"/>
      </exp>
      <len-exp etag="const" xstr="12">
       <constant ctag="cint64" ikind="iint" intValue="12"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="45"/>
       <node name="if-else"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="37" origin="prim-op" p-complexity="2">
     <location byte="188278" file="src/util.c" line="76"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="in[3]">
       <lval>
        <lhost>
         <var vid="5901" vname="in"/>
        </lhost>
        <offset>
         <index etag="const" xstr="3">
          <constant ctag="cint64" ikind="iint" intValue="3"/>
         </index>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iuint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="45"/>
       <node name="if-else"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="4" id="38" origin="prim-op" p-complexity="2">
     <location byte="188278" file="src/util.c" line="76"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="in[3]">
       <lval>
        <lhost>
         <var vid="5901" vname="in"/>
        </lhost>
        <offset>
         <index etag="const" xstr="3">
          <constant ctag="cint64" ikind="iint" intValue="3"/>
         </index>
        </offset>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iuint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="45"/>
       <node name="if-else"/>
       <node name="stmt" num="44"/>
       <node name="if-else"/>
       <node name="stmt" num="42"/>
       <node name="if-else"/>
       <node name="stmt" num="40"/>
       <node name="if-then"/>
       <node name="stmt" num="38"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="39" origin="prim-exp" p-complexity="0">
     <location byte="188329" file="src/util.c" line="81"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5903" vname="outleft"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="47"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="40" origin="prim-op" p-complexity="2">
     <location byte="188329" file="src/util.c" line="81"/>
     <predicate op="minusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="outleft">
       <lval>
        <lhost>
         <var vid="5903" vname="outleft"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="47"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="41" origin="prim-op" p-complexity="2">
     <location byte="188329" file="src/util.c" line="81"/>
     <predicate op="minusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="outleft">
       <lval>
        <lhost>
         <var vid="5903" vname="outleft"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="47"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="42" origin="prim-exp" p-complexity="1">
     <location byte="188329" file="src/util.c" line="81"/>
     <predicate tag="cast">
      <tfrom ikind="iuint" ttag="tint"/>
      <tto ikind="iushort" ttag="tint"/>
      <exp etag="lval" xstr="out[outleft]">
       <lval>
        <lhost>
         <var vid="5902" vname="out"/>
        </lhost>
        <offset>
         <index etag="lval" xstr="outleft">
          <lval>
           <lhost>
            <var vid="5903" vname="outleft"/>
           </lhost>
          </lval>
         </index>
        </offset>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="48"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="43" origin="prim-exp" p-complexity="1">
     <location byte="188329" file="src/util.c" line="81"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5902" vname="out"/>
       </lhost>
       <offset>
        <index etag="lval" xstr="outleft">
         <lval>
          <lhost>
           <var vid="5903" vname="outleft"/>
          </lhost>
         </lval>
        </index>
       </offset>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="48"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="44" origin="prim-offset" p-complexity="1">
     <location byte="188329" file="src/util.c" line="81"/>
     <predicate tag="index-lower-bound">
      <exp etag="lval" xstr="outleft">
       <lval>
        <lhost>
         <var vid="5903" vname="outleft"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="48"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="cast"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="45" origin="prim-offset" p-complexity="1">
     <location byte="188329" file="src/util.c" line="81"/>
     <predicate tag="index-upper-bound">
      <exp etag="lval" xstr="outleft">
       <lval>
        <lhost>
         <var vid="5903" vname="outleft"/>
        </lhost>
       </lval>
      </exp>
      <len-exp etag="const" xstr="8">
       <constant ctag="cint64" ikind="iint" intValue="8"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="48"/>
      </cfg-context>
      <exp-context>
       <node name="var"/>
       <node name="lval"/>
       <node name="cast"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="46" origin="prim-exp" p-complexity="0">
     <location byte="188329" file="src/util.c" line="81"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5903" vname="outleft"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="48"/>
      </cfg-context>
      <exp-context>
       <node name="index"/>
       <node name="var"/>
       <node name="lval"/>
       <node name="cast"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:51">
   <application file="src/util.xml" name="application"/>
  </header>
 </c-analysis>
