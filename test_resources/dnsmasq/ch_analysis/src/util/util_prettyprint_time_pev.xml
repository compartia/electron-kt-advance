<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <log>
   <log-entry time="01/10/2017 06:57:09"/>
   <log-entry time="01/10/2017 05:33:05"/>
   <log-entry time="01/10/2017 05:21:42"/>
   <log-entry time="01/10/2017 04:59:56"/>
   <log-entry time="01/10/2017 04:36:39"/>
   <log-entry time="01/10/2017 03:42:55"/>
   <log-entry time="01/10/2017 02:54:44"/>
   <log-entry time="01/09/2017 22:53:12"/>
   <log-entry delta-checkvalid="101" delta-invariant="27" delta-lifted="8" time="01/09/2017 22:06:24"/>
  </log>
  <function name="prettyprint_time">
   <statistics checkvalid="101" invariant="27" invariant_with_api="8" total="155" total-proven="136"/>
   <open-proof-obligations>
    <open id="50" line="442" predicate="signed-to-unsigned-cast"/>
    <open id="68" line="444" predicate="ptr-upper-bound"/>
    <open id="73" line="444" predicate="valid-mem"/>
    <open id="74" line="444" predicate="ptr-lower-bound"/>
    <open id="75" line="444" predicate="ptr-upper-bound-deref"/>
    <open id="78" line="444" predicate="upper-bound"/>
    <open id="85" line="444" predicate="signed-to-unsigned-cast"/>
    <open id="103" line="446" predicate="ptr-upper-bound"/>
    <open id="108" line="446" predicate="valid-mem"/>
    <open id="109" line="446" predicate="ptr-lower-bound"/>
    <open id="110" line="446" predicate="ptr-upper-bound-deref"/>
    <open id="113" line="446" predicate="upper-bound"/>
    <open id="120" line="446" predicate="signed-to-unsigned-cast"/>
    <open id="135" line="448" predicate="ptr-upper-bound"/>
    <open id="140" line="448" predicate="valid-mem"/>
    <open id="141" line="448" predicate="ptr-lower-bound"/>
    <open id="142" line="448" predicate="ptr-upper-bound-deref"/>
    <open id="145" line="448" predicate="upper-bound"/>
    <open id="152" line="448" predicate="signed-to-unsigned-cast"/>
   </open-proof-obligations>
   <proof-obligations-discharged>
    <discharged id="1" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="t is a function parameter"/>
    </discharged>
    <discharged id="2" method="check-valid" time="01/09/2017 22:06:24" type="format-string">
     <evidence comment="infinite is a string literal"/>
    </discharged>
    <discharged id="3" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="4" method="check-valid" time="01/09/2017 22:06:24" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="5" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="6" method="check-valid" time="01/09/2017 22:06:24" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: infinite"/>
    </discharged>
    <discharged id="7" method="check-valid" time="01/09/2017 22:06:24" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged domain="linear equalities" id="8" method="invariants" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="valuesets" id="9" method="invariants" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="non-negative offset from base value: buf"/>
    </discharged>
    <discharged domain="valuesets" id="10" method="invariants" time="01/09/2017 22:06:24" type="ptr-upper-bound">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="3" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="11" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="12" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="buf is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="13" method="invariants" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="external address provided by parameter still points to valid memory"/>
    </discharged>
    <discharged domain="valuesets" id="14" method="invariants" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="non-negative offset from base value: buf"/>
    </discharged>
    <discharged domain="valuesets" id="15" method="invariants" time="01/09/2017 22:06:24" type="upper-bound">
     <evidence comment="externally provided address; dereferencability is checked as part of precondition"/>
    </discharged>
    <discharged id="16" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="17" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="18" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="19" method="check-valid" time="01/09/2017 22:06:24" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="20" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="t is a function parameter"/>
    </discharged>
    <discharged id="21" method="check-valid" time="01/09/2017 22:06:24" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="22" method="check-valid" time="01/09/2017 22:06:24" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="23" method="check-valid" time="01/09/2017 22:06:24" type="not-zero">
     <evidence comment="value is 86400"/>
    </discharged>
    <discharged domain="symbolic sets" id="24" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#441"/>
    </discharged>
    <discharged id="25" method="check-valid" time="01/09/2017 22:06:24" type="format-string">
     <evidence comment="%dd is a string literal"/>
    </discharged>
    <discharged id="26" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="27" method="check-valid" time="01/09/2017 22:06:24" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="28" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="29" method="check-valid" time="01/09/2017 22:06:24" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: %dd"/>
    </discharged>
    <discharged id="30" method="check-valid" time="01/09/2017 22:06:24" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="31" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="32" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged domain="valuesets" id="33" method="invariants" time="01/09/2017 22:06:24" type="ptr-upper-bound">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="3" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="34" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="35" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="buf is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="36" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#440"/>
    </discharged>
    <discharged domain="linear equalities" id="37" method="invariants" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="symbolic sets" id="38" method="invariants" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="external address provided by parameter still points to valid memory"/>
    </discharged>
    <discharged domain="intervals" id="39" method="invariants" time="01/09/2017 22:06:24" type="ptr-lower-bound">
     <evidence comment="non-negative lower bound on pointer increment: 0"/>
    </discharged>
    <discharged domain="valuesets" id="40" method="invariants" time="01/09/2017 22:06:24" type="ptr-upper-bound-deref">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="2" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="41" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="42" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged domain="valuesets" id="43" method="invariants" time="01/09/2017 22:06:24" type="upper-bound">
     <evidence comment="externally provided address; dereferencability is checked as part of precondition"/>
    </discharged>
    <discharged id="44" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="45" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="46" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="47" method="check-valid" time="01/09/2017 22:06:24" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged domain="symbolic sets" id="48" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#441"/>
    </discharged>
    <discharged domain="symbolic sets" id="49" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#440"/>
    </discharged>
    <discharged domain="symbolic sets" id="51" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#442"/>
    </discharged>
    <discharged id="52" method="check-valid" time="01/09/2017 22:06:24" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="53" method="check-valid" time="01/09/2017 22:06:24" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="54" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="t is a function parameter"/>
    </discharged>
    <discharged id="55" method="check-valid" time="01/09/2017 22:06:24" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="56" method="check-valid" time="01/09/2017 22:06:24" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="57" method="check-valid" time="01/09/2017 22:06:24" type="not-zero">
     <evidence comment="value is 3600"/>
    </discharged>
    <discharged id="58" method="check-valid" time="01/09/2017 22:06:24" type="not-zero">
     <evidence comment="value is 24"/>
    </discharged>
    <discharged domain="symbolic sets" id="59" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#443"/>
    </discharged>
    <discharged id="60" method="check-valid" time="01/09/2017 22:06:24" type="format-string">
     <evidence comment="%dh is a string literal"/>
    </discharged>
    <discharged id="61" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="62" method="check-valid" time="01/09/2017 22:06:24" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="63" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="64" method="check-valid" time="01/09/2017 22:06:24" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: %dh"/>
    </discharged>
    <discharged id="65" method="check-valid" time="01/09/2017 22:06:24" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="66" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="67" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="69" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="70" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="buf is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="71" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#440_xx_assignedAt#442"/>
    </discharged>
    <discharged domain="linear equalities" id="72" method="invariants" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="76" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="77" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="79" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="80" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="81" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="82" method="check-valid" time="01/09/2017 22:06:24" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged domain="symbolic sets" id="83" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#443"/>
    </discharged>
    <discharged domain="symbolic sets" id="84" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#440_xx_assignedAt#442"/>
    </discharged>
    <discharged domain="symbolic sets" id="86" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#444"/>
    </discharged>
    <discharged id="87" method="check-valid" time="01/09/2017 22:06:24" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="88" method="check-valid" time="01/09/2017 22:06:24" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="89" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="t is a function parameter"/>
    </discharged>
    <discharged id="90" method="check-valid" time="01/09/2017 22:06:24" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="91" method="check-valid" time="01/09/2017 22:06:24" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="92" method="check-valid" time="01/09/2017 22:06:24" type="not-zero">
     <evidence comment="value is 60"/>
    </discharged>
    <discharged id="93" method="check-valid" time="01/09/2017 22:06:24" type="not-zero">
     <evidence comment="value is 60"/>
    </discharged>
    <discharged domain="symbolic sets" id="94" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#445"/>
    </discharged>
    <discharged id="95" method="check-valid" time="01/09/2017 22:06:24" type="format-string">
     <evidence comment="%dm is a string literal"/>
    </discharged>
    <discharged id="96" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="97" method="check-valid" time="01/09/2017 22:06:24" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="98" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="99" method="check-valid" time="01/09/2017 22:06:24" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: %dm"/>
    </discharged>
    <discharged id="100" method="check-valid" time="01/09/2017 22:06:24" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="101" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="102" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="104" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="105" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="buf is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="106" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#440_xx_assignedAt#442_xx_assignedAt#444"/>
    </discharged>
    <discharged domain="linear equalities" id="107" method="invariants" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="111" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="112" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="114" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="115" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="116" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="117" method="check-valid" time="01/09/2017 22:06:24" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged domain="symbolic sets" id="118" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#445"/>
    </discharged>
    <discharged domain="symbolic sets" id="119" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#440_xx_assignedAt#442_xx_assignedAt#444"/>
    </discharged>
    <discharged domain="symbolic sets" id="121" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#446"/>
    </discharged>
    <discharged id="122" method="check-valid" time="01/09/2017 22:06:24" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="123" method="check-valid" time="01/09/2017 22:06:24" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="124" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="t is a function parameter"/>
    </discharged>
    <discharged id="125" method="check-valid" time="01/09/2017 22:06:24" type="not-zero">
     <evidence comment="value is 60"/>
    </discharged>
    <discharged domain="symbolic sets" id="126" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#447"/>
    </discharged>
    <discharged id="127" method="check-valid" time="01/09/2017 22:06:24" type="format-string">
     <evidence comment="%ds is a string literal"/>
    </discharged>
    <discharged id="128" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="129" method="check-valid" time="01/09/2017 22:06:24" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="130" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="131" method="check-valid" time="01/09/2017 22:06:24" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: %ds"/>
    </discharged>
    <discharged id="132" method="check-valid" time="01/09/2017 22:06:24" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="133" method="check-valid" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="134" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="136" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="137" method="check-valid" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="buf is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="138" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#440_xx_assignedAt#442_xx_assignedAt#444_xx_assignedAt#446"/>
    </discharged>
    <discharged domain="linear equalities" id="139" method="invariants" time="01/09/2017 22:06:24" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="143" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="144" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="146" method="check-valid" time="01/09/2017 22:06:24" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="147" method="check-valid" time="01/09/2017 22:06:24" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="148" method="check-valid" time="01/09/2017 22:06:24" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="149" method="check-valid" time="01/09/2017 22:06:24" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged domain="symbolic sets" id="150" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#447"/>
    </discharged>
    <discharged domain="symbolic sets" id="151" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#440_xx_assignedAt#442_xx_assignedAt#444_xx_assignedAt#446"/>
    </discharged>
    <discharged domain="symbolic sets" id="153" method="invariants" time="01/09/2017 22:06:24" type="initialized">
     <evidence comment="assignedAt#448"/>
    </discharged>
    <discharged id="154" method="check-valid" time="01/09/2017 22:06:24" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="155" method="check-valid" time="01/09/2017 22:06:24" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
   </proof-obligations-discharged>
  </function>
  <header time="01/10/2017 06:57:09">
   <application file="src//util.c" name="application"/>
  </header>
 </c-analysis>
