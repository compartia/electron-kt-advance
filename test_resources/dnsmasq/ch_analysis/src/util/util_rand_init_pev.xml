<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <log>
   <log-entry time="01/10/2017 06:57:10"/>
   <log-entry time="01/10/2017 05:33:05"/>
   <log-entry time="01/10/2017 05:21:42"/>
   <log-entry time="01/10/2017 04:59:56"/>
   <log-entry time="01/10/2017 04:36:40"/>
   <log-entry time="01/10/2017 03:42:56"/>
   <log-entry time="01/10/2017 02:54:45"/>
   <log-entry time="01/09/2017 22:53:13"/>
   <log-entry delta-checkvalid="43" delta-invariant="7" delta-lifted="2" time="01/09/2017 22:06:25"/>
  </log>
  <function name="rand_init">
   <statistics checkvalid="43" invariant="7" invariant_with_api="2" total="52" total-proven="52"/>
   <open-proof-obligations/>
   <proof-obligations-discharged>
    <discharged id="1" method="check-valid" time="01/09/2017 22:06:25" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="2" method="check-valid" time="01/09/2017 22:06:25" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="3" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="4" method="check-valid" time="01/09/2017 22:06:25" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: /dev/urandom"/>
    </discharged>
    <discharged id="5" method="check-valid" time="01/09/2017 22:06:25" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="6" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="7" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="8" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged domain="symbolic sets" id="9" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#40"/>
    </discharged>
    <discharged domain="symbolic sets" id="10" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#40"/>
    </discharged>
    <discharged id="11" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="12" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="13" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="14" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="15" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="null-terminator cast"/>
    </discharged>
    <discharged id="16" method="check-valid" time="01/09/2017 22:06:25" type="cast">
     <evidence comment="null-pointer cast"/>
    </discharged>
    <discharged id="17" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="null pointer is a valid memory pointer"/>
    </discharged>
    <discharged id="18" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged id="19" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged domain="symbolic sets" id="20" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#40"/>
    </discharged>
    <discharged id="21" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="cast to character type"/>
    </discharged>
    <discharged id="22" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="address of a variable is a valid memory region"/>
    </discharged>
    <discharged id="23" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="address of a variable"/>
    </discharged>
    <discharged id="24" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="address of a variable"/>
    </discharged>
    <discharged domain="none" id="25" method="invariants" time="01/09/2017 22:06:25" type="unsigned-to-signed-cast">
     <evidence comment="predicate depends on global variables seed, which is delegated to global analysis"/>
     <assumptions>
      <uses a-id="2" a-type="global"/>
     </assumptions>
    </discharged>
    <discharged domain="symbolic sets" id="26" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#42"/>
    </discharged>
    <discharged domain="symbolic sets" id="27" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#40"/>
    </discharged>
    <discharged id="28" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="cast to character type"/>
    </discharged>
    <discharged id="29" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="address of a variable is a valid memory region"/>
    </discharged>
    <discharged id="30" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="address of a variable"/>
    </discharged>
    <discharged id="31" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="address of a variable"/>
    </discharged>
    <discharged domain="none" id="32" method="invariants" time="01/09/2017 22:06:25" type="unsigned-to-signed-cast">
     <evidence comment="predicate depends on global variables in, which is delegated to global analysis"/>
     <assumptions>
      <uses a-id="1" a-type="global"/>
     </assumptions>
    </discharged>
    <discharged domain="symbolic sets" id="33" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#42"/>
    </discharged>
    <discharged id="34" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="35" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="36" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="37" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="38" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="null-terminator cast"/>
    </discharged>
    <discharged id="39" method="check-valid" time="01/09/2017 22:06:25" type="cast">
     <evidence comment="null-pointer cast"/>
    </discharged>
    <discharged id="40" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="null pointer is a valid memory pointer"/>
    </discharged>
    <discharged id="41" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged id="42" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged id="43" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="44" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="45" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="46" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="47" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="null-terminator cast"/>
    </discharged>
    <discharged id="48" method="check-valid" time="01/09/2017 22:06:25" type="cast">
     <evidence comment="null-pointer cast"/>
    </discharged>
    <discharged id="49" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="null pointer is a valid memory pointer"/>
    </discharged>
    <discharged id="50" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged id="51" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged domain="symbolic sets" id="52" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#40"/>
    </discharged>
   </proof-obligations-discharged>
  </function>
  <header time="01/10/2017 06:57:10">
   <application file="src//util.c" name="application"/>
  </header>
 </c-analysis>
