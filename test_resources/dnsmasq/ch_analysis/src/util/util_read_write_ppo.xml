<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="read_write">
   <statistics avg-context-complexity="9.77" avg-predicate-complexity="1.79" context-complexity="694" predicate-complexity="127" size="71"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="0">
     <location byte="197510" file="src/util.c" line="618"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="364"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="2" origin="prim-exp" p-complexity="0">
     <location byte="197510" file="src/util.c" line="618"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6152" vname="done"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="366"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="3" origin="prim-exp" p-complexity="1">
     <location byte="197510" file="src/util.c" line="618"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="lval" xstr="size">
       <lval>
        <lhost>
         <var vid="6149" vname="size"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="366"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="4" origin="prim-exp" p-complexity="0">
     <location byte="197510" file="src/util.c" line="618"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6149" vname="size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="366"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="5" origin="prim-exp" p-complexity="0">
     <location byte="197567" file="src/util.c" line="621"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6150" vname="rw"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" fname="read" id="6" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="nbyte" nr="3" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp>
      <exp etag="caste" name="buf" nr="2" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>buf</ci>
        <apply>
         <byte-size/>
         <ci>nbyte</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="11" fname="read" id="7" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="nbyte" nr="3" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp>
      <exp etag="caste" name="buf" nr="2" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>buf</ci>
        <apply>
         <byte-size/>
         <ci>nbyte</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="11" fname="read" id="8" name="buffersize" origin="f-pre" p-complexity="7">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid"/>
      <exp1 etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="nbyte" nr="3" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp>
      <exp etag="caste" name="buf" nr="2" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>buf</ci>
        <apply>
         <byte-size/>
         <ci>nbyte</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="9" origin="prim-exp" p-complexity="0">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6147" vname="fd"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="10" origin="prim-exp" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="iuchar" ttag="tint"/>
      <tto ttag="tvoid"/>
      <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
       <exp1 etag="lval" xstr="packet">
        <lval>
         <lhost>
          <var vid="6148" vname="packet"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="done">
        <lval>
         <lhost>
          <var vid="6152" vname="done"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuchar" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="11" origin="prim-exp" p-complexity="0">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6148" vname="packet"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="12" origin="prim-exp" p-complexity="0">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6152" vname="done"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="13" origin="prim-op" p-complexity="1">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="packet">
       <lval>
        <lhost>
         <var vid="6148" vname="packet"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="14" origin="prim-op" p-complexity="1">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="packet">
       <lval>
        <lhost>
         <var vid="6148" vname="packet"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="15" origin="prim-op" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuchar" ttag="tint"/>
      <exp1 etag="lval" xstr="packet">
       <lval>
        <lhost>
         <var vid="6148" vname="packet"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="16" origin="prim-op" p-complexity="2">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuchar" ttag="tint"/>
      <exp1 etag="lval" xstr="packet">
       <lval>
        <lhost>
         <var vid="6148" vname="packet"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="17" origin="prim-exp" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="18" origin="prim-exp" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="19" origin="prim-exp" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="20" origin="prim-exp" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate from="ilong" tag="signed-to-unsigned-cast" to="iulong">
      <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
       <exp1 etag="caste" xstr="caste (size:ssize_t)">
        <typ tname="ssize_t" ttag="tnamed"/>
        <exp etag="lval" xstr="size">
         <lval>
          <lhost>
           <var vid="6149" vname="size"/>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="lval" xstr="done">
        <lval>
         <lhost>
          <var vid="6152" vname="done"/>
         </lhost>
        </lval>
       </exp2>
       <typ tname="ssize_t" ttag="tnamed"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="21" origin="prim-exp" p-complexity="1">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="lval" xstr="size">
       <lval>
        <lhost>
         <var vid="6149" vname="size"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="22" origin="prim-exp" p-complexity="0">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6149" vname="size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="23" origin="prim-exp" p-complexity="0">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6152" vname="done"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="24" origin="prim-op" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate op="minusa" size="ilong" tag="int-underflow">
      <exp1 etag="caste" xstr="caste (size:ssize_t)">
       <typ tname="ssize_t" ttag="tnamed"/>
       <exp etag="lval" xstr="size">
        <lval>
         <lhost>
          <var vid="6149" vname="size"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="25" origin="prim-op" p-complexity="3">
     <location byte="197578" file="src/util.c" line="622"/>
     <predicate op="minusa" size="ilong" tag="int-overflow">
      <exp1 etag="caste" xstr="caste (size:ssize_t)">
       <typ tname="ssize_t" ttag="tnamed"/>
       <exp etag="lval" xstr="size">
        <lval>
         <lhost>
          <var vid="6149" vname="size"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="370"/>
       <node name="if-then"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" fname="write" id="26" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="nbyte" nr="3" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp>
      <exp etag="caste" name="buf" nr="2" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>buf</ci>
        <apply>
         <index-size/>
         <ci>nbyte</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="11" fname="write" id="27" name="buffersize" origin="f-pre" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="nbyte" nr="3" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp>
      <exp etag="caste" name="buf" nr="2" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>buf</ci>
        <apply>
         <index-size/>
         <ci>nbyte</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="11" fname="write" id="28" name="buffersize" origin="f-pre" p-complexity="7">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="nbyte" nr="3" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp>
      <exp etag="caste" name="buf" nr="2" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>buf</ci>
        <apply>
         <index-size/>
         <ci>nbyte</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="11" fname="write" id="29" name="buffersize" origin="f-pre" p-complexity="6">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </base-exp>
      <len-exp etag="caste" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="nbyte" nr="3" xstr="caste (((caste (size:ssize_t) - done):ssize_t:size_t)">
       <typ tname="size_t" ttag="tnamed"/>
       <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
        <exp1 etag="caste" xstr="caste (size:ssize_t)">
         <typ tname="ssize_t" ttag="tnamed"/>
         <exp etag="lval" xstr="size">
          <lval>
           <lhost>
            <var vid="6149" vname="size"/>
           </lhost>
          </lval>
         </exp>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ tname="ssize_t" ttag="tnamed"/>
       </exp>
      </exp>
      <exp etag="caste" name="buf" nr="2" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-read/>
        <ci>buf</ci>
        <apply>
         <index-size/>
         <ci>nbyte</ci>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="30" origin="prim-exp" p-complexity="0">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6147" vname="fd"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="31" origin="prim-exp" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="iuchar" ttag="tint"/>
      <tto ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
       <exp1 etag="lval" xstr="packet">
        <lval>
         <lhost>
          <var vid="6148" vname="packet"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="done">
        <lval>
         <lhost>
          <var vid="6152" vname="done"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuchar" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="32" origin="prim-exp" p-complexity="0">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6148" vname="packet"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="33" origin="prim-exp" p-complexity="0">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6152" vname="done"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="34" origin="prim-op" p-complexity="1">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="packet">
       <lval>
        <lhost>
         <var vid="6148" vname="packet"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="35" origin="prim-op" p-complexity="1">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="packet">
       <lval>
        <lhost>
         <var vid="6148" vname="packet"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="36" origin="prim-op" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuchar" ttag="tint"/>
      <exp1 etag="lval" xstr="packet">
       <lval>
        <lhost>
         <var vid="6148" vname="packet"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="37" origin="prim-op" p-complexity="2">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuchar" ttag="tint"/>
      <exp1 etag="lval" xstr="packet">
       <lval>
        <lhost>
         <var vid="6148" vname="packet"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="38" origin="prim-exp" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="39" origin="prim-exp" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="40" origin="prim-exp" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (((packet +i done):(unsigned char*):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp binop="indexpi" etag="binop" xstr="((packet +i done):(unsigned char*)">
        <exp1 etag="lval" xstr="packet">
         <lval>
          <lhost>
           <var vid="6148" vname="packet"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="lval" xstr="done">
         <lval>
          <lhost>
           <var vid="6152" vname="done"/>
          </lhost>
         </lval>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iuchar" ttag="tint"/>
        </typ>
       </exp>
      </exp>
      <typ ttag="tvoid">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="41" origin="prim-exp" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate from="ilong" tag="signed-to-unsigned-cast" to="iulong">
      <exp binop="minusa" etag="binop" xstr="((caste (size:ssize_t) - done):ssize_t">
       <exp1 etag="caste" xstr="caste (size:ssize_t)">
        <typ tname="ssize_t" ttag="tnamed"/>
        <exp etag="lval" xstr="size">
         <lval>
          <lhost>
           <var vid="6149" vname="size"/>
          </lhost>
         </lval>
        </exp>
       </exp1>
       <exp2 etag="lval" xstr="done">
        <lval>
         <lhost>
          <var vid="6152" vname="done"/>
         </lhost>
        </lval>
       </exp2>
       <typ tname="ssize_t" ttag="tnamed"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="42" origin="prim-exp" p-complexity="1">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ikind="ilong" ttag="tint"/>
      <exp etag="lval" xstr="size">
       <lval>
        <lhost>
         <var vid="6149" vname="size"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="43" origin="prim-exp" p-complexity="0">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6149" vname="size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="44" origin="prim-exp" p-complexity="0">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6152" vname="done"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="45" origin="prim-op" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate op="minusa" size="ilong" tag="int-underflow">
      <exp1 etag="caste" xstr="caste (size:ssize_t)">
       <typ tname="ssize_t" ttag="tnamed"/>
       <exp etag="lval" xstr="size">
        <lval>
         <lhost>
          <var vid="6149" vname="size"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="46" origin="prim-op" p-complexity="3">
     <location byte="197639" file="src/util.c" line="624"/>
     <predicate op="minusa" size="ilong" tag="int-overflow">
      <exp1 etag="caste" xstr="caste (size:ssize_t)">
       <typ tname="ssize_t" ttag="tnamed"/>
       <exp etag="lval" xstr="size">
        <lval>
         <lhost>
          <var vid="6149" vname="size"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="371"/>
       <node name="if-else"/>
       <node name="stmt" num="369"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="47" origin="prim-exp" p-complexity="0">
     <location byte="197694" file="src/util.c" line="626"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6151" vname="n"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="372"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="48" origin="prim-exp" p-complexity="0">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6151" vname="n"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="374"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="49" origin="prim-exp" p-complexity="0">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6153" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="50" origin="prim-exp" p-complexity="6">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp___0">
         <lval>
          <lhost>
           <var vid="6155" vname="tmp___0"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="51" origin="prim-exp" p-complexity="0">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6155" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="52" origin="prim-lval" p-complexity="1">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="6155" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="53" origin="prim-lval" p-complexity="1">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="6155" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="54" origin="prim-lval" p-complexity="1">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="6155" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="55" origin="prim-lval" p-complexity="1">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="6155" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="56" origin="prim-exp" p-complexity="6">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp___1">
         <lval>
          <lhost>
           <var vid="6157" vname="tmp___1"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="379"/>
       <node name="if-else"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="57" origin="prim-exp" p-complexity="0">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6157" vname="tmp___1"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="379"/>
       <node name="if-else"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="58" origin="prim-lval" p-complexity="1">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6157" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="379"/>
       <node name="if-else"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="59" origin="prim-lval" p-complexity="1">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6157" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="379"/>
       <node name="if-else"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="60" origin="prim-lval" p-complexity="1">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6157" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="379"/>
       <node name="if-else"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="12" id="61" origin="prim-lval" p-complexity="1">
     <location byte="197561" file="src/util.c" line="620"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___1">
       <lval>
        <lhost>
         <var vid="6157" vname="tmp___1"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="379"/>
       <node name="if-else"/>
       <node name="stmt" num="377"/>
       <node name="if-else"/>
       <node name="stmt" num="375"/>
       <node name="loop"/>
       <node name="stmt" num="368"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="62" origin="prim-exp" p-complexity="6">
     <location byte="197823" file="src/util.c" line="631"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="tmp___2">
         <lval>
          <lhost>
           <var vid="6159" vname="tmp___2"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="382"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="63" origin="prim-exp" p-complexity="0">
     <location byte="197823" file="src/util.c" line="631"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6159" vname="tmp___2"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="382"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="64" origin="prim-lval" p-complexity="1">
     <location byte="197823" file="src/util.c" line="631"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6159" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="382"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="65" origin="prim-lval" p-complexity="1">
     <location byte="197823" file="src/util.c" line="631"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6159" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="382"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="66" origin="prim-lval" p-complexity="1">
     <location byte="197823" file="src/util.c" line="631"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6159" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="382"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="67" origin="prim-lval" p-complexity="1">
     <location byte="197823" file="src/util.c" line="631"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___2">
       <lval>
        <lhost>
         <var vid="6159" vname="tmp___2"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="382"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="68" origin="prim-exp" p-complexity="0">
     <location byte="197510" file="src/util.c" line="618"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6152" vname="done"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="384"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="69" origin="prim-exp" p-complexity="0">
     <location byte="197510" file="src/util.c" line="618"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="6151" vname="n"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="384"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="70" origin="prim-op" p-complexity="3">
     <location byte="197510" file="src/util.c" line="618"/>
     <predicate op="plusa" size="ilong" tag="int-underflow">
      <exp1 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="n">
       <lval>
        <lhost>
         <var vid="6151" vname="n"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="384"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="71" origin="prim-op" p-complexity="3">
     <location byte="197510" file="src/util.c" line="618"/>
     <predicate op="plusa" size="ilong" tag="int-overflow">
      <exp1 etag="lval" xstr="done">
       <lval>
        <lhost>
         <var vid="6152" vname="done"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="n">
       <lval>
        <lhost>
         <var vid="6151" vname="n"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="384"/>
       <node name="loop"/>
       <node name="stmt" num="365"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:51">
   <application file="src/util.xml" name="application"/>
  </header>
 </c-analysis>
