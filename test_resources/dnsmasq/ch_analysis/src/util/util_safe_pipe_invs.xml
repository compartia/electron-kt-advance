<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="safe_pipe" stable="yes">
   <program-locations>
    <program-location>
     <locations>
      <loc byte="190557" file="src/util.c" line="257"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="167"/>
      <node name="if-then"/>
      <node name="stmt" num="166"/>
      <node name="if-then"/>
      <node name="stmt" num="165"/>
      <node name="if-else"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="15" pv="5"/>
      <inv nrv="5" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="17" pv="7"/>
      <inv nrv="4" pv="7"/>
      <inv nrv="11" pv="7"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="13" pv="28"/>
      <inv nrv="7" pv="28"/>
      <inv nrv="2" pv="19"/>
      <inv nrv="1" pv="17"/>
      <inv nrv="20" pv="17"/>
      <inv nrv="18" pv="17"/>
      <inv nrv="1" pv="18"/>
      <inv nrv="20" pv="18"/>
      <inv nrv="18" pv="18"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190557" file="src/util.c" line="257"/>
     </locations>
     <cfg-context>
      <node name="if-expr"/>
      <node name="stmt" num="168"/>
      <node name="if-then"/>
      <node name="stmt" num="166"/>
      <node name="if-then"/>
      <node name="stmt" num="165"/>
      <node name="if-else"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="15" pv="5"/>
      <inv nrv="5" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="17" pv="7"/>
      <inv nrv="4" pv="7"/>
      <inv nrv="11" pv="7"/>
      <inv nrv="16" pv="6"/>
      <inv nrv="4" pv="6"/>
      <inv nrv="11" pv="6"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="16" pv="20"/>
      <inv nrv="4" pv="20"/>
      <inv nrv="11" pv="20"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190557" file="src/util.c" line="257"/>
     </locations>
     <cfg-context>
      <node name="if-expr"/>
      <node name="stmt" num="166"/>
      <node name="if-then"/>
      <node name="stmt" num="165"/>
      <node name="if-else"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="15" pv="5"/>
      <inv nrv="5" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="17" pv="7"/>
      <inv nrv="4" pv="7"/>
      <inv nrv="11" pv="7"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="0" pv="13"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190557" file="src/util.c" line="257"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="164"/>
      <node name="if-else"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="15" pv="5"/>
      <inv nrv="5" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="14" pv="29"/>
      <inv nrv="8" pv="29"/>
      <inv nrv="6" pv="21"/>
      <inv nrv="1" pv="22"/>
      <inv nrv="20" pv="22"/>
      <inv nrv="18" pv="22"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190557" file="src/util.c" line="257"/>
     </locations>
     <cfg-context>
      <node name="if-expr"/>
      <node name="stmt" num="165"/>
      <node name="if-else"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="15" pv="5"/>
      <inv nrv="5" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="17" pv="7"/>
      <inv nrv="4" pv="7"/>
      <inv nrv="11" pv="7"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="17" pv="23"/>
      <inv nrv="4" pv="23"/>
      <inv nrv="11" pv="23"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190557" file="src/util.c" line="257"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="161"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="12" pv="27"/>
      <inv nrv="1" pv="12"/>
      <inv nrv="20" pv="12"/>
      <inv nrv="18" pv="12"/>
      <inv nrv="1" pv="11"/>
      <inv nrv="20" pv="11"/>
      <inv nrv="18" pv="11"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190557" file="src/util.c" line="257"/>
     </locations>
     <cfg-context>
      <node name="if-expr"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="15" pv="5"/>
      <inv nrv="5" pv="5"/>
      <inv nrv="21" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="15" pv="24"/>
      <inv nrv="5" pv="24"/>
      <inv nrv="21" pv="24"/>
      <inv nrv="9" pv="24"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190647" file="src/util.c" line="260"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="169"/>
      <node name="if-else"/>
      <node name="stmt" num="168"/>
      <node name="if-then"/>
      <node name="stmt" num="166"/>
      <node name="if-then"/>
      <node name="stmt" num="165"/>
      <node name="if-else"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="15" pv="5"/>
      <inv nrv="5" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="17" pv="7"/>
      <inv nrv="4" pv="7"/>
      <inv nrv="11" pv="7"/>
      <inv nrv="16" pv="6"/>
      <inv nrv="4" pv="6"/>
      <inv nrv="11" pv="6"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="19" pv="33"/>
      <inv nrv="2" pv="9"/>
      <inv nrv="2" pv="10"/>
      <inv nrv="22" pv="37"/>
      <inv nrv="19" pv="32"/>
      <inv nrv="2" pv="8"/>
      <inv nrv="19" pv="40"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190647" file="src/util.c" line="260"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="170"/>
      <node name="if-else"/>
      <node name="stmt" num="165"/>
      <node name="if-else"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="15" pv="5"/>
      <inv nrv="5" pv="5"/>
      <inv nrv="2" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="17" pv="7"/>
      <inv nrv="4" pv="7"/>
      <inv nrv="11" pv="7"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="19" pv="35"/>
      <inv nrv="2" pv="15"/>
      <inv nrv="2" pv="16"/>
      <inv nrv="22" pv="38"/>
      <inv nrv="19" pv="34"/>
      <inv nrv="2" pv="14"/>
      <inv nrv="19" pv="41"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="190647" file="src/util.c" line="260"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="163"/>
      <node name="if-then"/>
      <node name="stmt" num="162"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="20" pv="1"/>
      <inv nrv="18" pv="1"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="3" pv="5"/>
      <inv nrv="9" pv="5"/>
      <inv nrv="13" pv="25"/>
      <inv nrv="7" pv="25"/>
      <inv nrv="14" pv="26"/>
      <inv nrv="8" pv="26"/>
      <inv nrv="10" pv="27"/>
      <inv nrv="19" pv="31"/>
      <inv nrv="2" pv="3"/>
      <inv nrv="2" pv="4"/>
      <inv nrv="22" pv="36"/>
      <inv nrv="19" pv="30"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="19" pv="39"/>
     </invariants>
    </program-location>
   </program-locations>
   <program-value-table size="42">
    <pvals index="0">
     <pval>
      <lhost>
       <var vid="5974" vname="read_noblock"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="1">
     <pval>
      <lhost>
       <var vid="5973" vname="fd"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="2">
     <pval arg="1" id="16"/>
     <pval arg="2" id="17"/>
     <pval arg="2" id="18"/>
    </pvals>
    <pvals index="3">
     <pval arg="3" id="14"/>
    </pvals>
    <pvals index="4">
     <pval arg="3" id="15"/>
    </pvals>
    <pvals index="5">
     <pval>
      <lhost>
       <var vid="5975" vname="tmp"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="6">
     <pval>
      <lhost>
       <var vid="5979" vname="tmp___1"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="7">
     <pval>
      <lhost>
       <var vid="5977" vname="tmp___0"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="8">
     <pval arg="1" id="48"/>
     <pval arg="2" id="49"/>
     <pval arg="2" id="50"/>
    </pvals>
    <pvals index="9">
     <pval arg="3" id="46"/>
    </pvals>
    <pvals index="10">
     <pval arg="3" id="47"/>
    </pvals>
    <pvals index="11">
     <pval arg="1" id="1"/>
     <pval arg="2" id="2"/>
     <pval arg="2" id="3"/>
     <pval arg="1" id="6"/>
     <pval arg="2" id="7"/>
     <pval arg="2" id="8"/>
    </pvals>
    <pvals index="12">
     <pval arg="3" id="4"/>
     <pval arg="1" id="5"/>
    </pvals>
    <pvals index="13">
     <pval arg="1" id="30"/>
    </pvals>
    <pvals index="14">
     <pval arg="1" id="57"/>
     <pval arg="2" id="58"/>
     <pval arg="2" id="59"/>
    </pvals>
    <pvals index="15">
     <pval arg="3" id="55"/>
    </pvals>
    <pvals index="16">
     <pval arg="3" id="56"/>
    </pvals>
    <pvals index="17">
     <pval arg="1" id="37"/>
     <pval arg="1" id="38"/>
     <pval arg="2" id="39"/>
     <pval arg="2" id="40"/>
    </pvals>
    <pvals index="18">
     <pval arg="1" id="32"/>
     <pval arg="1" id="33"/>
     <pval arg="1" id="34"/>
     <pval arg="3" id="35"/>
     <pval arg="3" id="36"/>
    </pvals>
    <pvals index="19">
     <pval arg="4" id="35"/>
     <pval arg="4" id="36"/>
    </pvals>
    <pvals index="20">
     <pval arg="1" id="41"/>
    </pvals>
    <pvals index="21">
     <pval arg="4" id="23"/>
     <pval arg="4" id="24"/>
    </pvals>
    <pvals index="22">
     <pval arg="1" id="20"/>
     <pval arg="1" id="21"/>
     <pval arg="1" id="22"/>
     <pval arg="3" id="23"/>
     <pval arg="3" id="24"/>
    </pvals>
    <pvals index="23">
     <pval arg="1" id="29"/>
    </pvals>
    <pvals index="24">
     <pval arg="1" id="9"/>
    </pvals>
    <pvals index="25">
     <pval>
      <lhost>
       <mem binop="indexpi" etag="binop" xstr="((fd +i 0):(int*)">
        <exp1 etag="lval" xstr="fd">
         <lval>
          <lhost>
           <var vid="5973" vname="fd"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iint" ttag="tint"/>
        </typ>
       </mem>
      </lhost>
     </pval>
    </pvals>
    <pvals index="26">
     <pval>
      <lhost>
       <mem binop="indexpi" etag="binop" xstr="((fd +i 1):(int*)">
        <exp1 etag="lval" xstr="fd">
         <lval>
          <lhost>
           <var vid="5973" vname="fd"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iint" ttag="tint"/>
        </typ>
       </mem>
      </lhost>
     </pval>
    </pvals>
    <pvals index="27">
     <pval etag="lval" external="yes" property="vm" xstr="fd">
      <lval>
       <lhost>
        <var vid="5973" vname="fd"/>
       </lhost>
      </lval>
     </pval>
    </pvals>
    <pvals index="28">
     <pval arg="1" id="31"/>
    </pvals>
    <pvals index="29">
     <pval arg="1" id="19"/>
    </pvals>
    <pvals index="30">
     <pval arg="1" id="11"/>
     <pval arg="2" id="12"/>
     <pval arg="2" id="13"/>
    </pvals>
    <pvals index="31">
     <pval arg="3" id="10"/>
    </pvals>
    <pvals index="32">
     <pval arg="1" id="43"/>
     <pval arg="2" id="44"/>
     <pval arg="2" id="45"/>
    </pvals>
    <pvals index="33">
     <pval arg="3" id="42"/>
    </pvals>
    <pvals index="34">
     <pval arg="1" id="52"/>
     <pval arg="2" id="53"/>
     <pval arg="2" id="54"/>
    </pvals>
    <pvals index="35">
     <pval arg="3" id="51"/>
    </pvals>
    <pvals index="36">
     <pval arg="4" id="60"/>
    </pvals>
    <pvals index="37">
     <pval arg="4" id="62"/>
    </pvals>
    <pvals index="38">
     <pval arg="4" id="64"/>
    </pvals>
    <pvals index="39">
     <pval arg="1" id="11"/>
     <pval arg="2" id="12"/>
     <pval arg="2" id="13"/>
     <pval arg="3" id="60"/>
     <pval arg="1" id="61"/>
    </pvals>
    <pvals index="40">
     <pval arg="1" id="43"/>
     <pval arg="2" id="44"/>
     <pval arg="2" id="45"/>
     <pval arg="3" id="62"/>
     <pval arg="1" id="63"/>
    </pvals>
    <pvals index="41">
     <pval arg="1" id="52"/>
     <pval arg="2" id="53"/>
     <pval arg="2" id="54"/>
     <pval arg="3" id="64"/>
     <pval arg="1" id="65"/>
    </pvals>
   </program-value-table>
   <non-relational-value-table size="23">
    <nrv etag="lval" index="0" tag="fv" xstr="read_noblock">
     <lval>
      <lhost>
       <var vid="5974" vname="read_noblock"/>
      </lhost>
     </lval>
    </nrv>
    <nrv etag="lval" index="1" tag="fv" xstr="fd">
     <lval>
      <lhost>
       <var vid="5973" vname="fd"/>
      </lhost>
     </lval>
    </nrv>
    <nrv index="2" tag="range" value="0"/>
    <nrv index="3" tag="range" value="-1"/>
    <nrv byte="190557" etag="fnapp" file="src/util.c" index="4" line="257" tag="fv" xstr="fn(fix_fd)@ 257[_]">
     <arg/>
     <fn etag="lval" xstr="fix_fd">
      <lval>
       <lhost>
        <var vid="5123" vname="fix_fd"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv byte="190557" etag="fnapp" file="src/util.c" index="5" line="257" tag="fv" xstr="fn(pipe)@ 257[_]">
     <arg/>
     <fn etag="lval" xstr="pipe">
      <lval>
       <lhost>
        <var vid="1828" vname="pipe"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv index="6" tag="range" value="1"/>
    <nrv index="7" tag="ss">
     <sym name="parameter">
      <attr value="*(((lval (fd) +i 0):(int*))"/>
     </sym>
    </nrv>
    <nrv index="8" tag="ss">
     <sym name="parameter">
      <attr value="*(((lval (fd) +i 1):(int*))"/>
     </sym>
    </nrv>
    <nrv index="9" tag="ss">
     <sym name="assignedAt#257">
      <attr value="return-value"/>
      <attr value="pipe"/>
     </sym>
    </nrv>
    <nrv index="10" tag="ss">
     <sym name="invalid"/>
    </nrv>
    <nrv index="11" tag="ss">
     <sym name="assignedAt#257">
      <attr value="return-value"/>
      <attr value="fix_fd"/>
     </sym>
    </nrv>
    <nrv index="12" tag="ss">
     <sym name="valid"/>
    </nrv>
    <nrv etag="lval" index="13" tag="fv" xstr="*(((lval (fd) +i 0):(int*))">
     <lval>
      <lhost>
       <mem binop="indexpi" etag="binop" xstr="((fd +i 0):(int*)">
        <exp1 etag="lval" xstr="fd">
         <lval>
          <lhost>
           <var vid="5973" vname="fd"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="0">
         <constant ctag="cint64" ikind="iint" intValue="0"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iint" ttag="tint"/>
        </typ>
       </mem>
      </lhost>
     </lval>
    </nrv>
    <nrv etag="lval" index="14" tag="fv" xstr="*(((lval (fd) +i 1):(int*))">
     <lval>
      <lhost>
       <mem binop="indexpi" etag="binop" xstr="((fd +i 1):(int*)">
        <exp1 etag="lval" xstr="fd">
         <lval>
          <lhost>
           <var vid="5973" vname="fd"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iint" intValue="1"/>
        </exp2>
        <typ ttag="tptr">
         <typ ikind="iint" ttag="tint"/>
        </typ>
       </mem>
      </lhost>
     </lval>
    </nrv>
    <nrv byte="190557" etag="fnapp" file="src/util.c" index="15" line="257" tag="fv" xstr="fn(pipe)@ 257[caste (fd:(int*))]">
     <arg etag="caste" xstr="caste (fd:(int*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="arraylen"/>
       </attributes>
       <typ ikind="iint" ttag="tint"/>
      </typ>
      <exp etag="lval" xstr="fd">
       <lval>
        <lhost>
         <var vid="5973" vname="fd"/>
        </lhost>
       </lval>
      </exp>
     </arg>
     <fn etag="lval" xstr="pipe">
      <lval>
       <lhost>
        <var vid="1828" vname="pipe"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv byte="190557" etag="fnapp" file="src/util.c" index="16" line="257" tag="fv" xstr="fn(fix_fd)@ 257[*(((lval (fd) +i 0):(int*))]">
     <arg etag="lval" xstr="*(((lval (fd) +i 0):(int*))">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((fd +i 0):(int*)">
         <exp1 etag="lval" xstr="fd">
          <lval>
           <lhost>
            <var vid="5973" vname="fd"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="0">
          <constant ctag="cint64" ikind="iint" intValue="0"/>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="iint" ttag="tint"/>
         </typ>
        </mem>
       </lhost>
      </lval>
     </arg>
     <fn etag="lval" xstr="fix_fd">
      <lval>
       <lhost>
        <var vid="5123" vname="fix_fd"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv byte="190557" etag="fnapp" file="src/util.c" index="17" line="257" tag="fv" xstr="fn(fix_fd)@ 257[*(((lval (fd) +i 1):(int*))]">
     <arg etag="lval" xstr="*(((lval (fd) +i 1):(int*))">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((fd +i 1):(int*)">
         <exp1 etag="lval" xstr="fd">
          <lval>
           <lhost>
            <var vid="5973" vname="fd"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="const" xstr="1">
          <constant ctag="cint64" ikind="iint" intValue="1"/>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="iint" ttag="tint"/>
         </typ>
        </mem>
       </lhost>
      </lval>
     </arg>
     <fn etag="lval" xstr="fix_fd">
      <lval>
       <lhost>
        <var vid="5123" vname="fix_fd"/>
       </lhost>
      </lval>
     </fn>
    </nrv>
    <nrv address-type="external" index="18" tag="vs" value="0">
     <base etag="lval" xstr="fd">
      <lval>
       <lhost>
        <var vid="5973" vname="fd"/>
       </lhost>
      </lval>
     </base>
    </nrv>
    <nrv index="19" lb="1" tag="range"/>
    <nrv index="20" lb="0" tag="range"/>
    <nrv index="21" lb="-1" tag="range" ub="0"/>
    <nrv cn="null-terminator-pos" etag="cnapp" index="22" tag="fv" xstr="null-terminator-pos[caste (caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*)):(char*))]">
     <arg etag="caste" xstr="caste (caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*)):(char*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="restrict"/>
       </attributes>
       <typ ikind="ichar" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
      <exp etag="caste" xstr="caste (caste (&quot;cannot create pipe: %s&quot;:(char*)):(char*))">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="caste" xstr="caste (&quot;cannot create pipe: %s&quot;:(char*))">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
        <exp etag="const" xstr="&quot;cannot create pipe: %s&quot;">
         <constant ctag="cstr" strValue="cannot create pipe: %s"/>
        </exp>
       </exp>
      </exp>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
   </non-relational-value-table>
  </function>
  <header time="01/10/2017 03:38:54">
   <application file="src/util.c" name="application"/>
  </header>
 </c-analysis>
