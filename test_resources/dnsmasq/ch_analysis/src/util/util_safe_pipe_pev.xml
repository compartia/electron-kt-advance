<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <log>
   <log-entry time="01/10/2017 06:57:10"/>
   <log-entry time="01/10/2017 05:33:05"/>
   <log-entry time="01/10/2017 05:21:42"/>
   <log-entry time="01/10/2017 04:59:56"/>
   <log-entry time="01/10/2017 04:36:40"/>
   <log-entry time="01/10/2017 03:42:55"/>
   <log-entry time="01/10/2017 02:54:45"/>
   <log-entry time="01/09/2017 22:53:12"/>
   <log-entry delta-checkvalid="43" delta-invariant="8" delta-lifted="6" time="01/09/2017 22:06:25"/>
  </log>
  <function name="safe_pipe">
   <statistics checkvalid="43" invariant="8" invariant_with_api="6" total="59" total-proven="57"/>
   <open-proof-obligations>
    <open id="22" line="257" predicate="valid-mem"/>
    <open id="34" line="257" predicate="valid-mem"/>
   </open-proof-obligations>
   <proof-obligations-discharged>
    <discharged domain="linear equalities" id="1" method="invariants" time="01/09/2017 22:06:25" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="2" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="valuesets" id="2" method="invariants" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="non-negative offset from base value: fd"/>
    </discharged>
    <discharged domain="valuesets" id="3" method="invariants" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="externally provided address; dereferencability is checked as part of precondition"/>
    </discharged>
    <discharged id="4" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="5" method="check-valid" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="fd is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="6" method="invariants" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="external address provided by parameter still points to valid memory"/>
    </discharged>
    <discharged domain="valuesets" id="7" method="invariants" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="non-negative offset from base value: fd"/>
    </discharged>
    <discharged domain="valuesets" id="8" method="invariants" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="externally provided address; dereferencability is checked as part of precondition"/>
    </discharged>
    <discharged domain="symbolic sets" id="9" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#257"/>
    </discharged>
    <discharged id="10" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="11" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="12" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="13" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="14" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="null-terminator cast"/>
    </discharged>
    <discharged id="15" method="check-valid" time="01/09/2017 22:06:25" type="cast">
     <evidence comment="null-pointer cast"/>
    </discharged>
    <discharged id="16" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="null pointer is a valid memory pointer"/>
    </discharged>
    <discharged id="17" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged id="18" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged domain="linear equalities" id="19" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="20" method="check-valid" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="fd is a function parameter"/>
    </discharged>
    <discharged domain="linear equalities" id="21" method="invariants" time="01/09/2017 22:06:25" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="2" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="23" method="check-valid" time="01/09/2017 22:06:25" type="ptr-lower-bound">
     <evidence comment="add non-negative number: value is 1"/>
    </discharged>
    <discharged domain="valuesets" id="24" method="invariants" time="01/09/2017 22:06:25" type="ptr-upper-bound-deref">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="3" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="25" method="check-valid" time="01/09/2017 22:06:25" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="26" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="27" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="28" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </discharged>
    <discharged domain="symbolic sets" id="29" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#257"/>
    </discharged>
    <discharged id="30" method="check-valid" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="read_noblock is a function parameter"/>
    </discharged>
    <discharged domain="linear equalities" id="31" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="4" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="32" method="check-valid" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="fd is a function parameter"/>
    </discharged>
    <discharged domain="linear equalities" id="33" method="invariants" time="01/09/2017 22:06:25" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="2" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="35" method="check-valid" time="01/09/2017 22:06:25" type="ptr-lower-bound">
     <evidence comment="add non-negative number: value is 0"/>
    </discharged>
    <discharged id="36" method="check-valid" time="01/09/2017 22:06:25" type="ptr-upper-bound-deref">
     <evidence comment="add zero"/>
    </discharged>
    <discharged id="37" method="check-valid" time="01/09/2017 22:06:25" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="38" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="39" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="40" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </discharged>
    <discharged domain="symbolic sets" id="41" method="invariants" time="01/09/2017 22:06:25" type="initialized">
     <evidence comment="assignedAt#257"/>
    </discharged>
    <discharged id="42" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="43" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="44" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="45" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="46" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="null-terminator cast"/>
    </discharged>
    <discharged id="47" method="check-valid" time="01/09/2017 22:06:25" type="cast">
     <evidence comment="null-pointer cast"/>
    </discharged>
    <discharged id="48" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="null pointer is a valid memory pointer"/>
    </discharged>
    <discharged id="49" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged id="50" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged id="51" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="52" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="53" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="54" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="55" method="check-valid" time="01/09/2017 22:06:25" type="pointer-cast">
     <evidence comment="null-terminator cast"/>
    </discharged>
    <discharged id="56" method="check-valid" time="01/09/2017 22:06:25" type="cast">
     <evidence comment="null-pointer cast"/>
    </discharged>
    <discharged id="57" method="check-valid" time="01/09/2017 22:06:25" type="valid-mem">
     <evidence comment="null pointer is a valid memory pointer"/>
    </discharged>
    <discharged id="58" method="check-valid" time="01/09/2017 22:06:25" type="lower-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
    <discharged id="59" method="check-valid" time="01/09/2017 22:06:25" type="upper-bound">
     <evidence comment="null pointer does not violate bounds"/>
    </discharged>
   </proof-obligations-discharged>
  </function>
  <header time="01/10/2017 06:57:10">
   <application file="src//util.c" name="application"/>
  </header>
 </c-analysis>
