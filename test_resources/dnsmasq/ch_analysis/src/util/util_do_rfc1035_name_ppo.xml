<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="do_rfc1035_name">
   <statistics avg-context-complexity="7.47" avg-predicate-complexity="1.17" context-complexity="568" predicate-complexity="89" size="76"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="5" id="1" origin="prim-exp" p-complexity="0">
     <location byte="190157" file="src/util.c" line="225"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="sval"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="2" origin="prim-exp" p-complexity="6">
     <location byte="190157" file="src/util.c" line="225"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="sval">
         <lval>
          <lhost>
           <var vid="5959" vname="sval"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="3" origin="prim-exp" p-complexity="0">
     <location byte="190157" file="src/util.c" line="225"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="sval"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="4" origin="prim-lval" p-complexity="1">
     <location byte="190157" file="src/util.c" line="225"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="5" origin="prim-lval" p-complexity="1">
     <location byte="190157" file="src/util.c" line="225"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="6" origin="prim-lval" p-complexity="1">
     <location byte="190157" file="src/util.c" line="225"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="7" origin="prim-lval" p-complexity="1">
     <location byte="190157" file="src/util.c" line="225"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="143"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="8" origin="prim-exp" p-complexity="0">
     <location byte="190191" file="src/util.c" line="227"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="146"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="9" origin="prim-exp" p-complexity="0">
     <location byte="190191" file="src/util.c" line="227"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="10" origin="prim-op" p-complexity="1">
     <location byte="190191" file="src/util.c" line="227"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="11" origin="prim-op" p-complexity="1">
     <location byte="190191" file="src/util.c" line="227"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="12" origin="prim-op" p-complexity="2">
     <location byte="190191" file="src/util.c" line="227"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="iuchar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="13" origin="prim-op" p-complexity="1">
     <location byte="190191" file="src/util.c" line="227"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="iuchar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="146"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="14" origin="prim-exp" p-complexity="0">
     <location byte="190191" file="src/util.c" line="227"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5962" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="146"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="15" origin="prim-exp" p-complexity="6">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="sval">
         <lval>
          <lhost>
           <var vid="5959" vname="sval"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="16" origin="prim-exp" p-complexity="0">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="sval"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="17" origin="prim-lval" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="18" origin="prim-lval" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="19" origin="prim-lval" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="20" origin="prim-lval" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="21" origin="prim-exp" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="iint" ttag="tint"/>
      <exp etag="lval" xstr="(*sval)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="sval">
          <lval>
           <lhost>
            <var vid="5959" vname="sval"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="22" origin="prim-exp" p-complexity="6">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="sval">
         <lval>
          <lhost>
           <var vid="5959" vname="sval"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="23" origin="prim-exp" p-complexity="0">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="sval"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="24" origin="prim-lval" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="25" origin="prim-lval" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="26" origin="prim-lval" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="27" origin="prim-lval" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="28" origin="prim-exp" p-complexity="0">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="29" origin="prim-exp" p-complexity="0">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="30" origin="prim-op" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="31" origin="prim-op" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="32" origin="prim-op" p-complexity="2">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="iuchar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="33" origin="prim-op" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="iuchar" ttag="tint"/>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="34" origin="prim-exp" p-complexity="0">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5964" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="35" origin="prim-lval" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="5964" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="36" origin="prim-lval" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="5964" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="37" origin="prim-lval" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="5964" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iuchar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="38" origin="prim-lval" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="tmp___0">
       <lval>
        <lhost>
         <var vid="5964" vname="tmp___0"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iuchar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="39" origin="prim-exp" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="iuchar" ttag="tint"/>
      <exp etag="lval" xstr="(*sval)">
       <lval>
        <lhost>
         <mem etag="lval" xstr="sval">
          <lval>
           <lhost>
            <var vid="5959" vname="sval"/>
           </lhost>
          </lval>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="40" origin="prim-exp" p-complexity="6">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="sval">
         <lval>
          <lhost>
           <var vid="5959" vname="sval"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="41" origin="prim-exp" p-complexity="0">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="sval"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="42" origin="prim-lval" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="43" origin="prim-lval" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="44" origin="prim-lval" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="45" origin="prim-lval" p-complexity="1">
     <location byte="190285" file="src/util.c" line="235"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="46" origin="prim-exp" p-complexity="0">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="sval"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="47" origin="prim-op" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="48" origin="prim-op" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="49" origin="prim-op" p-complexity="2">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="50" origin="prim-op" p-complexity="1">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="51" origin="prim-exp" p-complexity="0">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5960" vname="j"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="52" origin="prim-op" p-complexity="2">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="5960" vname="j"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="10" id="53" origin="prim-op" p-complexity="2">
     <location byte="190222" file="src/util.c" line="228"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="5960" vname="j"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="152"/>
       <node name="loop"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="54" origin="prim-exp" p-complexity="0">
     <location byte="190308" file="src/util.c" line="237"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5961" vname="cp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="153"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="55" origin="prim-lval" p-complexity="1">
     <location byte="190308" file="src/util.c" line="237"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="cp">
       <lval>
        <lhost>
         <var vid="5961" vname="cp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="153"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="56" origin="prim-lval" p-complexity="1">
     <location byte="190308" file="src/util.c" line="237"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="cp">
       <lval>
        <lhost>
         <var vid="5961" vname="cp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="153"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="57" origin="prim-lval" p-complexity="1">
     <location byte="190308" file="src/util.c" line="237"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="cp">
       <lval>
        <lhost>
         <var vid="5961" vname="cp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iuchar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="153"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="58" origin="prim-lval" p-complexity="1">
     <location byte="190308" file="src/util.c" line="237"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="cp">
       <lval>
        <lhost>
         <var vid="5961" vname="cp"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iuchar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="153"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="59" origin="prim-exp" p-complexity="1">
     <location byte="190308" file="src/util.c" line="237"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuchar">
      <exp etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="5960" vname="j"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="153"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="60" origin="prim-exp" p-complexity="0">
     <location byte="190308" file="src/util.c" line="237"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5960" vname="j"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="153"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="61" origin="prim-exp" p-complexity="6">
     <location byte="190323" file="src/util.c" line="238"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem etag="lval" xstr="sval">
         <lval>
          <lhost>
           <var vid="5959" vname="sval"/>
          </lhost>
         </lval>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="62" origin="prim-exp" p-complexity="0">
     <location byte="190323" file="src/util.c" line="238"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="sval"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="63" origin="prim-lval" p-complexity="1">
     <location byte="190323" file="src/util.c" line="238"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="64" origin="prim-lval" p-complexity="1">
     <location byte="190323" file="src/util.c" line="238"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="65" origin="prim-lval" p-complexity="1">
     <location byte="190323" file="src/util.c" line="238"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="66" origin="prim-lval" p-complexity="1">
     <location byte="190323" file="src/util.c" line="238"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="67" origin="prim-exp" p-complexity="0">
     <location byte="190335" file="src/util.c" line="239"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5959" vname="sval"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="155"/>
       <node name="if-then"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="68" origin="prim-op" p-complexity="1">
     <location byte="190335" file="src/util.c" line="239"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="155"/>
       <node name="if-then"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="69" origin="prim-op" p-complexity="1">
     <location byte="190335" file="src/util.c" line="239"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="155"/>
       <node name="if-then"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="70" origin="prim-op" p-complexity="2">
     <location byte="190335" file="src/util.c" line="239"/>
     <predicate op="pluspi" tag="ptr-lower-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="155"/>
       <node name="if-then"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="71" origin="prim-op" p-complexity="1">
     <location byte="190335" file="src/util.c" line="239"/>
     <predicate op="pluspi" tag="ptr-upper-bound-deref">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="lval" xstr="sval">
       <lval>
        <lhost>
         <var vid="5959" vname="sval"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="155"/>
       <node name="if-then"/>
       <node name="stmt" num="154"/>
       <node name="loop"/>
       <node name="stmt" num="141"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="72" origin="prim-exp" p-complexity="0">
     <location byte="190351" file="src/util.c" line="241"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="5958" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="156"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="73" origin="prim-exp" p-complexity="1">
     <location byte="190351" file="src/util.c" line="241"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="156"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="74" origin="prim-exp" p-complexity="1">
     <location byte="190351" file="src/util.c" line="241"/>
     <predicate tag="global-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="156"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="75" origin="prim-exp" p-complexity="1">
     <location byte="190351" file="src/util.c" line="241"/>
     <predicate tag="lower-bound">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iuchar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="156"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="76" origin="prim-exp" p-complexity="1">
     <location byte="190351" file="src/util.c" line="241"/>
     <predicate tag="upper-bound">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="5958" vname="p"/>
        </lhost>
       </lval>
      </exp>
      <typ ikind="iuchar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="return"/>
       <node name="stmt" num="156"/>
      </cfg-context>
      <exp-context/>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="01/09/2017 21:38:51">
   <application file="src/util.xml" name="application"/>
  </header>
 </c-analysis>
